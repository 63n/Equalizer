
This file lists all changes in the public Equalizer API, latest on top:

22/Nov/2010
  in Session remove setIDMaster and unsetIDMaster
   
  modify attachToSession for layout, canvas, window, pipe, node, frameData,
  channel and Object. 
   virtual void attachToSession( const base::UUID& id,
                                 const uint32_t instanceID,
                                 net::Session* session );
		replace
   
   virtual void attachToSession( const uint32_t id, 
                                 const uint32_t instanceID,
                                 net::Session* session );

  modify frameID type for the functions : frameReadback, frameAssemble, 
   frameDraw, frameClear, frameStart, startFrame, frameViewStart, 
   frameViewFinish, frameFinish, frameDrawFinish, frameTasksFinish 
   in the classes window, channel, pipe, node and config.  
     
     virtual void frameXXXX( const eq::uint128_t& frameID, XXXX );
     
       Replace  
     
     virtual void frameXXX( const eq::uint128_t& frameID, XXXX );
    
modify configInit in pipe, window, channel and config
  virtual bool configInit( const eq::uint128_t& initID );
    replace
  virtual bool configInit( const uint32_t initID );

in pipe.h 
  virtual bool configInitSystemPipe( const uint128_t& initID );
    replace
  virtual bool configInitSystemPipe( const uint32_t initID );

in Window.h 
  virtual bool configInitSystemWindow( const eq::uint128_t& initID );
  virtual bool configInitGL( const eq::uint128_t& initID );
    replaces
  virtual bool configInitSystemWindow( const uint32_t initID );
  virtual bool configInitGL( const uint32_t initID );

  
in Session.h
  const NodeID getIDMaster( const base::UUID& id );									 
  bool mapObject( Object* object, const base::UUID& id, 
                  const uint128_t& version = VERSION_OLDEST );									   
  uint32_t mapObjectNB( Object* object, const base::UUID& id, 
                        const uint128_t& version = VERSION_OLDEST );										
  void attachObject( Object* object, const base::UUID& id, 
                     const uint32_t instanceID );
     replaces
  void attachObject( Object* object, const uint32_t id, 
                     const uint32_t instanceID );
  uint32_t mapObjectNB( Object* object, const uint32_t id,
                        const uint128_t& version = VERSION_OLDEST );
  bool mapObject( Object* object, const uint32_t id, 
                  const uint128_t& version = VERSION_OLDEST );
  const NodeID getIDMaster( const uint32_t id );

in ObjectVersion.h
  ObjectVersion( const uint128_t& identifier, const uint128_t& version );
    replace
  ObjectVersion( const uint32_t identifier, const uint32_t version );
                                 
in Object.h
  virtual void notifyNewHeadVersion( const uint128_t& version );
  uint128_t getOldestVersion() const;
  uint128_t getVersion() const;
  uint128_t getHeadVersion() const;
  uint128_t sync( const uint128_t& version = VERSION_HEAD );
  virtual uint128_t commitSync( const uint32_t commitID );
  uint128_t commit();
  base::UUID getID() const
     replaces
  uint32_t commit();
  virtual uint32_t commitSync( const uint32_t commitID );
  uint32_t sync( const uint32_t version = VERSION_HEAD );
  uint32_t getHeadVersion() const;
  uint32_t getVersion() const;
  uint32_t getOldestVersion() const;
  virtual void notifyNewHeadVersion( const uint32_t version );
  uint32_t getID() const

in instanceCache.h					
  bool erase( const base::UUID& id );
  bool release( const base::UUID& id, const uint32_t count = 1 );
  const Data& operator[]( const base::UUID& id );
     replaces
  const Data& operator[]( const uint32_t id );
  bool release( const uint32_t id, const uint32_t count = 1 );
  bool erase( const uint32_t id );

19/Nov/2010
  The GLXEventHandler is new per-window. Event handler init/exit has
  been moved from GLXPipe to GLXWindow and the GLXEventHandler API has
  changed accordingly.
  
15/Nov/2010
  Statistic::CHANNEL_FRAME_WAIT_READY replaces Statistic::CHANNEL_WAIT_FRAME

02/Nov/2010
  void fabric::Object::setError( const int32_t error )
  base::Error fabric::Object::getError() const
    replace
  void fabric::Object::setErrorMessage( const std::string& error )
  const std::string& fabric::Object::getErrorMessage() const

29/Oct/2010
  void FrameData::setZoom( const Zoom& zoom );
  const Zoom& FrameData::getZoom() const;
    replace
  void Frame::setInputZoom( const Zoom& zoom );
  const Zoom& Frame::getInputZoom() const;


25/Oct/2010
  Error util::FrameBufferObject::getError() const;
  Error ComputeContext::getError() const;
  void ComputeContext::setError( const uint32_t error );
    replaces
  const std::string& util::FrameBufferObject::getErrorMessage() const;
  const std::string& ComputeContext::getErrorMessage() const;
  void ComputeContext::setErrorMessage( const std::string& errorMessage );

20/Oct/2010
  void PluginRegistry::addDirectory( const std::string& path );
  void PluginRegistry::removeDirectory( const std::string& path );
  const Strings& PluginRegistry::getDirectories() const;
    replaces
  const Strings& Global::getPluginDirectories();
  static void Global::addPluginDirectory( const std::string&
  static void Global::removePluginDirectory( const std::string& path );


19/Oct/2010
  eq::net::Node::disconnect( NodePtr ) replaces ::close( NodePtr )

18/Oct/2010
  eq::PixelData replaces eq::Image::PixelData
    eq::Image method signatures change accordingly

07/Oct/2010
  removed eq::net::Object::makeThreadSafe and isThreadSafe
    application has to lock sync(), if needed
  eq::net::Object::getAutoObsolete replaces getAutoObsoleteCount
  
06/Oct/2010
  void eq::Client::clientLoop
  void eq::Client::exitClient
    replaces
  bool eq::net::Node::clientLoop
  bool eq::net::Node::exitClient
