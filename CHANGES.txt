
This file lists all changes in the public Equalizer API, latest on top:

29/Nov/2010
  No automatic listener connections are created for the application
  node. Existing multi-node configs will fail if they do not configure a
  listener. AppNode listeners can be added either by specifying them in
  the configuration filem by using the --eq-listen command line option
  or programmatically by adding connection descriptions before
  Client::initLocal().

  Image::setAlphaUsage
  Image::getAlphaUsage
  Image::upload( buffer, texture, position, objectManager )
    replaces
  Image::enableAlphaUsage
  Image::disableAlphaUsage
  Image::ignoreAlpha
  Image::upload( buffer, position, objectManager )
  Image::upload( buffer, texture, objectManager )

  Image::hasData is removed
  

22/Nov/2010
  Replace object identifiers with UUIDs
    Replace defines EQ_ID_INVALID with the new type by UUID::ZERO for object identifiers
    Removed defines EQ_ID_MAX, NONE, INVALID, ANY for object identifiers
  Replace object versions with uint128_t
    Master versions have always 0 for the 64bit high value

  change frameID type to uint128_t for methods: frameReadback, frameAssemble, 
   frameDraw, frameClear, frameStart, startFrame, frameViewStart, 
   frameViewFinish, frameFinish, frameDrawFinish, frameTasksFinish 
   in the classes window, channel, pipe, node and config.  
    
  change initID type to uint128_t for configInit in pipe, window,
  channel and config

  bool Pipe::configInitSystemPipe( const uint128_t& initID );
  bool Window::configInitSystemWindow( const eq::uint128_t& initID );
  bool Window::configInitGL( const eq::uint128_t& initID );
  bool Session::mapObject( Object* object, const base::UUID& id, 
                           const uint128_t& version = VERSION_OLDEST ); 
  uint32_t Session::mapObjectNB( Object* object, const base::UUID& id, 
                                 const uint128_t& version = VERSION_OLDEST ); 
  void Object::notifyNewHeadVersion( const uint128_t& version );
  uint128_t Object::getOldestVersion() const;
  uint128_t Object::getVersion() const;
  uint128_t Object::getHeadVersion() const;
  uint128_t Object::sync( const uint128_t& version = VERSION_HEAD );
  uint128_t Object::commit();
  uint128_t Object::commitSync( const uint32_t commitID );
  base::UUID Object::getID() const
    replaces
  bool Pipe::configInitSystemPipe( const uint32_t initID );
  bool Window::configInitSystemWindow( const uint32_t initID );
  bool Window::configInitGL( const uint32_t initID );
  bool Session::mapObject( Object* object, const uint32_t id, 
                           const uint128_t& version = VERSION_OLDEST );
  uint32_t Session::mapObjectNB( Object* object, const uint32_t id,
                                 const uint128_t& version = VERSION_OLDEST );
  void Object::notifyNewHeadVersion( const uint32_t version );
  uint32_t Object::getOldestVersion() const;
  uint32_t Object::getVersion() const;
  uint32_t Object::getHeadVersion() const;
  uint32_t Object::sync( const uint32_t version = VERSION_HEAD );
  uint32_t Object::commit();
  uint32_t Object::commitSync( const uint32_t commitID );
  uint32_t Object::getID() const

19/Nov/2010
  The GLXEventHandler is new per-window. Event handler init/exit has
  been moved from GLXPipe to GLXWindow and the GLXEventHandler API has
  changed accordingly.
  
15/Nov/2010
  Statistic::CHANNEL_FRAME_WAIT_READY replaces Statistic::CHANNEL_WAIT_FRAME

02/Nov/2010
  void fabric::Object::setError( const int32_t error )
  base::Error fabric::Object::getError() const
    replace
  void fabric::Object::setErrorMessage( const std::string& error )
  const std::string& fabric::Object::getErrorMessage() const

29/Oct/2010
  void FrameData::setZoom( const Zoom& zoom );
  const Zoom& FrameData::getZoom() const;
    replace
  void Frame::setInputZoom( const Zoom& zoom );
  const Zoom& Frame::getInputZoom() const;


25/Oct/2010
  Error util::FrameBufferObject::getError() const;
  Error ComputeContext::getError() const;
  void ComputeContext::setError( const uint32_t error );
    replaces
  const std::string& util::FrameBufferObject::getErrorMessage() const;
  const std::string& ComputeContext::getErrorMessage() const;
  void ComputeContext::setErrorMessage( const std::string& errorMessage );

20/Oct/2010
  void PluginRegistry::addDirectory( const std::string& path );
  void PluginRegistry::removeDirectory( const std::string& path );
  const Strings& PluginRegistry::getDirectories() const;
    replaces
  const Strings& Global::getPluginDirectories();
  static void Global::addPluginDirectory( const std::string&
  static void Global::removePluginDirectory( const std::string& path );


19/Oct/2010
  eq::net::Node::disconnect( NodePtr ) replaces ::close( NodePtr )

18/Oct/2010
  eq::PixelData replaces eq::Image::PixelData
    eq::Image method signatures change accordingly

07/Oct/2010
  removed eq::net::Object::makeThreadSafe and isThreadSafe
    application has to lock sync(), if needed
  eq::net::Object::getAutoObsolete replaces getAutoObsoleteCount
  
06/Oct/2010
  void eq::Client::clientLoop
  void eq::Client::exitClient
    replaces
  bool eq::net::Node::clientLoop
  bool eq::net::Node::exitClient
