

void main( 

    uniform sampler3D volume,
    uniform sampler2D preInt,

    uniform half      shininess,
    uniform half      lines,

    float3  frontP  : TEXCOORD0,
    float3  backP   : TEXCOORD1,

out float4   oColor  : COLOR 

)
{
#ifdef LINES_ONLY
    oColor = half4( 0.5, 0.5, 0.5, 0.5 );
#else
    if( lines > 0.5 )
    {
        discard;
//        oColor = half4( 0.0, 0.0, 0.0, 1.0 );
//        oColor = half4( 1.0, 0.5, 0.5, 0.5 );
//        oColor = half4( 1.0, 0.0, 0.0, 0.0 );
    }else
    {
//        oColor = half4( 0.0, 0.0, 0.0, 0.0 );
        
        half4 lookupSF = tex3D( volume, frontP );
        half4 lookupSB = tex3D( volume, backP  );
        half4 preInt_  = tex2D( preInt, half2(lookupSF.a, lookupSB.a) );
//        oColor = preInt_;
//        return;
        // lighting
        half3 normalSF = lookupSF.rgb*2.0 - 1.0;
        half3 normalSB = lookupSB.rgb*2.0 - 1.0;
    
        half3 normal = normalize( normalSF+normalSB );
//        normal = normalize( mul( float3x3(glstate.matrix.invtrans.modelview[0]), normal ) );

        half3 L = (glstate.light[0].position).xyz;
 
        half3 halfVector = normalize(L);

        half diffuse  = max( dot( glstate.light[0].position.xyz, normal ), 0.0 ); 

        half specular = pow( max( dot( halfVector, normal), 0.0 ), shininess ); 

        float4 color = float4(glstate.light[0].ambient.rgb  * preInt_.rgb + 
                              glstate.light[0].diffuse.rgb  * preInt_.rgb * diffuse + 
                              glstate.light[0].specular.rgb * preInt_.rgb * specular ,
                              preInt_.a);
 
        oColor   = color;
//        oColor   = preIntV;//float4( preIntV.rgb*1.0, preIntV.a );//half4( lookupSF.a, lookupSF.a, lookupSF.a, lookupSF.a );
    
//        oColor = half4( clamp(backP.x, 0.0, 1.0), clamp(backP.y, 0.0, 1.0), clamp(backP.z, 0.0, 1.0), 1.0 );
//        oColor = half4( clamp(frontP.x - backP.x, 0.0, 1.0), clamp(frontP.y - backP.y, 0.0, 1.0), clamp(frontP.z - backP.z, 0.0, 1.0), 1.0 );
    
    }
}

