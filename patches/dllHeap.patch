Index: lib/base/clock.h
===================================================================
--- lib/base/clock.h	(revision 3295)
+++ lib/base/clock.h	(working copy)
@@ -37,7 +37,7 @@
 namespace base
 {
     /** A class for time measurements. */
-    class Clock
+    class EQ_EXPORT Clock
     {
     public :
         /** Construct a new clock. */
Index: lib/base/dso.h
===================================================================
--- lib/base/dso.h	(revision 3295)
+++ lib/base/dso.h	(working copy)
@@ -30,11 +30,11 @@
 {
 
     /** Helper to access dynamic shared objects (DSO) */
-    class DSO : public NonCopyable
+    class EQ_EXPORT DSO : public NonCopyable
     {
     public:
         /** Construct a new dynamic shared object. */
-        EQ_EXPORT DSO() : _dso( 0 ) {}
+        DSO() : _dso( 0 ) {}
 
         /** 
          * Open a dynamic shared object.
@@ -42,14 +42,14 @@
          * @param fileName The file name of the DSO.
          * @return true if the DSO was opened, false upon error.
          */
-        EQ_EXPORT bool open( const std::string& fileName );
+        bool open( const std::string& fileName );
 
         /** Close the DSO, which invalidates retrieved function pointers */
-        EQ_EXPORT void close();
+        void close();
     
         /** @return a function pointer in the DSO, or 0 if the function is not
          *         exported by the DSO. */
-        EQ_EXPORT void* getFunctionPointer( const std::string& functionName );
+        void* getFunctionPointer( const std::string& functionName );
 
     private:
 #ifdef WIN32
Index: lib/base/lock.h
===================================================================
--- lib/base/lock.h	(revision 3295)
+++ lib/base/lock.h	(working copy)
@@ -28,21 +28,21 @@
     class LockPrivate;
 
     /** A lock (mutex) primitive. */
-    class Lock : public NonCopyable
+    class EQ_EXPORT Lock : public NonCopyable
     {
     public:
         /** Construct a new lock. */
-        EQ_EXPORT Lock();
+        Lock();
 
 
         /** Destruct the lock. */
-        EQ_EXPORT ~Lock();
+        ~Lock();
 
         /** Acquire the lock. */
-        EQ_EXPORT void set();
+        void set();
 
         /** Release the lock. */
-        EQ_EXPORT void unset();
+        void unset();
 
         /** 
          * Attempt to acquire the lock.
@@ -50,7 +50,7 @@
          * @return <code>true</code> if the lock was set, <code>false</code> if
          *         it was not set.
          */
-        EQ_EXPORT bool trySet();
+        bool trySet();
 
         /** 
          * Test if the lock is set.
@@ -58,7 +58,7 @@
          * @return <code>true</code> if the lock is set, <code>false</code> if
          *         it is not set.
          */
-        EQ_EXPORT bool test(); 
+        bool test(); 
 
     private:
         LockPrivate* _data;
Index: lib/base/log.h
===================================================================
--- lib/base/log.h	(revision 3295)
+++ lib/base/log.h	(working copy)
@@ -148,8 +148,8 @@
     {
     public:
 
-        Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
-        virtual ~Log() { _logBuffer.pubsync(); }
+        EQ_EXPORT Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
+        EQ_EXPORT ~Log() { _logBuffer.pubsync(); }
 
         void indent() { _logBuffer.indent(); }
         void exdent() { _logBuffer.exdent(); }
Index: lib/base/omp.h
===================================================================
--- lib/base/omp.h	(revision 3295)
+++ lib/base/omp.h	(working copy)
@@ -29,11 +29,11 @@
 namespace base
 {
     /** Base class abstracting OpenMP */
-    class OMP 
+    class EQ_EXPORT OMP 
     {
     public:
         /** Return the number of threads used in a parallel region. */
-        EQ_EXPORT static int getNThreads() { return _nThreads; }
+        static int getNThreads() { return _nThreads; }
 
     private:
         static int _nThreads;
Index: lib/base/referenced.h
===================================================================
--- lib/base/referenced.h	(revision 3295)
+++ lib/base/referenced.h	(working copy)
@@ -36,7 +36,7 @@
      *
      * @sa RefPtr
      */
-    class Referenced 
+    class EQ_EXPORT Referenced 
     {
     public:
         /** Increase the reference count. */
@@ -95,7 +95,7 @@
             }
 
     protected:
-        EQ_EXPORT void deleteReferenced( Referenced* object );
+        void deleteReferenced( Referenced* object );
 
     private:
         mtLong _refCount;
Index: lib/base/requestHandler.h
===================================================================
--- lib/base/requestHandler.h	(revision 3295)
+++ lib/base/requestHandler.h	(working copy)
@@ -44,7 +44,7 @@
      * serveRequest() and deleteRequest() are supposed to be called only from
      * one 'serving' thread.
      */
-    class RequestHandler : public NonCopyable
+    class EQ_EXPORT RequestHandler : public NonCopyable
     {
 
     public:
@@ -55,10 +55,10 @@
          *                   thread-safe and can be called from multiple
          *                   threads.
          */
-        EQ_EXPORT RequestHandler( const bool threadSafe = false );
+        RequestHandler( const bool threadSafe = false );
 
         /** Destruct the request handler. */
-        EQ_EXPORT ~RequestHandler();
+        ~RequestHandler();
 
         /** 
          * Register a new request.
@@ -67,7 +67,7 @@
          *             0.
          * @return the request identifier.
          */
-        EQ_EXPORT uint32_t registerRequest( void* data = 0 );
+        uint32_t registerRequest( void* data = 0 );
 
         /** 
          * Unregister a request.
@@ -78,7 +78,7 @@
          * 
          * @param requestID the request identifier.
          */
-        EQ_EXPORT void unregisterRequest( const uint32_t requestID );
+        void unregisterRequest( const uint32_t requestID );
 
         /** 
          * Wait a given time for the completion of a request.
@@ -93,17 +93,17 @@
          *                indefinitely.
          * @return true if the request was served, false if not.
          */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, void*& result,
+        bool waitRequest( const uint32_t requestID, void*& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
 
         /** Wait for a request with a uint32_t result. */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, uint32_t& result,
+        bool waitRequest( const uint32_t requestID, uint32_t& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
         /** Wait for a request with a bool result. */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, bool& result,
+        bool waitRequest( const uint32_t requestID, bool& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
         /** Wait for a request without a result. */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID );
+        bool waitRequest( const uint32_t requestID );
 
         /** 
          * Poll for the completion of a request.
@@ -113,7 +113,7 @@
          * @param requestID the request identifier.
          * @return true if the request has been served, false if it is pending.
          */
-        EQ_EXPORT bool isServed( const uint32_t requestID ) const;
+        bool isServed( const uint32_t requestID ) const;
 
         /** 
          * Retrieve the user-specific data for a request.
@@ -121,7 +121,7 @@
          * @param requestID the request identifier.
          * @return the user-specific data for the request.
          */
-        EQ_EXPORT void* getRequestData( const uint32_t requestID );
+        void* getRequestData( const uint32_t requestID );
 
         /** 
          * Serve a request with a void* result.
@@ -129,11 +129,11 @@
          * @param requestID the request identifier.
          * @param result the result of the request.
          */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, void* result=0 );
+        void serveRequest( const uint32_t requestID, void* result=0 );
         /** Serve a request with a uint32_t result. */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, uint32_t result);
+        void serveRequest( const uint32_t requestID, uint32_t result);
         /** Serve a request with a bool result. */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, bool result );
+        void serveRequest( const uint32_t requestID, bool result );
 
         /** @return true if this request handler was created thread-safe. */
 		bool isThreadSafe() const { return ( _mutex != 0 ); }
Index: lib/base/rng.h
===================================================================
--- lib/base/rng.h	(revision 3295)
+++ lib/base/rng.h	(working copy)
@@ -33,7 +33,7 @@
      * Generates a set of random, or if not supported by the operating system,
      * pseudo-random numbers. Each instance creates its own series of numbers.
      */
-    class RNG : public NonCopyable
+    class EQ_EXPORT RNG : public NonCopyable
     {
     public:
         /** Construct a new random number generator. */
Index: lib/base/thread.h
===================================================================
--- lib/base/thread.h	(revision 3295)
+++ lib/base/thread.h	(working copy)
@@ -39,16 +39,16 @@
     /**
      * An abstraction for an execution thread.
      */
-    class Thread 
+    class EQ_EXPORT Thread 
     {
     public:
         /** 
          * Constructs a new thread.
          */
-        EQ_EXPORT Thread();
+        Thread();
 
         /** Destructs the thread. */
-        EQ_EXPORT virtual ~Thread();
+        virtual ~Thread();
 
         /** 
          * Starts the thread.
@@ -60,7 +60,7 @@
          *         <code>false</code> otherwise.
          * @sa init(), run(), addListener()
          */
-        EQ_EXPORT bool start();
+        bool start();
 
         /** 
          * The init function for the child thread.
@@ -92,14 +92,14 @@
          *
          * @param retVal the return value of the thread.
          */
-        EQ_EXPORT virtual void exit( void* retVal = 0 );
+        virtual void exit( void* retVal = 0 );
 
         /** 
          * Cancel (stop) the child thread.
          *
          * This function is not to be called from the child thread.
          */
-        EQ_EXPORT void cancel();
+        void cancel();
 
         /** 
          * Wait for the exit of the child thread.
@@ -109,7 +109,7 @@
          * @return <code>true</code> if the thread was joined,
          *         <code>false</code> otherwise.
          */
-        EQ_EXPORT bool join( void** retVal=0 );
+        bool join( void** retVal=0 );
 
         /** 
          * Return if the thread is stopped.
@@ -139,27 +139,27 @@
          * @return <code>true</code> if the current thread has is the same
          *         thread as this thread, <code>false</code> if not.
          */
-        EQ_EXPORT bool isCurrent() const;
+        bool isCurrent() const;
 
         /** 
          * Add a new thread state listener.
          * 
          * @param listener the listener.
          */
-        EQ_EXPORT static void addListener( ExecutionListener* listener );
+        static void addListener( ExecutionListener* listener );
 
         /** 
          * Remove a thread state listener.
          * 
          * @param listener the listener.
          */
-        EQ_EXPORT static bool removeListener( ExecutionListener* listener );
+        static bool removeListener( ExecutionListener* listener );
 
         /** Remove all registered listeners, used at exit. */
-        EQ_EXPORT static void removeAllListeners();
+        static void removeAllListeners();
 
         /** @return a unique identifier for the calling thread. */
-        EQ_EXPORT static size_t getSelfThreadID();
+        static size_t getSelfThreadID();
 
         /** @internal */
         static void pinCurrentThread();
Index: lib/client/channel.h
===================================================================
--- lib/client/channel.h	(revision 3295)
+++ lib/client/channel.h	(working copy)
@@ -43,7 +43,7 @@
      * rendering-relevant tasks, such as clear, draw, assemble and readback. It
      * is a child of a Window.
      */
-    class Channel : public net::Object
+    class EQ_EXPORT Channel : public net::Object
     {
     public:
     
@@ -60,10 +60,10 @@
         };
         
         /** Constructs a new channel. */
-        EQ_EXPORT Channel( Window* parent );
+        Channel( Window* parent );
 
         /** Destructs the channel. */
-        EQ_EXPORT virtual ~Channel();
+        virtual ~Channel();
 
         /**
          * @name Data Access
@@ -72,18 +72,18 @@
         Window*       getWindow()       { return _window; }
         const Window* getWindow() const { return _window; }
 
-        EQ_EXPORT Pipe*       getPipe();
-        EQ_EXPORT const Pipe* getPipe() const;
+        Pipe*       getPipe();
+        const Pipe* getPipe() const;
 
-        EQ_EXPORT Node*       getNode();
-        EQ_EXPORT const Node* getNode() const;
+        Node*       getNode();
+        const Node* getNode() const;
 
-        EQ_EXPORT Config*       getConfig();
-        EQ_EXPORT const Config* getConfig() const;
+        Config*       getConfig();
+        const Config* getConfig() const;
 
-        EQ_EXPORT ServerPtr getServer();
+        ServerPtr getServer();
 
-        EQ_EXPORT Window::ObjectManager* getObjectManager();
+        Window::ObjectManager* getObjectManager();
 
         /** 
          * Get the GLEW context for this channel.
@@ -98,8 +98,8 @@
          * @return the extended OpenGL function table for the channel's OpenGL
          *         context.
          */
-        EQ_EXPORT GLEWContext*       glewGetContext();
-        EQ_EXPORT const GLEWContext* glewGetContext() const;
+        GLEWContext*       glewGetContext();
+        const GLEWContext* glewGetContext() const;
         
         /** @return the name of the window. */
         const std::string& getName() const { return _name; }
@@ -120,7 +120,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( ChannelVisitor& visitor );
+        VisitorResult accept( ChannelVisitor& visitor );
 
         /** 
          * Set the near and far planes for this channel.
@@ -133,7 +133,7 @@
          * @param nearPlane the near plane.
          * @param farPlane the far plane.
          */
-        EQ_EXPORT void setNearFar( const float nearPlane, const float farPlane);
+        void setNearFar( const float nearPlane, const float farPlane);
 
         /** Return a stable, unique color for this channel. */
         const Vector3ub& getUniqueColor() const { return _color; }
@@ -149,16 +149,16 @@
          * 
          * @return the channel's view, or 0 if it does not have a view.
          */
-        EQ_EXPORT const View* getView();
+        const View* getView();
 
         /**
          * @return the channel's native view, or 0 if it is not an output
          *         channel.
          */
-        EQ_EXPORT const View* getNativeView();
+        const View* getNativeView();
 
         /** Add a new statistics event for the current frame. */
-        EQ_EXPORT void addStatistic( Event& event );
+        void addStatistic( Event& event );
         //@}
 
         /**
@@ -170,16 +170,16 @@
          */
         //@{
         /** @return the channel's current draw buffer. */
-        EQ_EXPORT uint32_t getDrawBuffer() const;
+        uint32_t getDrawBuffer() const;
 
         /** @return the channel's current read buffer. */
-        EQ_EXPORT uint32_t getReadBuffer() const;
+        uint32_t getReadBuffer() const;
 
         /** @return the channel's current color mask for drawing. */
-        EQ_EXPORT const ColorMask& getDrawBufferMask() const;
+        const ColorMask& getDrawBufferMask() const;
 
         /** @return the channel's current pixel viewport. */
-        EQ_EXPORT const PixelViewport& getPixelViewport() const;
+        const PixelViewport& getPixelViewport() const;
 
         /**
          * Get the channel's current position wrt the destination channel.
@@ -190,34 +190,34 @@
          *
          * @return the channel's current position wrt the destination channel.
          */
-        EQ_EXPORT const Vector2i& getPixelOffset() const;
+        const Vector2i& getPixelOffset() const;
 
         /** @return the perspective frustum for the current rendering task. */
-        EQ_EXPORT const Frustumf& getFrustum() const;
+        const Frustumf& getFrustum() const;
 
         /** @return the orthographic frustum for the current rendering task. */
-        EQ_EXPORT const Frustumf& getOrtho() const;
+        const Frustumf& getOrtho() const;
 
         /** @return the fractional viewport wrt the destination view. */
-        EQ_EXPORT const Viewport& getViewport() const;
+        const Viewport& getViewport() const;
 
         /** @return the database range for the current rendering task. */
-        EQ_EXPORT const Range& getRange() const;
+        const Range& getRange() const;
 
         /** @return the pixel decomposition for the current rendering task. */
-        EQ_EXPORT const Pixel& getPixel() const;
+        const Pixel& getPixel() const;
 
         /** @return the up/downscale factor for the current rendering task. */
-        EQ_EXPORT const Zoom& getZoom() const;
+        const Zoom& getZoom() const;
 
         /** @return the currently rendered eye pass. */
-        EQ_EXPORT Eye getEye() const;
+        Eye getEye() const;
 
         /**
          * @return the view transformation to position and orient the view
          *         frustum.
          */
-        EQ_EXPORT const Matrix4f& getHeadTransform() const;
+        const Matrix4f& getHeadTransform() const;
 
         /** @return the list of input frames, used from frameAssemble(). */
         const FrameVector& getInputFrames() { return _inputFrames; }
@@ -233,7 +233,7 @@
          *
          * @return the 2D orthographic frustum.
          */
-        EQ_EXPORT Frustumf getScreenFrustum() const;
+        Frustumf getScreenFrustum() const;
 
         /** 
          * get the channel's native (drawable) pixel viewport.
@@ -242,18 +242,18 @@
             { return _nativeContext.pvp; }
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT const Vector4i& getOverdraw() const;
+        const Vector4i& getOverdraw() const;
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT void setMaxSize( const Vector2i& size );
+        void setMaxSize( const Vector2i& size );
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT uint32_t getTaskID() const;
+        uint32_t getTaskID() const;
 
         /** 
          * get the FBO used as an alternate frame buffer.
          */
-        EQ_EXPORT FrameBufferObject* getFrameBufferObject();
+        FrameBufferObject* getFrameBufferObject();
         //@}
 
         /**
@@ -267,27 +267,27 @@
         /** 
          * Apply the current rendering buffer, including the color mask.
          */
-        EQ_EXPORT virtual void applyBuffer();
+        virtual void applyBuffer();
 
         /** 
          * Apply the current color mask.
          */
-        EQ_EXPORT virtual void applyColorMask() const;
+        virtual void applyColorMask() const;
 
         /** 
          * Apply the OpenGL viewport for the current rendering task.
          */
-        EQ_EXPORT virtual void applyViewport() const;
+        virtual void applyViewport() const;
 
         /**
          * Apply the perspective frustum matrix for the current rendering task.
          */
-        EQ_EXPORT virtual void applyFrustum() const;
+        virtual void applyFrustum() const;
 
         /**
          * Apply the orthographic frustum matrix for the current rendering task.
          */
-        EQ_EXPORT virtual void applyOrtho() const;
+        virtual void applyOrtho() const;
 
         /** 
          * Apply a orthographic frustum for pixel-based 2D operations. 
@@ -295,18 +295,18 @@
          * One unit in the frustum corresponds to one pixel on the screen. The
          * frustum is position wrt the canvas.
          */
-        EQ_EXPORT void applyScreenFrustum() const;
+        void applyScreenFrustum() const;
 
         /** 
          * Apply the modeling transformation to position and orient the view
          * frustum.
          */
-        EQ_EXPORT virtual void applyHeadTransform() const;
+        virtual void applyHeadTransform() const;
 
         /** 
          * Apply the current alternate frame buffer.
          */
-        EQ_EXPORT virtual void applyFrameBufferObject();
+        virtual void applyFrameBufferObject();
         
         /** 
          * Process a received event.
@@ -318,13 +318,13 @@
          * @param event the received event.
          * @return true when the event was handled, false if not.
          */
-        EQ_EXPORT virtual bool processEvent( const Event& event );
+        virtual bool processEvent( const Event& event );
 
         /** Draw a statistics overlay. */
-        EQ_EXPORT virtual void drawStatistics();
+        virtual void drawStatistics();
 
         /** Outlines the current pixel viewport. */
-        EQ_EXPORT virtual void outlineViewport();
+        virtual void outlineViewport();
 
         /**
          * @name Attributes
@@ -340,8 +340,8 @@
             IATTR_ALL
         };
         
-        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
-        EQ_EXPORT static const std::string& getIAttributeString(
+        int32_t getIAttribute( const IAttribute attr ) const;
+        static const std::string& getIAttributeString(
                                                         const IAttribute attr );
         //@}
 #if 0
@@ -358,7 +358,7 @@
     protected:
         friend class Window;
 
-        EQ_EXPORT void attachToSession( const uint32_t id, 
+        void attachToSession( const uint32_t id, 
                                         const uint32_t instanceID, 
                                         net::Session* session );
 
@@ -398,17 +398,17 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Exit this channel.
          */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /** 
          * Rebind the current alternate rendering buffer.
          */
-        EQ_EXPORT void bindFrameBuffer();
+        void bindFrameBuffer();
         
         /**
          * Start rendering a frame.
@@ -455,14 +455,14 @@
          * 
          * @param frameID the per-frame identifier.
          */
-        EQ_EXPORT virtual void frameClear( const uint32_t frameID );
+        virtual void frameClear( const uint32_t frameID );
 
         /** 
          * Draw the scene.
          * 
          * @param frameID the per-frame identifier.
          */
-        EQ_EXPORT virtual void frameDraw( const uint32_t frameID );
+        virtual void frameDraw( const uint32_t frameID );
 
         /** 
          * Assemble input frames.
@@ -470,7 +470,7 @@
          * @param frameID the per-frame identifier.
          * @sa getInputFrames
          */
-        EQ_EXPORT virtual void frameAssemble( const uint32_t frameID );
+        virtual void frameAssemble( const uint32_t frameID );
 
         /** 
          * Read back the rendered scene.
@@ -478,7 +478,7 @@
          * @param frameID the per-frame identifier.
          * @sa getOutputFrames
          */
-        EQ_EXPORT virtual void frameReadback( const uint32_t frameID );
+        virtual void frameReadback( const uint32_t frameID );
 
         /** 
          * Start updating a destination channel.
@@ -506,12 +506,12 @@
          * The default implementation is very conservative and saves any state
          * which is potentially changed by the assembly routines.
          */
-        EQ_EXPORT virtual void setupAssemblyState();
+        virtual void setupAssemblyState();
 
         /**
          * Reset the OpenGL state after an assembly operation.
          */
-        EQ_EXPORT virtual void resetAssemblyState();
+        virtual void resetAssemblyState();
         //@}
 
         /** @name Error information. */
@@ -524,7 +524,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
     private:
Index: lib/client/channelStatistics.h
===================================================================
--- lib/client/channelStatistics.h	(revision 3295)
+++ lib/client/channelStatistics.h	(working copy)
@@ -27,12 +27,12 @@
     /**
      * Holds one statistics event, used for profiling.
      */
-    class ChannelStatistics : public StatisticSampler< Channel >
+    class EQ_EXPORT ChannelStatistics : public StatisticSampler< Channel >
     {
     public:
-        EQ_EXPORT ChannelStatistics( const Statistic::Type type, 
+        ChannelStatistics( const Statistic::Type type, 
                                      Channel* channel );
-        virtual EQ_EXPORT ~ChannelStatistics();
+        virtual ~ChannelStatistics();
     };
 }
 
Index: lib/client/client.h
===================================================================
--- lib/client/client.h	(revision 3295)
+++ lib/client/client.h	(working copy)
@@ -32,18 +32,18 @@
     /** 
      * The client represents a network node in the cluster.
      */
-    class Client : public net::Node
+    class EQ_EXPORT Client : public net::Node
     {
     public:
         /** 
          * Constructs a new client.
          */
-        EQ_EXPORT Client();
+        Client();
 
         /**
          * Destructs the client.
          */
-        EQ_EXPORT virtual ~Client();
+        virtual ~Client();
 
         /** 
          * Open and connect an Equalizer server to the local client.
@@ -51,7 +51,7 @@
          * @param server the server.
          * @return true if the server was connected, false if not.
          */
-        EQ_EXPORT bool connectServer( ServerPtr server );
+        bool connectServer( ServerPtr server );
 
         /** 
          * Disconnect and close the connection of an Equalizer server to the
@@ -60,37 +60,37 @@
          * @param server the server.
          * @return true if the server was disconnected, false if not.
          */
-        EQ_EXPORT bool disconnectServer( ServerPtr server );
+        bool disconnectServer( ServerPtr server );
 
         /** @return true if the client has commands pending, false otherwise. */
-        EQ_EXPORT bool hasCommands();
+        bool hasCommands();
 
         /** 
          * Get and process one command from the node command queue. Used
          * internally to run node commands.
          */
-        EQ_EXPORT void processCommand();
+        void processCommand();
 
         /** @sa net::Node::listen() */
-        EQ_EXPORT virtual bool listen();
+        virtual bool listen();
         /** @sa net::Node::stopListening() */
-        EQ_EXPORT virtual bool stopListening();
+        virtual bool stopListening();
 
         /** 
          * Set the window system for the client's message pump, used by
          * non-threaded pipes.
          * @internal
          */
-        EQ_EXPORT void setWindowSystem( const WindowSystem windowSystem );
+        void setWindowSystem( const WindowSystem windowSystem );
 
         /** Return the command queue to the main node thread. */
         CommandQueue* getNodeThreadQueue() { return _nodeThreadQueue; }
 
     protected:
         /** @sa net::Node::clientLoop */
-        EQ_EXPORT virtual bool clientLoop();
+        virtual bool clientLoop();
         /** @sa net::Node::exitClient(). */
-        EQ_EXPORT virtual bool exitClient();
+        virtual bool exitClient();
 
     private:
         /** The command->node command queue. */
@@ -104,13 +104,13 @@
         };
 
         /** @sa net::Node::createNode */
-        EQ_EXPORT virtual net::NodePtr createNode( const uint32_t type );
+        virtual net::NodePtr createNode( const uint32_t type );
         
         /** @sa net::Node::dispatchCommand */
-        EQ_EXPORT virtual bool dispatchCommand( net::Command& command );
+        virtual bool dispatchCommand( net::Command& command );
 
         /** @sa net::Node::invokeCommand */
-        EQ_EXPORT virtual net::CommandResult invokeCommand( net::Command& );
+        virtual net::CommandResult invokeCommand( net::Command& );
 
         /** The command functions. */
         net::CommandResult _cmdExit( net::Command& command );
Index: lib/client/config.h
===================================================================
--- lib/client/config.h	(revision 3295)
+++ lib/client/config.h	(working copy)
@@ -38,21 +38,21 @@
      * The configuration groups all processes of the application in a single
      * net::Session.
      */
-    class Config : public net::Session
+    class EQ_EXPORT Config : public net::Session
     {
     public:
         /** Constructs a new config. */
-        EQ_EXPORT Config( ServerPtr parent );
+        Config( ServerPtr parent );
 
         /** Destructs a config. */
-        EQ_EXPORT virtual ~Config();
+        virtual ~Config();
 
         /** @name Data Access */
         //@{
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
+        CommandQueue* getNodeThreadQueue();
 
         uint32_t getCurrentFrame()  const { return _currentFrame; }
         uint32_t getFinishedFrame() const { return _finishedFrame.get(); }
@@ -71,10 +71,10 @@
         const LayoutVector& getLayouts() const { return _layouts; }
 
         /** @return the layout of the given identifier, or 0. */
-        EQ_EXPORT Layout* findLayout( const uint32_t id );
+        Layout* findLayout( const uint32_t id );
 
         /** @return the view of the given identifier, or 0. */
-        EQ_EXPORT View* findView( const uint32_t id );
+        View* findView( const uint32_t id );
 
         /** @return the vector of canvases, app-node only. */
         const CanvasVector& getCanvases() const { return _canvases; }
@@ -88,10 +88,10 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( ConfigVisitor& visitor );
+        VisitorResult accept( ConfigVisitor& visitor );
 
         /** Get all received statistics. */
-        EQ_EXPORT void getStatistics( std::vector< FrameStatistics >& stats );
+        void getStatistics( std::vector< FrameStatistics >& stats );
 
         /**
          * @return true while the config is initialized and no exit event
@@ -114,7 +114,7 @@
          * @param initID an identifier to be passed to all init methods.
          * @return true if the initialization was successful, false if not.
          */
-        EQ_EXPORT virtual bool init( const uint32_t initID );
+        virtual bool init( const uint32_t initID );
 
         /** 
          * Exits this configuration.
@@ -125,7 +125,7 @@
          * @return <code>true</code> if the exit was successful,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool exit();
+        virtual bool exit();
         //@}
 
         /**
@@ -139,7 +139,7 @@
          *                methods.
          * @return the frame number of the new frame.
          */
-        EQ_EXPORT virtual uint32_t startFrame( const uint32_t frameID );
+        virtual uint32_t startFrame( const uint32_t frameID );
 
         /** 
          * Finish the rendering of a frame.
@@ -147,14 +147,14 @@
          * @return the frame number of the finished frame, or <code>0</code> if
          *         no frame has been finished.
          */
-        EQ_EXPORT virtual uint32_t finishFrame();
+        virtual uint32_t finishFrame();
 
         /**
          * Finish rendering all pending frames.
          *
          * @return the frame number of the last finished frame.
          */
-        EQ_EXPORT virtual uint32_t finishAllFrames();
+        virtual uint32_t finishAllFrames();
 
         /** 
          * Release the local synchronization of the config for a frame.
@@ -175,7 +175,7 @@
          * 
          * @param event the event.
          */
-        EQ_EXPORT void sendEvent( ConfigEvent& event );
+        void sendEvent( ConfigEvent& event );
 
         /** 
          * Get the next received event on the application node.
@@ -184,7 +184,7 @@
          * 
          * @return a config event.
          */
-        EQ_EXPORT const ConfigEvent* nextEvent();
+        const ConfigEvent* nextEvent();
 
         /** 
          * Try to get an event on the application node.
@@ -193,7 +193,7 @@
          * 
          * @return a config event, or 0 if no events are pending.
          */
-        EQ_EXPORT const ConfigEvent* tryNextEvent();
+        const ConfigEvent* tryNextEvent();
 
         /** @return true if events are pending. */
         bool checkEvent() const { return !_eventQueue.isEmpty(); }
@@ -205,7 +205,7 @@
          * default implementation calls handleEvent() on all pending events,
          * without blocking.
          */
-        EQ_EXPORT virtual void handleEvents();
+        virtual void handleEvents();
 
         /** 
          * Handle one config event.
@@ -214,7 +214,7 @@
          * @return <code>true</code> if the event requires a redraw,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool handleEvent( const ConfigEvent* event );
+        virtual bool handleEvent( const ConfigEvent* event );
         //@}
         
 #ifdef EQ_USE_DEPRECATED
@@ -231,16 +231,16 @@
          *
          * @param matrix the matrix
          */
-        EQ_EXPORT void setHeadMatrix( const vmml::Matrix4f& matrix );
+        void setHeadMatrix( const vmml::Matrix4f& matrix );
 
         /** @return the current head matrix. */
-        EQ_EXPORT const vmml::Matrix4f& getHeadMatrix() const;
+        const vmml::Matrix4f& getHeadMatrix() const;
 
         /** Set the eye separation, i.e., the distance between the eyes. */
-        EQ_EXPORT void setEyeBase( const float eyeBase );
+        void setEyeBase( const float eyeBase );
 
         /** @return the current eye separation. */
-        EQ_EXPORT float getEyeBase() const;
+        float getEyeBase() const;
         //@}
 #endif
 
@@ -264,7 +264,7 @@
 #endif
 
         /** Undocumented */
-        EQ_EXPORT void freezeLoadBalancing( const bool onOff );
+        void freezeLoadBalancing( const bool onOff );
 
         /** 
          * Set the window system for the config's message pump, used by
@@ -276,7 +276,7 @@
     protected:
 
         /** @sa eq::net::Session::notifyMapped() */
-        EQ_EXPORT virtual void notifyMapped( net::NodePtr node );
+        virtual void notifyMapped( net::NodePtr node );
 
     private:
         /** The node identifier of the node running the application thread. */
Index: lib/client/configEvent.h
===================================================================
--- lib/client/configEvent.h	(revision 3295)
+++ lib/client/configEvent.h	(working copy)
@@ -36,7 +36,7 @@
      *
      * When subclassing, make sure to set the packet size.
      */
-    struct ConfigEvent : public ConfigPacket
+    struct EQ_EXPORT ConfigEvent : public ConfigPacket
     {
     public:
         ConfigEvent()
Index: lib/client/eventHandler.h
===================================================================
--- lib/client/eventHandler.h	(revision 3295)
+++ lib/client/eventHandler.h	(working copy)
@@ -29,22 +29,22 @@
     /**
      * Base class for window system-specific event handlers
      */
-    class EventHandler
+    class EQ_EXPORT EventHandler
     {
     public:
 
     protected:
         /** Constructs a new event handler. */
-        EQ_EXPORT EventHandler() : _lastEventWindow( 0 ) {}
+        EventHandler() : _lastEventWindow( 0 ) {}
 
         /** Destructs the event handler. */
-        EQ_EXPORT virtual ~EventHandler(){}
+        virtual ~EventHandler(){}
 
         /** Compute the mouse move delta from the previous pointer event. */
-        EQ_EXPORT void _computePointerDelta(const Window* window, Event& event);
+        void _computePointerDelta(const Window* window, Event& event);
 
         /** Find and set the rendering context at the mouse position. */
-        EQ_EXPORT void _getRenderContext( const Window* window, Event& event );
+        void _getRenderContext( const Window* window, Event& event );
 
         /** The previous pointer event to compute mouse movement deltas. */
         Event _lastPointerEvent;
Index: lib/client/frame.h
===================================================================
--- lib/client/frame.h	(revision 3295)
+++ lib/client/frame.h	(working copy)
@@ -43,7 +43,7 @@
     /**
      * A holder for a frame data and parameters.
      */
-    class Frame : public net::Object
+    class EQ_EXPORT Frame : public net::Object
     {
     public:
         /** 
@@ -69,24 +69,24 @@
         /** 
          * Constructs a new Frame.
          */
-        EQ_EXPORT Frame();
-        EQ_EXPORT virtual ~Frame();
+        Frame();
+        virtual ~Frame();
 
         /**
          * @name Data Access
          */
         //@{
-        EQ_EXPORT const std::string& getName() const;
+        const std::string& getName() const;
 
         const Vector2i& getOffset() const { return _data.offset; }
         void setOffset( const Vector2i& offset ) { _data.offset = offset;}
 
         /** @return the database-range relative to the destination channel. */
-        EQ_EXPORT const Range& getRange() const;
-        EQ_EXPORT void         setRange( const Range& range );
+        const Range& getRange() const;
+        void         setRange( const Range& range );
 
         /** @return the pixel parameters relative to the destination channel. */
-        EQ_EXPORT const Pixel& getPixel() const;
+        const Pixel& getPixel() const;
 
         /** @return the zoom factor for readback or assemble. */
         const Zoom& getZoom() const { return _data.zoom; }
@@ -96,14 +96,14 @@
         void setZoom( const Zoom& zoom ) { _data.zoom = zoom; }
 
         /** The images of this frame */
-        EQ_EXPORT const ImageVector& getImages() const;
+        const ImageVector& getImages() const;
 
         /** Set the data for this frame. */
         void setData( FrameData* data ) { _frameData = data; }
         FrameData* getData() { return _frameData; }
 
         /** Set the pixel viewport of the frame's data */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
 
         const net::ObjectVersion& getDataVersion( const Eye eye ) const
             { return _data.frameData[ eye ]; }
@@ -115,7 +115,7 @@
         //@{
 
         /** Clear the frame, recycles the images attached to the frame data. */
-        EQ_EXPORT void clear();
+        void clear();
 
         /** Clear the frame and free all images attached to the frame data. */
         void flush();
@@ -127,10 +127,10 @@
          *
          * @param glObjects the GL object manager for the current GL context.
          */
-        EQ_EXPORT void startReadback( Window::ObjectManager* glObjects );
+        void startReadback( Window::ObjectManager* glObjects );
         
         /** Synchronize the image readback. */
-        EQ_EXPORT void syncReadback();
+        void syncReadback();
 
         /** 
          * Transmit the frame data to the specified node.
@@ -159,10 +159,10 @@
          * 
          * @return true if the frame is ready, false if not. 
          */
-        EQ_EXPORT bool isReady() const;
+        bool isReady() const;
 
         /** Wait for the frame to become available. */
-        EQ_EXPORT void waitReady() const;
+        void waitReady() const;
 
         /** 
          * Add a listener which will be incremented when the frame is ready.
@@ -180,20 +180,20 @@
         //@}
 
         /** @return the enabled frame buffer attachments. */
-        EQ_EXPORT uint32_t getBuffers() const;
+        uint32_t getBuffers() const;
 
         /** 
          * Disable the usage of a frame buffer attachment for all images.
          * 
          * @param buffer the buffer to disable.
          */
-        EQ_EXPORT void disableBuffer( const Buffer buffer );
+        void disableBuffer( const Buffer buffer );
 
         /** Set color buffer type to read */
-        EQ_EXPORT void setColorType( const GLuint colorType );
+        void setColorType( const GLuint colorType );
 
         /** Enable/disable alpha usage for newly allocated images. */
-        EQ_EXPORT void setAlphaUsage( const bool useAlpha );
+        void setAlphaUsage( const bool useAlpha );
 
         /** @internal */
         void useSendToken( const bool use );
Index: lib/client/frameData.h
===================================================================
--- lib/client/frameData.h	(revision 3295)
+++ lib/client/frameData.h	(working copy)
@@ -45,11 +45,11 @@
      * A frame data holds multiple images and is used by frames.
      * It is not intended to be used directly by application code.
      */
-    class FrameData : public net::Object
+    class EQ_EXPORT FrameData : public net::Object
     {
     public:
-        EQ_EXPORT FrameData();
-        EQ_EXPORT virtual ~FrameData();
+        FrameData();
+        virtual ~FrameData();
 
         /** 
          * @name Data Access
@@ -92,10 +92,10 @@
          * 
          * @return the image.
          */
-        EQ_EXPORT Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
+        Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
 
         /** Clear the frame by recycling the attached images. */
-        EQ_EXPORT void clear();
+        void clear();
 
         /** 
          * Read back a set of images according to the current frame data.
Index: lib/client/global.h
===================================================================
--- lib/client/global.h	(revision 3295)
+++ lib/client/global.h	(working copy)
@@ -66,7 +66,7 @@
     /** 
      * Global parameter handling for the Equalizer client library. 
      */
-    class Global
+    class EQ_EXPORT Global
     {
     public:
         /** @return the node factory. */
@@ -77,20 +77,20 @@
          * 
          * @param server the default server.
          */
-        EQ_EXPORT static void setServer( const std::string& server );
+        static void setServer( const std::string& server );
 
         /** @return the default Equalizer server. */
-        EQ_EXPORT static const std::string& getServer();
+        static const std::string& getServer();
 
         /** 
          * Set the config file for the app-local server.
          * 
          * @param configFile the default configFile.
          */
-        EQ_EXPORT static void setConfigFile( const std::string& configFile );
+        static void setConfigFile( const std::string& configFile );
 
         /** @return the default config file for the app-local server. */
-        EQ_EXPORT static const std::string& getConfigFile();
+        static const std::string& getConfigFile();
 
         /** 
          * Global lock for all non-thread-safe Carbon API calls. 
@@ -105,21 +105,21 @@
           * @return all directories to search for compressor DSOs during
           *         eq::init().
           */
-        EQ_EXPORT static const StringVector& getPluginDirectories();
+        static const StringVector& getPluginDirectories();
 
         /** add a new directory to search for compressor DSOs. */
-        EQ_EXPORT static void  addPluginDirectory( const std::string& path );
+        static void  addPluginDirectory( const std::string& path );
 
         /** remove a plugin directory */
-        EQ_EXPORT static void  removePluginDirectory( const std::string& path );
+        static void  removePluginDirectory( const std::string& path );
 
         /** @return the plugin registry. */
-        EQ_EXPORT static PluginRegistry& getPluginRegistry();
+        static PluginRegistry& getPluginRegistry();
 
     private:
-        EQ_EXPORT friend bool init( const int argc, char** argv, 
+        friend EQ_EXPORT bool init( const int argc, char** argv, 
                                     NodeFactory* nodeFactory );
-        EQ_EXPORT friend bool exit();
+        friend EQ_EXPORT bool exit();
 
         static StringVector _initPluginDirectories();
         friend bool testInitPluginDirectories();
Index: lib/client/image.h
===================================================================
--- lib/client/image.h	(revision 3295)
+++ lib/client/image.h	(working copy)
@@ -33,12 +33,12 @@
      *
      * An image holds color and depth information for a rectangular region.
      */
-    class Image
+    class EQ_EXPORT Image
     {
     public:
         /** Constructs a new Image. */
-        EQ_EXPORT Image();
-        EQ_EXPORT virtual ~Image();
+        Image();
+        virtual ~Image();
 
         struct PixelData : public base::NonCopyable
         {
@@ -72,11 +72,11 @@
          * @param buffer the buffer type.
          * @param format the format.
          */
-        EQ_EXPORT void setFormat( const Frame::Buffer buffer,
+        void setFormat( const Frame::Buffer buffer,
                                   const uint32_t format );
 
         /** @return the (OpenGL) format of the pixel data. */
-        EQ_EXPORT uint32_t getFormat( const Frame::Buffer buffer ) const;
+        uint32_t getFormat( const Frame::Buffer buffer ) const;
 
         /**
          * Set the (OpenGL) type of the pixel data for a buffer.
@@ -85,14 +85,14 @@
          * @param buffer the buffer type.
          * @param type the type.
          */
-        EQ_EXPORT void setType( const Frame::Buffer buffer, 
+        void setType( const Frame::Buffer buffer, 
                                 const uint32_t type );
 
         /** @return the (OpenGL) type of the pixel data. */
-        EQ_EXPORT uint32_t getType( const Frame::Buffer buffer ) const;
+        uint32_t getType( const Frame::Buffer buffer ) const;
 
         /** @return true if the image has a color buffer with alpha. */
-        EQ_EXPORT bool hasAlpha() const;
+        bool hasAlpha() const;
 
         /** 
          * Set the frame pixel storage type. 
@@ -109,7 +109,7 @@
         Frame::Type getStorageType() const{ return _type; }
 
         /** @return true if the image buffer has valid data. */
-        EQ_EXPORT bool hasData( const Frame::Buffer buffer ) const;
+        bool hasData( const Frame::Buffer buffer ) const;
 
         /** @return the fractional viewport of the image. */
         //const eq::Viewport& getViewport() const { return _data.vp; }
@@ -121,33 +121,33 @@
          *
          * @param pvp the pixel viewport.
          */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
 
         /** @return the pixel viewport of the image with in the frame buffer. */
         const PixelViewport& getPixelViewport() const { return _pvp; }
 
         /** Reset the image to its default state. */
-        EQ_EXPORT void reset();
+        void reset();
         //@}
 
 
         /** @name Pixel data */
         //@{
         /** @return a pointer to the raw pixel data. */
-        EQ_EXPORT const uint8_t* getPixelPointer( const Frame::Buffer buffer )
+        const uint8_t* getPixelPointer( const Frame::Buffer buffer )
                                      const;
-        EQ_EXPORT uint8_t* getPixelPointer( const Frame::Buffer buffer );
+        uint8_t* getPixelPointer( const Frame::Buffer buffer );
 
         /** @return the size of the raw pixel data in bytes */
         uint32_t getPixelDataSize( const Frame::Buffer buffer ) const
             { return _pvp.getArea() * getDepth( buffer ); }
 
         /** @return the pixel data. */
-        EQ_EXPORT const PixelData& getPixelData( const Frame::Buffer buffer )
+        const PixelData& getPixelData( const Frame::Buffer buffer )
                                        const;
 
         /** @return compress, if needed, and return the pixel data. */
-        EQ_EXPORT const PixelData& compressPixelData( const Frame::Buffer 
+        const PixelData& compressPixelData( const Frame::Buffer 
                                                           buffer );
 
         /**
@@ -162,10 +162,10 @@
          *
          * @param buffer the image buffer to clear.
          */
-        EQ_EXPORT void clearPixelData( const Frame::Buffer buffer );
+        void clearPixelData( const Frame::Buffer buffer );
 
         /** Validate an image buffer without initializing its content. */
-        EQ_EXPORT void validatePixelData( const Frame::Buffer buffer );
+        void validatePixelData( const Frame::Buffer buffer );
 
         /**
          * Set the pixel data of one of the image buffers.
@@ -176,7 +176,7 @@
          * @param buffer the image buffer to set.
          * @param data the buffer data of size pvp.w * pvp.h * depth.
          */
-        EQ_EXPORT void setPixelData( const Frame::Buffer buffer, 
+        void setPixelData( const Frame::Buffer buffer, 
                                      const uint8_t* data );
 
         /**
@@ -188,7 +188,7 @@
          * @param buffer the image buffer to set.
          * @param data the pixel data.
          */
-        EQ_EXPORT void setPixelData( const Frame::Buffer buffer,
+        void setPixelData( const Frame::Buffer buffer,
                                      const PixelData& data );
 
         /** Switch PBO usage for image transfers on. */
@@ -201,10 +201,10 @@
         bool usePBO() const { return _usePBO; }
 
         /** Enable compression and transport of alpha data. */
-        EQ_EXPORT void enableAlphaUsage();
+        void enableAlphaUsage();
 
         /** Disable compression and transport of alpha data. */
-        EQ_EXPORT void disableAlphaUsage();
+        void disableAlphaUsage();
 
         /** @return true if alpha data can be ignored. */
         bool ignoreAlpha() const { return _ignoreAlpha; }
@@ -214,19 +214,19 @@
         /** @name Texture access */
         //@{
         /** Get the texture of this image. */
-        EQ_EXPORT const Texture& getTexture( const Frame::Buffer buffer ) const;
+        const Texture& getTexture( const Frame::Buffer buffer ) const;
 
         /**
          * @return true if the image has texture data for the buffer, false if
          * not.
          */
-        EQ_EXPORT bool hasTextureData( const Frame::Buffer buffer ) const;
+        bool hasTextureData( const Frame::Buffer buffer ) const;
 
         /** 
          * @return the internal format a texture should use for the given
          *         buffer. 
          */
-        EQ_EXPORT uint32_t getInternalTextureFormat( const Frame::Buffer which )
+        uint32_t getInternalTextureFormat( const Frame::Buffer which )
                                const;
         //@}
 
@@ -244,23 +244,23 @@
          * @param glObjects the GL object manager for the current GL context.
          * @sa setStorageType()
          */
-        EQ_EXPORT void startReadback( const uint32_t buffers, 
+        void startReadback( const uint32_t buffers, 
                                       const PixelViewport& pvp,
                                       const Zoom& zoom,
                                       Window::ObjectManager* glObjects );
 
         /** Make sure that the last readback operation is complete. */
-        EQ_EXPORT void syncReadback();
+        void syncReadback();
 
         /** Writes the pixel data as rgb image files. */
-        EQ_EXPORT void writeImage( const std::string& filename,
+        void writeImage( const std::string& filename,
                                    const Frame::Buffer buffer ) const;
 
         /** Writes all valid pixel data as separate images. */
-        EQ_EXPORT void writeImages( const std::string& filenameTemplate ) const;
+        void writeImages( const std::string& filenameTemplate ) const;
 
         /** Read pixel data from an uncompressed rgb image file. */
-        EQ_EXPORT bool readImage( const std::string& filename, 
+        bool readImage( const std::string& filename, 
                                   const Frame::Buffer buffer   );
 
         /** Setting image offset, used after readback to correct position 
@@ -268,33 +268,33 @@
         void setOffset( int32_t x, int32_t y ) { _pvp.x = x; _pvp.y = y; }
 
         /** Delete all cache data of this image. */
-        EQ_EXPORT void flush();
+        void flush();
         //@}
 
         /** @return the GL function table, valid during readback. */
         GLEWContext* glewGetContext() { return _glObjects->glewGetContext(); }
 
         /** @return the number of channels in a pixel. */
-        EQ_EXPORT uint8_t getNumChannels( const Frame::Buffer buffer ) const;
+        uint8_t getNumChannels( const Frame::Buffer buffer ) const;
 
         /** @return the size in bytes for one channel. */
-        EQ_EXPORT uint8_t getChannelSize( const Frame::Buffer buffer ) const;
+        uint8_t getChannelSize( const Frame::Buffer buffer ) const;
 
         /** @return the size in bytes for one pixel (nChannels*channelSize). */
-        EQ_EXPORT uint32_t getDepth( const Frame::Buffer buffer ) const;
+        uint32_t getDepth( const Frame::Buffer buffer ) const;
 
         /** 
          * @return the list of possible compressors for the given buffer.
          * @internal
          */
-        EQ_EXPORT std::vector< uint32_t > 
+        std::vector< uint32_t > 
         findCompressors( const Frame::Buffer buffer ) const;
 
         /**
          * Re-allocate, if needed, a compressor instance.
          * @internal
          */
-        EQ_EXPORT bool allocCompressor( const Frame::Buffer buffer, 
+        bool allocCompressor( const Frame::Buffer buffer, 
                                         const uint32_t name );
 
     private:
Index: lib/client/node.h
===================================================================
--- lib/client/node.h	(revision 3295)
+++ lib/client/node.h	(working copy)
@@ -36,14 +36,14 @@
      *
      * Each node is executed in a seperate process.
      */
-    class Node : public net::Object
+    class EQ_EXPORT Node : public net::Object
     {
     public:
         /** Constructs a new node. */
-        EQ_EXPORT Node( Config* parent );
+        Node( Config* parent );
 
         /** Destructs the node. */
-        EQ_EXPORT virtual ~Node();
+        virtual ~Node();
 
         /** 
          * Returns the config of this node.
@@ -53,8 +53,8 @@
         Config*       getConfig()       { return _config; }
         const Config* getConfig() const { return _config; }
 
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
         const PipeVector& getPipes() const { return _pipes; }
         const std::string& getName() const { return _name; }
@@ -71,7 +71,7 @@
          */
         uint32_t getTasks() const { return _tasks; }
 
-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
+        CommandQueue* getNodeThreadQueue();
 
         /** 
          * Traverse this node and all children using a node visitor.
@@ -79,7 +79,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( NodeVisitor& visitor );
+        VisitorResult accept( NodeVisitor& visitor );
 
         /** 
          * Get a network barrier. 
@@ -100,8 +100,8 @@
         FrameData* getFrameData( const net::ObjectVersion& dataVersion );
 
         /** Wait for the node to be initialized. */
-        EQ_EXPORT void waitInitialized() const;
-        EQ_EXPORT bool isRunning() const;
+        void waitInitialized() const;
+        bool isRunning() const;
         
         /** 
          * Wait for a frame to be started.
@@ -109,7 +109,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrame()
          */
-        EQ_EXPORT void waitFrameStarted( const uint32_t frameNumber ) const;
+        void waitFrameStarted( const uint32_t frameNumber ) const;
 
         uint32_t getFinishedFrame() const { return _finishedFrame; }
 
@@ -127,10 +127,10 @@
             IATTR_ALL
         };
 
-        EQ_EXPORT void setIAttribute( const IAttribute attr,
+        void setIAttribute( const IAttribute attr,
                                       const int32_t value );
-        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
-        EQ_EXPORT static const std::string& getIAttributeString(
+        int32_t getIAttribute( const IAttribute attr ) const;
+        static const std::string& getIAttributeString(
                                                         const IAttribute attr );
         //@}
 
@@ -166,7 +166,7 @@
     protected:
         friend class Config;
 
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
@@ -177,21 +177,21 @@
          * 
          * @param frameNumber the frame to start.
          */
-        EQ_EXPORT void startFrame( const uint32_t frameNumber );
+        void startFrame( const uint32_t frameNumber );
 
         /** 
          * Signal the completion of a frame to the parent.
          * 
          * @param frameNumber the frame to end.
          */
-        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
+        void releaseFrame( const uint32_t frameNumber );
 
         /** 
          * Release the local synchronization of the parent for a frame.
          * 
          * @param frameNumber the frame to release.
          */
-        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
+        void releaseFrameLocal( const uint32_t frameNumber );
         //@}
 
         /**
@@ -207,12 +207,12 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Exit this node.
          */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /**
          * Start rendering a frame.
@@ -226,7 +226,7 @@
          * @param frameNumber the frame to start.
          * @sa startFrame(), Config::beginFrame()
          */
-        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
+        virtual void frameStart( const uint32_t frameID, 
                                            const uint32_t frameNumber );
 
         /**
@@ -255,7 +255,7 @@
          * @param frameNumber the frame finished with draw.
          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
          */
-        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
+        virtual void frameDrawFinish( const uint32_t frameID, 
                                                 const uint32_t frameNumber );
 
         /** 
@@ -272,7 +272,7 @@
          * @param frameNumber the frame finished with draw.
          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
          */
-        EQ_EXPORT virtual void frameTasksFinish( const uint32_t frameID, 
+        virtual void frameTasksFinish( const uint32_t frameID, 
                                                  const uint32_t frameNumber );
         //@}
 
@@ -286,7 +286,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
     private:
Index: lib/client/objectManager.h
===================================================================
--- lib/client/objectManager.h	(revision 3295)
+++ lib/client/objectManager.h	(working copy)
@@ -44,7 +44,7 @@
      * delete - delete.
      */
     template< typename T >
-    class ObjectManager : public base::NonCopyable
+    class EQ_EXPORT ObjectManager : public base::NonCopyable
     {
     public:
         enum
@@ -53,57 +53,57 @@
         };
 
         /** Construct a new object manager. */
-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext );
+        ObjectManager( GLEWContext* const glewContext );
 
         /** Construct a new object manager sharing data with another manager. */
-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
+        ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
 
-        EQ_EXPORT virtual ~ObjectManager();
+        virtual ~ObjectManager();
 
         /** @return the number of object managers currently sharing the data. */
         int getSharedUsage() const { return _data->getRefCount(); }
 
-        EQ_EXPORT void deleteAll();
+        void deleteAll();
 
-        EQ_EXPORT GLuint getList( const T& key );
-        EQ_EXPORT GLuint newList( const T& key, const GLsizei num = 1 );
-        EQ_EXPORT GLuint obtainList( const T& key, const GLsizei num = 1 );
-        EQ_EXPORT void   deleteList( const T& key );
+        GLuint getList( const T& key );
+        GLuint newList( const T& key, const GLsizei num = 1 );
+        GLuint obtainList( const T& key, const GLsizei num = 1 );
+        void   deleteList( const T& key );
 
-        EQ_EXPORT GLuint getTexture( const T& key );
-        EQ_EXPORT GLuint newTexture( const T& key );
-        EQ_EXPORT GLuint obtainTexture( const T& key );
-        EQ_EXPORT void   deleteTexture( const T& key );
+        GLuint getTexture( const T& key );
+        GLuint newTexture( const T& key );
+        GLuint obtainTexture( const T& key );
+        void   deleteTexture( const T& key );
 
-        EQ_EXPORT bool   supportsBuffers() const;
-        EQ_EXPORT GLuint getBuffer( const T& key );
-        EQ_EXPORT GLuint newBuffer( const T& key );
-        EQ_EXPORT GLuint obtainBuffer( const T& key );
-        EQ_EXPORT void   deleteBuffer( const T& key );
+        bool   supportsBuffers() const;
+        GLuint getBuffer( const T& key );
+        GLuint newBuffer( const T& key );
+        GLuint obtainBuffer( const T& key );
+        void   deleteBuffer( const T& key );
 
-        EQ_EXPORT bool   supportsPrograms() const;
-        EQ_EXPORT GLuint getProgram( const T& key );
-        EQ_EXPORT GLuint newProgram( const T& key );
-        EQ_EXPORT GLuint obtainProgram( const T& key );
-        EQ_EXPORT void   deleteProgram( const T& key );
+        bool   supportsPrograms() const;
+        GLuint getProgram( const T& key );
+        GLuint newProgram( const T& key );
+        GLuint obtainProgram( const T& key );
+        void   deleteProgram( const T& key );
 
-        EQ_EXPORT bool   supportsShaders() const;
-        EQ_EXPORT GLuint getShader( const T& key );
-        EQ_EXPORT GLuint newShader( const T& key, const GLenum type );
-        EQ_EXPORT GLuint obtainShader( const T& key, const GLenum type );
-        EQ_EXPORT void   deleteShader( const T& key );
+        bool   supportsShaders() const;
+        GLuint getShader( const T& key );
+        GLuint newShader( const T& key, const GLenum type );
+        GLuint obtainShader( const T& key, const GLenum type );
+        void   deleteShader( const T& key );
 
-        EQ_EXPORT bool     supportsEqTexture() const;
-        EQ_EXPORT Texture* getEqTexture( const T& key );
-        EQ_EXPORT Texture* newEqTexture( const T& key );
-        EQ_EXPORT Texture* obtainEqTexture( const T& key );
-        EQ_EXPORT void     deleteEqTexture( const T& key );
+        bool     supportsEqTexture() const;
+        Texture* getEqTexture( const T& key );
+        Texture* newEqTexture( const T& key );
+        Texture* obtainEqTexture( const T& key );
+        void     deleteEqTexture( const T& key );
 
-        EQ_EXPORT bool               supportsEqFrameBufferObject() const;
-        EQ_EXPORT FrameBufferObject* getEqFrameBufferObject( const T& key );
-        EQ_EXPORT FrameBufferObject* newEqFrameBufferObject( const T& key );
-        EQ_EXPORT FrameBufferObject* obtainEqFrameBufferObject( const T& key );
-        EQ_EXPORT void               deleteEqFrameBufferObject( const T& key );
+        bool               supportsEqFrameBufferObject() const;
+        FrameBufferObject* getEqFrameBufferObject( const T& key );
+        FrameBufferObject* newEqFrameBufferObject( const T& key );
+        FrameBufferObject* obtainEqFrameBufferObject( const T& key );
+        void               deleteEqFrameBufferObject( const T& key );
 
         const GLEWContext* glewGetContext() const { return _glewContext; }
         GLEWContext* glewGetContext()             { return _glewContext; }
Index: lib/client/pipe.h
===================================================================
--- lib/client/pipe.h	(revision 3295)
+++ lib/client/pipe.h	(working copy)
@@ -52,26 +52,26 @@
      * the pipe is non-threaded, in which case the tasks are executed on the
      * Node's main thread.
      */
-    class Pipe : public net::Object
+    class EQ_EXPORT Pipe : public net::Object
     {
     public:
         /** Constructs a new pipe. */
-        EQ_EXPORT Pipe( Node* parent );
+        Pipe( Node* parent );
 
         /** Destructs the pipe. */
-        EQ_EXPORT virtual ~Pipe();
+        virtual ~Pipe();
 
         /** @name Data Access. */
         //@{
-        EQ_EXPORT net::CommandQueue* getPipeThreadQueue();
+        net::CommandQueue* getPipeThreadQueue();
         Node*       getNode()       { return _node; }
         const Node* getNode() const { return _node; }
 
-        EQ_EXPORT Config* getConfig();
-        EQ_EXPORT const Config* getConfig() const;
+        Config* getConfig();
+        const Config* getConfig() const;
 
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
         const WindowVector& getWindows() const { return _windows; }
 
@@ -91,7 +91,7 @@
 
         bool isThreaded() const { return ( _thread != 0 ); }
         uint32_t getCurrentFrame()  const { return _currentFrame; }
-        EQ_EXPORT uint32_t getFinishedFrame() const;
+        uint32_t getFinishedFrame() const;
 
         /** 
          * Traverse this pipe and all children using a pipe visitor.
@@ -99,7 +99,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( PipeVisitor& visitor );
+        VisitorResult accept( PipeVisitor& visitor );
 
         /**
          * Set the pipes's pixel viewport.
@@ -151,10 +151,10 @@
         WindowSystem getWindowSystem() const { return _windowSystem; }
 
         /** @return the time in ms elapsed since the frame started. */
-        EQ_EXPORT int64_t getFrameTime() const;
+        int64_t getFrameTime() const;
 
         /** @return the generic WGL function table for the pipe. */
-        EQ_EXPORT WGLEWContext* wglewGetContext();
+        WGLEWContext* wglewGetContext();
         //@}
 
         /**
@@ -186,8 +186,8 @@
         //@}
 
         /** Wait for the pipe to be exited. */
-        EQ_EXPORT void waitExited() const;
-        EQ_EXPORT bool isRunning() const;
+        void waitExited() const;
+        bool isRunning() const;
         
         /** 
          * Wait for a frame to be finished.
@@ -195,7 +195,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrame()
          */
-        EQ_EXPORT void waitFrameFinished( const uint32_t frameNumber ) const;
+        void waitFrameFinished( const uint32_t frameNumber ) const;
 
         /** 
          * Wait for a frame to be released locally.
@@ -203,7 +203,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrameLocal()
          */
-        EQ_EXPORT void waitFrameLocal( const uint32_t frameNumber ) const;
+        void waitFrameLocal( const uint32_t frameNumber ) const;
 
         /** Start the pipe thread. */
         void startThread();
@@ -252,14 +252,14 @@
          * 
          * @param frameNumber the frame to start.
          */
-        EQ_EXPORT void startFrame( const uint32_t frameNumber );
+        void startFrame( const uint32_t frameNumber );
 
         /** 
          * Signal the completion of a frame to the parent.
          * 
          * @param frameNumber the frame to end.
          */
-        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
+        void releaseFrame( const uint32_t frameNumber );
 
         /** 
          * Release the local synchronization of the parent for a frame.
@@ -272,7 +272,7 @@
          * 
          * @param frameNumber the frame to release.
          */
-        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
+        void releaseFrameLocal( const uint32_t frameNumber );
         //@}
 
         /**
@@ -290,7 +290,7 @@
          * @return <code>true</code> if the window system is supported,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool supportsWindowSystem( const WindowSystem system )
+        virtual bool supportsWindowSystem( const WindowSystem system )
                                    const;
 
         /** 
@@ -301,19 +301,19 @@
          * 
          * @return the window system currently used by this pipe.
          */
-        EQ_EXPORT virtual WindowSystem selectWindowSystem() const;
+        virtual WindowSystem selectWindowSystem() const;
 
         /** 
          * Initialises this pipe.
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Exit this pipe.
          */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /**
          * Start rendering a frame.
@@ -331,7 +331,7 @@
          * @sa Config::beginFrame(), Node::startFrame(), 
          *     Node::waitFrameStarted()
          */
-        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
+        virtual void frameStart( const uint32_t frameID, 
                                            const uint32_t frameNumber );
 
         /**
@@ -347,7 +347,7 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finish.
          */
-        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
+        virtual void frameFinish( const uint32_t frameID, 
                                             const uint32_t frameNumber );
 
         /** 
@@ -359,7 +359,7 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finished with draw.
          */
-        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
+        virtual void frameDrawFinish( const uint32_t frameID, 
                                                 const uint32_t frameNumber );
 
         /** @name Configuration. */
@@ -376,7 +376,7 @@
         //@}
 
         /** @sa net::Object::attachToSession. */
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
Index: lib/client/projection.h
===================================================================
--- lib/client/projection.h	(revision 3295)
+++ lib/client/projection.h	(working copy)
@@ -34,30 +34,30 @@
      * wall at the given distance. The fov defines the horizontal and
      * vertical field of view of the projector.
      */
-    class Projection
+    class EQ_EXPORT Projection
     {
     public:
-        EQ_EXPORT Projection();
+        Projection();
 
         /** 
          * Resize the horizontal FOV.
          * 
          * @param ratio the amount by which the FOV is grown or shrunk.
          */
-        EQ_EXPORT void resizeHorizontal( const float ratio );
+        void resizeHorizontal( const float ratio );
 
         /** 
          * Resize the vertical FOV.
          * 
          * @param ratio the amount by which the FOV is grown or shrunk.
          */
-        EQ_EXPORT void resizeVertical( const float ratio );
+        void resizeVertical( const float ratio );
 
         /** Set the projection parameters from a wall description. */
-        EQ_EXPORT Projection& operator = ( const Wall& wall );
+        Projection& operator = ( const Wall& wall );
 
-        EQ_EXPORT bool operator == ( const Projection& rhs ) const;
-        EQ_EXPORT bool operator != ( const Projection& rhs ) const;
+        bool operator == ( const Projection& rhs ) const;
+        bool operator != ( const Projection& rhs ) const;
         
         Vector3f origin;
         float    distance;
Index: lib/client/server.cpp
===================================================================
--- lib/client/server.cpp	(revision 3295)
+++ lib/client/server.cpp	(working copy)
@@ -275,4 +275,10 @@
     _requestHandler.serveRequest( packet->requestID, packet->result );
     return net::COMMAND_HANDLED;
 }
+
+void clear( ServerPtr& server )
+{
+	server = 0;
 }
+
+}
\ No newline at end of file
Index: lib/client/server.h
===================================================================
--- lib/client/server.h	(revision 3295)
+++ lib/client/server.h	(working copy)
@@ -39,19 +39,19 @@
      * and release a Config from the server.
      * @sa Client::connectServer
      */
-    class Server : public net::Node
+    class EQ_EXPORT Server : public net::Node
     {
     public:
         /** Construct a new server. */
-        EQ_EXPORT Server();
+        Server();
 
         /** @name Internal */
         //@{
         void setClient( ClientPtr client );
         ClientPtr getClient(){ return _client; }
 
-        EQ_EXPORT net::CommandQueue* getNodeThreadQueue();
-        EQ_EXPORT net::CommandQueue* getCommandThreadQueue();
+        net::CommandQueue* getNodeThreadQueue();
+        net::CommandQueue* getCommandThreadQueue();
         //@}
 
         /** 
@@ -61,10 +61,10 @@
          * @return The chosen config, or 0if no matching config was found.
          * @sa ConfigParams
          */
-        EQ_EXPORT Config* chooseConfig( const ConfigParams& parameters );
+        Config* chooseConfig( const ConfigParams& parameters );
 
         /** @warning Undocumented - may not be supported in the future */
-        EQ_EXPORT Config* useConfig( const ConfigParams& parameters, 
+        Config* useConfig( const ConfigParams& parameters, 
                                      const std::string& config );
 
         /** 
@@ -75,16 +75,16 @@
          *
          * @param config the configuration.
          */
-        EQ_EXPORT void releaseConfig( Config* config );
+        void releaseConfig( Config* config );
 
         /** Undocumented - may not be supported in the future */
-        EQ_EXPORT bool shutdown();
+        bool shutdown();
 
     protected:
         /**
          * Destructs this server.
          */
-        EQ_EXPORT virtual ~Server();
+        virtual ~Server();
 
     private:
         /** The local client connected to the server */
@@ -110,6 +110,8 @@
         net::CommandResult _cmdShutdownReply( net::Command& command );
     };
 
+	EQ_EXPORT void clear( ServerPtr& server );
+
     inline std::ostream& operator << ( std::ostream& os, const Server* server )
     {
         if( !server )
Index: lib/client/wall.h
===================================================================
--- lib/client/wall.h	(revision 3295)
+++ lib/client/wall.h	(working copy)
@@ -34,58 +34,58 @@
      * The three points describe the bottom left, bottom right and top left
      * coordinate of the wall in real-world coordinates.
      */
-    class Wall
+    class EQ_EXPORT Wall
     {
     public:
-        EQ_EXPORT Wall();
+        Wall();
 
         /** 
          * Resize the wall horizontally.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeHorizontal( const float ratio );
+        void resizeHorizontal( const float ratio );
 
         /** 
          * Resize the wall vertically.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeVertical( const float ratio );
+        void resizeVertical( const float ratio );
         
         /** 
          * Resize the wall on the left side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeLeft( const float ratio );
+        void resizeLeft( const float ratio );
 
         /** 
          * Resize the wall on the right side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeRight( const float ratio );
+        void resizeRight( const float ratio );
 
         /** 
          * Resize the wall on the top side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeTop( const float ratio );
+        void resizeTop( const float ratio );
 
         /** 
          * Resize the wall on the bottom side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeBottom( const float ratio );
+        void resizeBottom( const float ratio );
 
         /** Compute the sub-frustum for a 2D area on the full wall. */
-        EQ_EXPORT void apply( const Viewport& viewport);
+        void apply( const Viewport& viewport);
 
         /** Set the wall parameters from a projection description. */
-        EQ_EXPORT Wall& operator = ( const Projection& projection );
+        Wall& operator = ( const Projection& projection );
 
         /** @return the width of the wall. */
         float getWidth() const { return (bottomRight - bottomLeft).length(); }
@@ -93,8 +93,8 @@
         /** @return the height of the wall. */
         float getHeight() const { return (topLeft - bottomLeft).length(); }
 
-        EQ_EXPORT bool operator == ( const Wall& rhs ) const;
-        EQ_EXPORT bool operator != ( const Wall& rhs ) const;
+        bool operator == ( const Wall& rhs ) const;
+        bool operator != ( const Wall& rhs ) const;
 
         Vector3f bottomLeft;
         Vector3f bottomRight;
Index: lib/client/wglEventHandler.h
===================================================================
--- lib/client/wglEventHandler.h	(revision 3295)
+++ lib/client/wglEventHandler.h	(working copy)
@@ -31,14 +31,14 @@
      * by a 'wndproc' callback in the thread which created the window. Each
      * window has its own WGLEventHandler
      */
-    class WGLEventHandler : public EventHandler
+    class EQ_EXPORT WGLEventHandler : public EventHandler
     {
     public:
         /** Constructs a new WGL event handler. */
-        EQ_EXPORT WGLEventHandler( WGLWindowIF* window );
+        WGLEventHandler( WGLWindowIF* window );
 
         /** Destructs the WGL event handler. */
-        EQ_EXPORT virtual ~WGLEventHandler();
+        virtual ~WGLEventHandler();
 
         /** 
          * @return the function pointer of the previously installed window
Index: lib/client/wglWindowEvent.h
===================================================================
--- lib/client/wglWindowEvent.h	(revision 3295)
+++ lib/client/wglWindowEvent.h	(working copy)
@@ -24,7 +24,7 @@
 namespace eq
 {
     /** A window-system event for a WGLWindowIF */
-    class WGLWindowEvent : public Event
+    class EQ_EXPORT WGLWindowEvent : public Event
     {
     public:
         // Native event data
Index: lib/client/window.h
===================================================================
--- lib/client/window.h	(revision 3295)
+++ lib/client/window.h	(working copy)
@@ -48,7 +48,7 @@
      * to synchronize the state of OpenGL objects between windows. Therefore,
      * Equalizer calls flush() at the end of each frame for each window.
      */
-    class Window : public net::Object
+    class EQ_EXPORT Window : public net::Object
     {
     public:
         /** Stores current drawable characteristics. */
@@ -92,27 +92,27 @@
         };
 
         /** Constructs a new window. */
-        EQ_EXPORT Window( Pipe* parent );
+        Window( Pipe* parent );
 
         /** Destructs the window. */
-        EQ_EXPORT virtual ~Window();
+        virtual ~Window();
 
         /** @name Data Access */
         //@{
-        EQ_EXPORT net::CommandQueue* getPipeThreadQueue();
+        net::CommandQueue* getPipeThreadQueue();
 
         /** @return the pipe of this window. */
         const Pipe* getPipe() const { return _pipe; }
         Pipe*       getPipe()       { return _pipe; }
 
-        EQ_EXPORT const Node* getNode() const; 
-        EQ_EXPORT Node*       getNode();
+        const Node* getNode() const; 
+        Node*       getNode();
 
-        EQ_EXPORT const Config* getConfig() const;
-        EQ_EXPORT Config*       getConfig();
+        const Config* getConfig() const;
+        Config*       getConfig();
 
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
         const ChannelVector& getChannels() { return _channels; }
 
@@ -138,7 +138,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( WindowVisitor& visitor );
+        VisitorResult accept( WindowVisitor& visitor );
 
         /** 
          * Set the window with which this window shares the OpenGL context,
@@ -169,10 +169,10 @@
          * @return the extended OpenGL function table for the window's OpenGL
          *         context.
          */
-        EQ_EXPORT GLEWContext* glewGetContext();
+        GLEWContext* glewGetContext();
 
         /** @return the generic WGL function table for the window's pipe. */
-        EQ_EXPORT WGLEWContext* wglewGetContext();
+        WGLEWContext* wglewGetContext();
 
         /** @return information about the current drawable. */
         const DrawableConfig& getDrawableConfig() const 
@@ -189,12 +189,12 @@
          * 
          * @param pvp the viewport in pixels.
          */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
         
         /** 
          * @return the window's pixel viewport
          */
-        EQ_EXPORT const PixelViewport& getPixelViewport() const { return _pvp; }
+        const PixelViewport& getPixelViewport() const { return _pvp; }
 
         /** 
          * @return the window's fractional viewport.
@@ -205,7 +205,7 @@
         void addRenderContext( const RenderContext& context );
 
         /** Get the last rendering context at the x, y position. */
-        EQ_EXPORT bool getRenderContext( const int32_t x, const int32_t y,
+        bool getRenderContext( const int32_t x, const int32_t y,
                                          RenderContext& context ) const;
         //@}
 
@@ -237,10 +237,10 @@
             IATTR_ALL
         };
 
-        EQ_EXPORT void setIAttribute( const IAttribute attr,
+        void setIAttribute( const IAttribute attr,
                                       const int32_t value );
-        EQ_EXPORT int32_t  getIAttribute( const IAttribute attr ) const;
-        EQ_EXPORT static const std::string& getIAttributeString(
+        int32_t  getIAttribute( const IAttribute attr ) const;
+        static const std::string& getIAttributeString(
                                                 const IAttribute attr );
         //@}
 
@@ -265,7 +265,7 @@
          * e.g., swapBuffers() to the OS window. The os-specific window has to
          * be initialized.
          */
-        EQ_EXPORT void setOSWindow( OSWindow* window );
+        void setOSWindow( OSWindow* window );
 
         const OSWindow* getOSWindow() const { return _osWindow; }
         OSWindow*       getOSWindow()       { return _osWindow; }
@@ -282,7 +282,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
         /**
@@ -303,7 +303,7 @@
          * @param event the received window system event.
          * @return true when the event was handled, false if not.
          */
-        EQ_EXPORT virtual bool processEvent( const Event& event );
+        virtual bool processEvent( const Event& event );
 
         //@}
 
@@ -311,18 +311,18 @@
         double getFPS() const { return _avgFPS; }
 
         /* Draw FPS count */
-        EQ_EXPORT virtual void drawFPS() const;
+        virtual void drawFPS() const;
 
         /** @return the internal color type */
         int getColorType();
         
         /** @return true if FBO is used */
-        EQ_EXPORT bool isFBOWindow();
+        bool isFBOWindow();
 
     protected:
         friend class Pipe;
 
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
@@ -363,14 +363,14 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Initialize the OS-specific window.
          *
          * @sa setOSWindow()
          */
-        EQ_EXPORT virtual bool configInitOSWindow( const uint32_t initID );
+        virtual bool configInitOSWindow( const uint32_t initID );
 
         /** 
          * Initialize the OpenGL state for this window.
@@ -379,13 +379,13 @@
          * @return <code>true</code> if the initialization was successful,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool configInitGL( const uint32_t initID );
+        virtual bool configInitGL( const uint32_t initID );
 
         /** Exit this window. */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /** De-initialize the OS-specific window. */
-        EQ_EXPORT virtual bool configExitOSWindow();
+        virtual bool configExitOSWindow();
 
         /** De-initializer the OpenGL state for this window. */
         virtual bool configExitGL() { return true; }
@@ -416,7 +416,7 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finish.
          */
-        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
+        virtual void frameFinish( const uint32_t frameID, 
                                             const uint32_t frameNumber );
 
         /** 
@@ -440,13 +440,13 @@
          * this method will only call OSWindow::makeCurrent if it has not been
          * done before for this window.
          */
-        EQ_EXPORT virtual void makeCurrent( const bool cache = true ) const;
+        virtual void makeCurrent( const bool cache = true ) const;
 
         /** Bind the window's FBO, if it uses one. */
-        EQ_EXPORT virtual void bindFrameBuffer() const;
+        virtual void bindFrameBuffer() const;
 
         /** Swap the front and back buffer of the window. */
-        EQ_EXPORT virtual void swapBuffers();
+        virtual void swapBuffers();
         //@}
 
     private:
Index: lib/net/barrier.h
===================================================================
--- lib/net/barrier.h	(revision 3295)
+++ lib/net/barrier.h	(working copy)
@@ -77,7 +77,7 @@
          * The implementation assumes that the master node instance also enters
          * the barrier.
          */
-        EQ_EXPORT void enter();
+        void enter();
         //@}
 
     protected:
Index: lib/net/bufferConnection.h
===================================================================
--- lib/net/bufferConnection.h	(revision 3295)
+++ lib/net/bufferConnection.h	(working copy)
@@ -28,22 +28,22 @@
     /**
      * A proxy connection buffering outgoing data into a memory region.
      */
-    class BufferConnection : public Connection
+    class EQ_EXPORT BufferConnection : public Connection
     {
     public:
-        EQ_EXPORT BufferConnection();
-        EQ_EXPORT virtual ~BufferConnection();
+        BufferConnection();
+        virtual ~BufferConnection();
 
-        EQ_EXPORT void sendBuffer( ConnectionPtr connection );
+        void sendBuffer( ConnectionPtr connection );
 
-        EQ_EXPORT uint64_t getSize() const { return _buffer.getSize(); }
+        uint64_t getSize() const { return _buffer.getSize(); }
 
     protected:
         virtual void readNB( void* buffer, const uint64_t bytes )
             { EQDONTCALL; }
         virtual int64_t readSync( void* buffer, const uint64_t bytes )
             { EQDONTCALL; return -1; }
-        EQ_EXPORT virtual int64_t write( const void* buffer,
+        virtual int64_t write( const void* buffer,
                                          const uint64_t bytes );
 
     private:
Index: lib/net/commandCache.h
===================================================================
--- lib/net/commandCache.h	(revision 3295)
+++ lib/net/commandCache.h	(working copy)
@@ -37,7 +37,7 @@
      * Commands are retained and released whenever they are not directly
      * processed, e.g., when pushed to another thread using a CommandQueue.
      */
-    class CommandCache
+    class EQ_EXPORT CommandCache
     {
     public:
         CommandCache();
Index: lib/net/commandQueue.h
===================================================================
--- lib/net/commandQueue.h	(revision 3295)
+++ lib/net/commandQueue.h	(working copy)
@@ -32,21 +32,21 @@
     /**
      * A CommandQueue is a thread-safe queue for command packets.
      */
-    class CommandQueue : public base::NonCopyable
+    class EQ_EXPORT CommandQueue : public base::NonCopyable
     {
     public:
-        EQ_EXPORT CommandQueue();
-        EQ_EXPORT virtual ~CommandQueue();
+        CommandQueue();
+        virtual ~CommandQueue();
 
         /** 
          * Push a command to the queue.
          * 
          * @param packet the command packet.
          */
-        EQ_EXPORT virtual void push( Command& packet );
+        virtual void push( Command& packet );
 
         /** Push a command to the front of the queue. */
-        EQ_EXPORT virtual void pushFront( Command& packet );
+        virtual void pushFront( Command& packet );
 
         /** Wake up the command queue, pop() will return 0. */
         virtual void wakeup() { _commands.push( static_cast< Command* >( 0 )); }
@@ -58,7 +58,7 @@
          * 
          * @return the next command in the queue.
          */
-        EQ_EXPORT virtual Command* pop();
+        virtual Command* pop();
 
         /** 
          * Try to pop a command from the queue.
@@ -67,14 +67,14 @@
          * 
          * @return the next command in the queue, or 0 if no command is queued.
          */
-        EQ_EXPORT virtual Command* tryPop();
+        virtual Command* tryPop();
 
         /** 
          * Peek the command at the end of the queue.
          *
          * @return the last command in the queue, or 0 if no command is queued.
          */
-        EQ_EXPORT Command* back() const;
+        Command* back() const;
 
         /** 
          * @return <code>true</code> if the command queue is empty,
Index: lib/net/connection.h
===================================================================
--- lib/net/connection.h	(revision 3295)
+++ lib/net/connection.h	(working copy)
@@ -66,7 +66,7 @@
      * The Connection is used reference-counted in eq::net, since it has
      * multiple owners, such as the ConnectionSet and Node.
      */
-    class Connection : public base::Referenced, public base::NonCopyable
+    class EQ_EXPORT Connection : public base::Referenced, public base::NonCopyable
     {
     public:
         enum State //! The current state of the Connection
@@ -86,7 +86,7 @@
          * @param description the connection parameters.
          * @return the connection.
          */
-        EQ_EXPORT static ConnectionPtr create( ConnectionDescriptionPtr 
+        static ConnectionPtr create( ConnectionDescriptionPtr 
                                                    description );
 
         /** @name Data Access */
@@ -108,10 +108,10 @@
          * 
          * @param description the connection parameters.
          */
-        EQ_EXPORT void setDescription( ConnectionDescriptionPtr description );
+        void setDescription( ConnectionDescriptionPtr description );
 
         /** @return the description for this connection. */
-        EQ_EXPORT ConnectionDescriptionPtr getDescription() const;
+        ConnectionDescriptionPtr getDescription() const;
         //@}
 
 
@@ -190,7 +190,7 @@
          * @param bytes the number of bytes to read.
          * @sa recvSync()
          */
-        EQ_EXPORT void recvNB( void* buffer, const uint64_t bytes );
+        void recvNB( void* buffer, const uint64_t bytes );
 
         /** 
          * Finish reading data from the connection.
@@ -204,7 +204,7 @@
          * @param bytes return value, the number of bytes read.
          * @return true if all requested data has been read, false otherwise.
          */
-        EQ_EXPORT bool recvSync( void** buffer, uint64_t* bytes );
+        bool recvSync( void** buffer, uint64_t* bytes );
 
         void getRecvData( void** buffer, uint64_t* bytes )
             { *buffer = _aioBuffer; *bytes = _aioBytes; }
@@ -253,7 +253,7 @@
          * @return true if all data has been read, false if not.
          * @sa lockSend(), unlockSend()
          */
-        EQ_EXPORT bool send( const void* buffer, const uint64_t bytes, 
+        bool send( const void* buffer, const uint64_t bytes, 
                              const bool isLocked = false );
 
         /** Lock the connection, no other thread can send data. */
@@ -307,7 +307,7 @@
          * @param size the data size in bytes.
          * @return true if all data has been read, false if not.
          */
-        EQ_EXPORT bool send( Packet& packet, const void* data,
+        bool send( Packet& packet, const void* data,
                              const uint64_t size );
 
         /** 
Index: lib/net/connectionDescription.h
===================================================================
--- lib/net/connectionDescription.h	(revision 3295)
+++ lib/net/connectionDescription.h	(working copy)
@@ -32,7 +32,7 @@
      *
      * @sa Node
      */
-    class ConnectionDescription : public base::Referenced
+    class EQ_EXPORT ConnectionDescription : public base::Referenced
     {
     public:
         ConnectionDescription() 
@@ -72,8 +72,8 @@
         char launchCommandQuote;
 
         /** @return this description as a string. */
-        EQ_EXPORT std::string toString() const;
-        EQ_EXPORT void serialize( std::ostream& os ) const;
+        std::string toString() const;
+        void serialize( std::ostream& os ) const;
 
         /** 
          * Reads the connection description from a string.
@@ -84,23 +84,23 @@
          * @return <code>true</code> if the information was read correctly, 
          *         <code>false</code> if not.
          */
-        EQ_EXPORT bool fromString( std::string& data );
+        bool fromString( std::string& data );
 
         /** @name Data Access
          *
          * std::strings are not public because of DLL allocation issues.
          */
         //@{
-        EQ_EXPORT void setHostname( const std::string& hostname );
-        EQ_EXPORT const std::string& getHostname() const;
-        EQ_EXPORT void setLaunchCommand( const std::string& launchCommand );
-        EQ_EXPORT const std::string& getLaunchCommand() const;
-        EQ_EXPORT void setFilename( const std::string& filename );
-        EQ_EXPORT const std::string& getFilename() const;
+        void setHostname( const std::string& hostname );
+        const std::string& getHostname() const;
+        void setLaunchCommand( const std::string& launchCommand );
+        const std::string& getLaunchCommand() const;
+        void setFilename( const std::string& filename );
+        const std::string& getFilename() const;
         //@}
 
     protected:
-        EQ_EXPORT virtual ~ConnectionDescription() {}
+        virtual ~ConnectionDescription() {}
 
     private:
         /** 
Index: lib/net/connectionSet.h
===================================================================
--- lib/net/connectionSet.h	(revision 3295)
+++ lib/net/connectionSet.h	(working copy)
@@ -41,7 +41,7 @@
      *
      * From the set, a connection with pending events can be selected.
      */
-    class ConnectionSet : public ConnectionListener
+    class EQ_EXPORT ConnectionSet : public ConnectionListener
     {
     public:
         enum Event
@@ -58,12 +58,12 @@
             EVENT_ALL
         };
 
-        EQ_EXPORT ConnectionSet();
-        EQ_EXPORT ~ConnectionSet();
+        ConnectionSet();
+        ~ConnectionSet();
 
-        EQ_EXPORT void addConnection( ConnectionPtr connection );
-        EQ_EXPORT bool removeConnection( ConnectionPtr connection );
-        EQ_EXPORT void clear();
+        void addConnection( ConnectionPtr connection );
+        bool removeConnection( ConnectionPtr connection );
+        void clear();
         size_t size()  const { return _connections.size(); }
         bool   empty() const { return _connections.empty(); }
 
@@ -79,12 +79,12 @@
          *                indefinitly.
          * @return The event occured during selection.
          */
-        EQ_EXPORT Event select( const int timeout = -1 );
+        Event select( const int timeout = -1 );
 
         /**
          * Interrupt the current or next select call.
          */
-        EQ_EXPORT void interrupt();
+        void interrupt();
 
         int           getError()     { return _error; }
         ConnectionPtr getConnection(){ return _connection; }
Index: lib/net/dataOStream.h
===================================================================
--- lib/net/dataOStream.h	(revision 3295)
+++ lib/net/dataOStream.h	(working copy)
@@ -35,7 +35,7 @@
      *
      * Derived classes send the data using the appropriate command packets.
      */
-    class DataOStream
+    class EQ_EXPORT DataOStream
     {
     public:
         /** @name Internal */
@@ -95,10 +95,10 @@
             }
 
         /** Write a number of bytes from data into the stream. */
-        EQ_EXPORT void write( const void* data, uint64_t size );
+        void write( const void* data, uint64_t size );
 
         /** Write one block of data into the stream and close it immediately. */
-        EQ_EXPORT void writeOnce( const void* data, uint64_t size );
+        void writeOnce( const void* data, uint64_t size );
         //@}
 
  
Index: lib/net/dispatcher.h
===================================================================
--- lib/net/dispatcher.h	(revision 3295)
+++ lib/net/dispatcher.h	(working copy)
@@ -40,12 +40,12 @@
      * Provides packet dispatch through a command queue and command handler
      * table. Returns the result of the invoked command handlers.
      */
-    class Dispatcher
+    class EQ_EXPORT Dispatcher
     {
     public:
-        EQ_EXPORT Dispatcher();
-		EQ_EXPORT Dispatcher( const Dispatcher& from );
-        EQ_EXPORT virtual ~Dispatcher();
+        Dispatcher();
+		Dispatcher( const Dispatcher& from );
+        virtual ~Dispatcher();
 
         /** NOP assignment operator. */
         const Dispatcher& operator = ( const Dispatcher& ) { return *this; }
@@ -58,7 +58,7 @@
          *         be dispatched again later)
          * @sa registerCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
+        virtual bool dispatchCommand( Command& command );
 
         /** 
          * Handles a received command packet for this object by calling the
@@ -68,7 +68,7 @@
          * @return the result of the operation.
          * @sa registerCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
+        virtual CommandResult invokeCommand( Command& command );
  
     protected:
         /** 
@@ -97,7 +97,7 @@
         CommandResult _cmdUnknown( Command& command );
 
     private:
-        EQ_EXPORT void _registerCommand( const uint32_t command, 
+        void _registerCommand( const uint32_t command, 
                                          const CommandFunc< Dispatcher >& func,
                                          CommandQueue* destinationQueue );
 
Index: lib/net/namedPipeConnection.h
===================================================================
--- lib/net/namedPipeConnection.h	(revision 3295)
+++ lib/net/namedPipeConnection.h	(working copy)
@@ -37,7 +37,7 @@
     /**
      * A .
      */
-    class NamedPipeConnection
+    class EQ_EXPORT NamedPipeConnection
 #ifdef WIN32
         : public Connection
 #else
Index: lib/net/node.cpp
===================================================================
--- lib/net/node.cpp	(revision 3295)
+++ lib/net/node.cpp	(working copy)
@@ -339,7 +339,7 @@
 
     if( !connection->isClosed( ))
         connection->close(); // cancels pending IO's
-    delete reinterpret_cast< uint64_t* >( buffer );
+    //delete reinterpret_cast< uint64_t* >( buffer );
 }
 
 void Node::_cleanup()
Index: lib/net/node.h
===================================================================
--- lib/net/node.h	(revision 3295)
+++ lib/net/node.h	(working copy)
@@ -56,7 +56,7 @@
      * sessions, that is, one or more Session can be mapped to a Node, in which
      * case the node will dispatch packets to these sessions.
      */
-    class Node : public Dispatcher, public base::Referenced
+    class EQ_EXPORT Node : public Dispatcher, public base::Referenced
     {
     public:
         /** The state of the node. */
@@ -69,7 +69,7 @@
         };
 
         /** Construct a new Node. */
-        EQ_EXPORT Node();
+        Node();
 
         /** @name Data Access. */
         //@{
@@ -87,14 +87,14 @@
          * 
          * @param name the program name to start this node.
          */
-        EQ_EXPORT void setProgramName( const std::string& name );
+        void setProgramName( const std::string& name );
 
         /** 
          * Set the working directory to start this node.
          * 
          * @param name the working directory to start this node.
          */
-        EQ_EXPORT void setWorkDir( const std::string& name );
+        void setWorkDir( const std::string& name );
 
         /** 
          * Get a node by identifier.
@@ -126,7 +126,7 @@
          * @return <code>true</code> if the client was successfully initialized,
          *         <code>false</code> otherwise.
          */
-        EQ_EXPORT virtual bool initLocal( const int argc, char** argv );
+        virtual bool initLocal( const int argc, char** argv );
 
         /** Exit a local, listening node. */
         virtual bool exitLocal() { return stopListening(); }
@@ -146,7 +146,7 @@
          *         <code>false</code> if not.
          * @sa connect
          */
-        EQ_EXPORT virtual bool listen();
+        virtual bool listen();
 
         /** 
          * Stop this node.
@@ -157,7 +157,7 @@
          * @return <code>true</code> if the node was stopped, <code>false</code>
          *         if it was not stopped.
          */
-        EQ_EXPORT virtual bool stopListening();
+        virtual bool stopListening();
 
         /** 
          * Connect a node proxy to this node.
@@ -185,7 +185,7 @@
          *         <code>false</code> otherwise.
          * @sa initConnect, syncConnect
          */
-        EQ_EXPORT bool connect( NodePtr node );
+        bool connect( NodePtr node );
 
         /** 
          * Start connecting and potentially launching a node using the
@@ -199,7 +199,7 @@
          *         <code>false</code> otherwise.
          * @sa syncConnect
          */
-        EQ_EXPORT bool initConnect( NodePtr node );
+        bool initConnect( NodePtr node );
 
         /** 
          * Synchronize the connection initiated by initConnect().
@@ -212,7 +212,7 @@
          *         <code>false</code> otherwise.
          * @sa initConnect
          */
-        EQ_EXPORT bool syncConnect( NodePtr node );
+        bool syncConnect( NodePtr node );
 
         /** 
          * Create and connect a node given by an identifier.
@@ -230,7 +230,7 @@
          * @return <code>true</code> if the node was disconnected correctly,
          *         <code>false</code> otherwise.
          */
-        EQ_EXPORT bool disconnect( NodePtr node );
+        bool disconnect( NodePtr node );
         //@}
 
 
@@ -251,7 +251,7 @@
          * 
          * @param cd the connection description.
          */
-        EQ_EXPORT void addConnectionDescription( ConnectionDescriptionPtr cd );
+        void addConnectionDescription( ConnectionDescriptionPtr cd );
         
         /** 
          * Removes a connection description.
@@ -265,7 +265,7 @@
          * 
          * @return the number of stored connection descriptions. 
          */
-        EQ_EXPORT const ConnectionDescriptionVector& getConnectionDescriptions()
+        const ConnectionDescriptionVector& getConnectionDescriptions()
                             const;
         /** 
          * Returns the connection to this node.
@@ -401,7 +401,7 @@
          * @return <code>true</code> if the session was mapped,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT bool registerSession( Session* session );
+        bool registerSession( Session* session );
 
         /** Deregister a (master) session. */
         bool deregisterSession( Session* session )
@@ -429,7 +429,7 @@
          * @return <code>true</code> if the session was unmapped,
          *         <code>false</code> if there was an error.
          */
-        EQ_EXPORT bool unmapSession( Session* session );
+        bool unmapSession( Session* session );
 
         /** @return the mapped session with the given identifier, or 0. */
         Session* getSession( const uint32_t id );
@@ -443,7 +443,7 @@
          * @param clientArgs the client arguments as specified by the server.
          * @return the success value of the run.
          */
-        EQ_EXPORT virtual bool runClient( const std::string& clientArgs );
+        virtual bool runClient( const std::string& clientArgs );
 
         /** Return the command queue to the command thread. */
         CommandQueue* getCommandThreadQueue() 
@@ -459,13 +459,13 @@
         const NodeID& getNodeID() const { return _id; }
 
         /** Serialize the node's information. */
-        EQ_EXPORT std::string serialize() const;
+        std::string serialize() const;
         /** Deserialize the node information, consumes given data. */
-        EQ_EXPORT bool deserialize( std::string& data );
+        bool deserialize( std::string& data );
 
     protected:
         /** Destructs this node. */
-        EQ_EXPORT virtual ~Node();
+        virtual ~Node();
 
         /** 
          * Dispatches a packet to the registered command queue.
@@ -474,7 +474,7 @@
          * @return the result of the operation.
          * @sa invokeCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
+        virtual bool dispatchCommand( Command& command );
 
         /** 
          * Invokes the command handler method for the packet.
@@ -483,7 +483,7 @@
          * @return the result of the operation.
          * @sa Dispatcher::invokeCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
+        virtual CommandResult invokeCommand( Command& command );
 
         /** 
          * The main loop for auto-launched clients. 
@@ -502,7 +502,7 @@
          * @return the node.
          * @sa getType()
          */
-        EQ_EXPORT virtual NodePtr createNode( const uint32_t type );
+        virtual NodePtr createNode( const uint32_t type );
 
         /** Registers request packets waiting for a return value. */
         base::RequestHandler _requestHandler;
@@ -595,7 +595,7 @@
         bool _hasSendToken;
 
         bool _connectSelf();
-        EQ_EXPORT void _addConnection( ConnectionPtr connection );
+        void _addConnection( ConnectionPtr connection );
         void _removeConnection( ConnectionPtr connection );
         void _cleanup();
 
Index: lib/net/objectDataIStream.h
===================================================================
--- lib/net/objectDataIStream.h	(revision 3295)
+++ lib/net/objectDataIStream.h	(working copy)
@@ -33,7 +33,7 @@
     /**
      * The DataIStream for object data.
      */
-    class ObjectDataIStream : public DataIStream
+    class EQ_EXPORT ObjectDataIStream : public DataIStream
     {
     public:
         ObjectDataIStream();
Index: lib/net/objectDataOStream.h
===================================================================
--- lib/net/objectDataOStream.h	(revision 3295)
+++ lib/net/objectDataOStream.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * The DataOStream for object data.
      */
-    class ObjectDataOStream : public DataOStream
+    class EQ_EXPORT ObjectDataOStream : public DataOStream
     {
     public:
         ObjectDataOStream( const Object* object )
Index: lib/net/objectDeltaDataIStream.h
===================================================================
--- lib/net/objectDeltaDataIStream.h	(revision 3295)
+++ lib/net/objectDeltaDataIStream.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * The DataIStream for object delta version data.
      */
-    class ObjectDeltaDataIStream : public ObjectDataIStream
+    class EQ_EXPORT ObjectDeltaDataIStream : public ObjectDataIStream
     {
     public:
         ObjectDeltaDataIStream();
Index: lib/net/objectDeltaDataOStream.h
===================================================================
--- lib/net/objectDeltaDataOStream.h	(revision 3295)
+++ lib/net/objectDeltaDataOStream.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * The DataOStream for object delta version data.
      */
-    class ObjectDeltaDataOStream : public ObjectDataOStream
+    class EQ_EXPORT ObjectDeltaDataOStream : public ObjectDataOStream
     {
     public:
         ObjectDeltaDataOStream( const Object* object );
Index: lib/net/objectInstanceDataIStream.h
===================================================================
--- lib/net/objectInstanceDataIStream.h	(revision 3295)
+++ lib/net/objectInstanceDataIStream.h	(working copy)
@@ -31,7 +31,7 @@
     /**
      * The DataIStream for object instance data.
      */
-    class ObjectInstanceDataIStream : public ObjectDataIStream
+    class EQ_EXPORT ObjectInstanceDataIStream : public ObjectDataIStream
     {
     public:
         ObjectInstanceDataIStream();
Index: lib/net/objectInstanceDataOStream.h
===================================================================
--- lib/net/objectInstanceDataOStream.h	(revision 3295)
+++ lib/net/objectInstanceDataOStream.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * The DataOStream for object instance data.
      */
-    class ObjectInstanceDataOStream : public ObjectDataOStream
+    class EQ_EXPORT ObjectInstanceDataOStream : public ObjectDataOStream
     {
     public:
         ObjectInstanceDataOStream( const Object* object );
Index: lib/net/pairConnection.h
===================================================================
--- lib/net/pairConnection.h	(revision 3295)
+++ lib/net/pairConnection.h	(working copy)
@@ -28,22 +28,22 @@
      * A meta connection consisting of two (unidirectional) connections
      * providing bidirectional communication.
      */
-    class PairConnection : public Connection
+    class EQ_EXPORT PairConnection : public Connection
     {
     public:
-        EQ_EXPORT PairConnection( ConnectionPtr readConnection,
+        PairConnection( ConnectionPtr readConnection,
                                   ConnectionPtr writeConnection );
 
-        EQ_EXPORT ConnectionPtr getSibling();
+        ConnectionPtr getSibling();
 
-        EQ_EXPORT virtual bool connect();
-        EQ_EXPORT virtual void close();
+        virtual bool connect();
+        virtual void close();
 
         virtual Notifier getNotifier() const
             { return _readConnection->getNotifier(); }
 
     protected:
-        EQ_EXPORT virtual ~PairConnection();
+        virtual ~PairConnection();
 
         virtual void readNB( void* buffer, const uint64_t bytes )
             { _readConnection->readNB( buffer, bytes ); }
Index: lib/net/pipeConnection.h
===================================================================
--- lib/net/pipeConnection.h	(revision 3295)
+++ lib/net/pipeConnection.h	(working copy)
@@ -37,7 +37,7 @@
      * therefore only be used between related threads. A PairConnection can be
      * used to create a bi-directional communication using two pipe connections.
      */
-    class PipeConnection 
+    class EQ_EXPORT PipeConnection 
 #ifdef WIN32
         : public Connection
 #else
@@ -46,9 +46,9 @@
     {
     public:
         /** Construct a new pipe connection. */
-        EQ_EXPORT PipeConnection();
+        PipeConnection();
         /** Destruct this pipe connection. */
-        EQ_EXPORT virtual ~PipeConnection();
+        virtual ~PipeConnection();
 
         virtual bool connect();
         virtual void close();
Index: lib/net/session.h
===================================================================
--- lib/net/session.h	(revision 3295)
+++ lib/net/session.h	(working copy)
@@ -40,14 +40,14 @@
      * A received SessionPacket is dispatched to the locally-mapped session of
      * the same identifier.
      */
-    class Session : public Dispatcher
+    class EQ_EXPORT Session : public Dispatcher
     {
     public:
         /** Construct a new session. */
-        EQ_EXPORT Session();
+        Session();
 
         /** Destruct this session. */
-        EQ_EXPORT virtual ~Session();
+        virtual ~Session();
 
         /** @name Data Access */
         //@{
@@ -64,7 +64,7 @@
          * @return the queue to the command thread of the local node, or 0 if
          *         the session is not mapped.
          */
-        EQ_EXPORT CommandQueue* getCommandThreadQueue();
+        CommandQueue* getCommandThreadQueue();
 
         /** @return the server hosting this session, or 0 if the session is not
          *          mapped.. */
@@ -85,7 +85,7 @@
          * @return true if the command was dispatched, false otherwise.
          * @sa Dispatcher::dispatchCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& packet );
+        virtual bool dispatchCommand( Command& packet );
 
         /** 
          * Invokes the registered handler method for a command packet.
@@ -97,7 +97,7 @@
          * @return the result of the operation.
          * @sa Dispatcher::invokeCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& packet );
+        virtual CommandResult invokeCommand( Command& packet );
         //@}
 
 
@@ -123,7 +123,7 @@
          *         continous block of identifiers for the request is available.
          * @sa base::IDPool
          */
-        EQ_EXPORT uint32_t genIDs( const uint32_t range );
+        uint32_t genIDs( const uint32_t range );
 
         /** 
          * Free a continous block of unique identifiers.
@@ -134,7 +134,7 @@
          * @param start the first identifier in the block.
          * @param range the size of the block.
          */
-        EQ_EXPORT void freeIDs( const uint32_t start, const uint32_t range );
+        void freeIDs( const uint32_t start, const uint32_t range );
 
         /** 
          * Set the master node for an identifier.
@@ -150,14 +150,14 @@
          * @param id the identifier.
          * @param master the master node for the block of identifiers.
          */
-        EQ_EXPORT void setIDMaster( const uint32_t id, const NodeID& master );
+        void setIDMaster( const uint32_t id, const NodeID& master );
 
         /** 
          * Delete the master node for an identifiers.
          * 
          * @param id the identifier.
          */
-        EQ_EXPORT void unsetIDMaster( const uint32_t id );
+        void unsetIDMaster( const uint32_t id );
 
         /** 
          * Returns the master node id for an identifier.
@@ -166,7 +166,7 @@
          * @return the master node, or Node::ZERO if no master node is
          *         set for the identifier.
          */
-        EQ_EXPORT const NodeID& getIDMaster( const uint32_t id );
+        const NodeID& getIDMaster( const uint32_t id );
         //@}
 
 
@@ -186,14 +186,14 @@
          * @param object the object instance.
          * @return true if the object was registered, false otherwise.
          */
-        EQ_EXPORT bool registerObject( Object* object );
+        bool registerObject( Object* object );
 
         /** 
          * Deregister a distributed object.
          *
          * @param object the object instance.
          */
-        EQ_EXPORT void deregisterObject( Object* object );
+        void deregisterObject( Object* object );
 
         /** 
          * Map a distributed object.
@@ -226,21 +226,21 @@
          *         available.
          * @sa registerObject
          */
-        EQ_EXPORT bool mapObject( Object* object, const uint32_t id, 
+        bool mapObject( Object* object, const uint32_t id, 
                         const uint32_t version = Object::VERSION_OLDEST );
 
         /** Start mapping a distributed object. */
-        EQ_EXPORT uint32_t mapObjectNB( Object* object, const uint32_t id, 
+        uint32_t mapObjectNB( Object* object, const uint32_t id, 
                               const uint32_t version = Object::VERSION_OLDEST );
         /** Finalize the mapping of a distributed object. */
-        EQ_EXPORT bool mapObjectSync( const uint32_t requestID );
+        bool mapObjectSync( const uint32_t requestID );
 
         /** 
          * Unmap a mapped object.
          * 
          * @param object the mapped object.
          */
-        EQ_EXPORT void unmapObject( Object* object );
+        void unmapObject( Object* object );
 
         /** 
          * Attach an object to an identifier.
@@ -254,7 +254,7 @@
          * @param instanceID the node-local instance identifier, or
          *                   EQ_ID_INVALID if this method should generate one.
          */
-        EQ_EXPORT void attachObject( Object* object, const uint32_t id, 
+        void attachObject( Object* object, const uint32_t id, 
                            const uint32_t instanceID );
 
         /** 
@@ -262,7 +262,7 @@
          * 
          * @param object the attached object.
          */
-        EQ_EXPORT void detachObject( Object* object );
+        void detachObject( Object* object );
         //@}
 
 
@@ -276,7 +276,7 @@
          *
          * @param node the node to which the session has been mapped.
          */
-        EQ_EXPORT virtual void notifyMapped( NodePtr node );
+        virtual void notifyMapped( NodePtr node );
         //@}
 
     protected:
Index: lib/net/socketConnection.h
===================================================================
--- lib/net/socketConnection.h	(revision 3295)
+++ lib/net/socketConnection.h	(working copy)
@@ -34,7 +34,7 @@
 namespace net
 {
     /** A socket connection (TCPIP or SDP). */
-    class SocketConnection
+    class EQ_EXPORT SocketConnection
 #ifdef WIN32
         : public Connection
 #else
Index: patches/dllHeap.patch
===================================================================
--- patches/dllHeap.patch	(revision 3295)
+++ patches/dllHeap.patch	(working copy)
@@ -1,5597 +1,123 @@
-Index: patches/dllHeap.patch
-===================================================================
---- patches/dllHeap.patch	(revision 3280)
-+++ patches/dllHeap.patch	(working copy)
-@@ -1,4477 +1,2 @@
--Index: lib/base/clock.h
--===================================================================
----- lib/base/clock.h	(revision 3227)
--+++ lib/base/clock.h	(working copy)
--@@ -37,7 +37,7 @@
-- namespace base
-- {
--     /** A class for time measurements. */
---    class Clock
--+    class EQ_EXPORT Clock
--     {
--     public :
--         /** Construct a new clock. */
--Index: lib/base/dso.h
--===================================================================
----- lib/base/dso.h	(revision 3227)
--+++ lib/base/dso.h	(working copy)
--@@ -30,11 +30,11 @@
-- {
-- 
--     /** Helper to access dynamic shared objects (DSO) */
---    class DSO : public NonCopyable
--+    class EQ_EXPORT DSO : public NonCopyable
--     {
--     public:
--         /** Construct a new dynamic shared object. */
---        EQ_EXPORT DSO() : _dso( 0 ) {}
--+        DSO() : _dso( 0 ) {}
-- 
--         /** 
--          * Open a dynamic shared object.
--@@ -42,14 +42,14 @@
--          * @param fileName The file name of the DSO.
--          * @return true if the DSO was opened, false upon error.
--          */
---        EQ_EXPORT bool open( const std::string& fileName );
--+        bool open( const std::string& fileName );
-- 
--         /** Close the DSO, which invalidates retrieved function pointers */
---        EQ_EXPORT void close();
--+        void close();
--     
--         /** @return a function pointer in the DSO, or 0 if the function is not
--          *         exported by the DSO. */
---        EQ_EXPORT void* getFunctionPointer( const std::string& functionName );
--+        void* getFunctionPointer( const std::string& functionName );
-- 
--     private:
-- #ifdef WIN32
--Index: lib/base/lock.h
--===================================================================
----- lib/base/lock.h	(revision 3227)
--+++ lib/base/lock.h	(working copy)
--@@ -28,21 +28,21 @@
--     class LockPrivate;
-- 
--     /** A lock (mutex) primitive. */
---    class Lock : public NonCopyable
--+    class EQ_EXPORT Lock : public NonCopyable
--     {
--     public:
--         /** Construct a new lock. */
---        EQ_EXPORT Lock();
--+        Lock();
-- 
-- 
--         /** Destruct the lock. */
---        EQ_EXPORT ~Lock();
--+        ~Lock();
-- 
--         /** Acquire the lock. */
---        EQ_EXPORT void set();
--+        void set();
-- 
--         /** Release the lock. */
---        EQ_EXPORT void unset();
--+        void unset();
-- 
--         /** 
--          * Attempt to acquire the lock.
--@@ -50,7 +50,7 @@
--          * @return <code>true</code> if the lock was set, <code>false</code> if
--          *         it was not set.
--          */
---        EQ_EXPORT bool trySet();
--+        bool trySet();
-- 
--         /** 
--          * Test if the lock is set.
--@@ -58,7 +58,7 @@
--          * @return <code>true</code> if the lock is set, <code>false</code> if
--          *         it is not set.
--          */
---        EQ_EXPORT bool test(); 
--+        bool test(); 
-- 
--     private:
--         LockPrivate* _data;
--Index: lib/base/log.h
--===================================================================
----- lib/base/log.h	(revision 3227)
--+++ lib/base/log.h	(working copy)
--@@ -148,8 +148,8 @@
--     {
--     public:
-- 
---        Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
---        virtual ~Log() { _logBuffer.pubsync(); }
--+        EQ_EXPORT Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
--+        EQ_EXPORT ~Log() { _logBuffer.pubsync(); }
-- 
--         void indent() { _logBuffer.indent(); }
--         void exdent() { _logBuffer.exdent(); }
--Index: lib/base/omp.h
--===================================================================
----- lib/base/omp.h	(revision 3227)
--+++ lib/base/omp.h	(working copy)
--@@ -29,11 +29,11 @@
-- namespace base
-- {
--     /** Base class abstracting OpenMP */
---    class OMP 
--+    class EQ_EXPORT OMP 
--     {
--     public:
--         /** Return the number of threads used in a parallel region. */
---        EQ_EXPORT static int getNThreads() { return _nThreads; }
--+        static int getNThreads() { return _nThreads; }
-- 
--     private:
--         static int _nThreads;
--Index: lib/base/referenced.h
--===================================================================
----- lib/base/referenced.h	(revision 3227)
--+++ lib/base/referenced.h	(working copy)
--@@ -36,7 +36,7 @@
--      *
--      * @sa RefPtr
--      */
---    class Referenced 
--+    class EQ_EXPORT Referenced 
--     {
--     public:
--         /** Increase the reference count. */
--Index: lib/base/requestHandler.h
--===================================================================
----- lib/base/requestHandler.h	(revision 3227)
--+++ lib/base/requestHandler.h	(working copy)
--@@ -44,7 +44,7 @@
--      * serveRequest() and deleteRequest() are supposed to be called only from
--      * one 'serving' thread.
--      */
---    class RequestHandler : public NonCopyable
--+    class EQ_EXPORT RequestHandler : public NonCopyable
--     {
-- 
--     public:
--@@ -55,10 +55,10 @@
--          *                   thread-safe and can be called from multiple
--          *                   threads.
--          */
---        EQ_EXPORT RequestHandler( const bool threadSafe = false );
--+        RequestHandler( const bool threadSafe = false );
-- 
--         /** Destruct the request handler. */
---        EQ_EXPORT ~RequestHandler();
--+        ~RequestHandler();
-- 
--         /** 
--          * Register a new request.
--@@ -67,7 +67,7 @@
--          *             0.
--          * @return the request identifier.
--          */
---        EQ_EXPORT uint32_t registerRequest( void* data = 0 );
--+        uint32_t registerRequest( void* data = 0 );
-- 
--         /** 
--          * Unregister a request.
--@@ -78,7 +78,7 @@
--          * 
--          * @param requestID the request identifier.
--          */
---        EQ_EXPORT void unregisterRequest( const uint32_t requestID );
--+        void unregisterRequest( const uint32_t requestID );
-- 
--         /** 
--          * Wait a given time for the completion of a request.
--@@ -93,17 +93,17 @@
--          *                indefinitely.
--          * @return true if the request was served, false if not.
--          */
---        EQ_EXPORT bool waitRequest( const uint32_t requestID, void*& result,
--+        bool waitRequest( const uint32_t requestID, void*& result,
--                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
-- 
--         /** Wait for a request with a uint32_t result. */
---        EQ_EXPORT bool waitRequest( const uint32_t requestID, uint32_t& result,
--+        bool waitRequest( const uint32_t requestID, uint32_t& result,
--                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
--         /** Wait for a request with a bool result. */
---        EQ_EXPORT bool waitRequest( const uint32_t requestID, bool& result,
--+        bool waitRequest( const uint32_t requestID, bool& result,
--                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
--         /** Wait for a request without a result. */
---        EQ_EXPORT bool waitRequest( const uint32_t requestID );
--+        bool waitRequest( const uint32_t requestID );
-- 
--         /** 
--          * Poll for the completion of a request.
--@@ -113,7 +113,7 @@
--          * @param requestID the request identifier.
--          * @return true if the request has been served, false if it is pending.
--          */
---        EQ_EXPORT bool isServed( const uint32_t requestID ) const;
--+        bool isServed( const uint32_t requestID ) const;
-- 
--         /** 
--          * Retrieve the user-specific data for a request.
--@@ -121,7 +121,7 @@
--          * @param requestID the request identifier.
--          * @return the user-specific data for the request.
--          */
---        EQ_EXPORT void* getRequestData( const uint32_t requestID );
--+        void* getRequestData( const uint32_t requestID );
-- 
--         /** 
--          * Serve a request with a void* result.
--@@ -129,11 +129,11 @@
--          * @param requestID the request identifier.
--          * @param result the result of the request.
--          */
---        EQ_EXPORT void serveRequest( const uint32_t requestID, void* result=0 );
--+        void serveRequest( const uint32_t requestID, void* result=0 );
--         /** Serve a request with a uint32_t result. */
---        EQ_EXPORT void serveRequest( const uint32_t requestID, uint32_t result);
--+        void serveRequest( const uint32_t requestID, uint32_t result);
--         /** Serve a request with a bool result. */
---        EQ_EXPORT void serveRequest( const uint32_t requestID, bool result );
--+        void serveRequest( const uint32_t requestID, bool result );
-- 
--         /** @return true if this request handler was created thread-safe. */
-- 		bool isThreadSafe() const { return ( _mutex != 0 ); }
--Index: lib/base/rng.h
--===================================================================
----- lib/base/rng.h	(revision 3227)
--+++ lib/base/rng.h	(working copy)
--@@ -33,7 +33,7 @@
--      * Generates a set of random, or if not supported by the operating system,
--      * pseudo-random numbers. Each instance creates its own series of numbers.
--      */
---    class RNG : public NonCopyable
--+    class EQ_EXPORT RNG : public NonCopyable
--     {
--     public:
--         /** Construct a new random number generator. */
--Index: lib/base/thread.h
--===================================================================
----- lib/base/thread.h	(revision 3227)
--+++ lib/base/thread.h	(working copy)
--@@ -39,16 +39,16 @@
--     /**
--      * An abstraction for an execution thread.
--      */
---    class Thread 
--+    class EQ_EXPORT Thread 
--     {
--     public:
--         /** 
--          * Constructs a new thread.
--          */
---        EQ_EXPORT Thread();
--+        Thread();
-- 
--         /** Destructs the thread. */
---        EQ_EXPORT virtual ~Thread();
--+        virtual ~Thread();
-- 
--         /** 
--          * Starts the thread.
--@@ -60,7 +60,7 @@
--          *         <code>false</code> otherwise.
--          * @sa init(), run(), addListener()
--          */
---        EQ_EXPORT bool start();
--+        bool start();
-- 
--         /** 
--          * The init function for the child thread.
--@@ -92,14 +92,14 @@
--          *
--          * @param retVal the return value of the thread.
--          */
---        EQ_EXPORT virtual void exit( void* retVal = 0 );
--+        virtual void exit( void* retVal = 0 );
-- 
--         /** 
--          * Cancel (stop) the child thread.
--          *
--          * This function is not to be called from the child thread.
--          */
---        EQ_EXPORT void cancel();
--+        void cancel();
-- 
--         /** 
--          * Wait for the exit of the child thread.
--@@ -109,7 +109,7 @@
--          * @return <code>true</code> if the thread was joined,
--          *         <code>false</code> otherwise.
--          */
---        EQ_EXPORT bool join( void** retVal=0 );
--+        bool join( void** retVal=0 );
-- 
--         /** 
--          * Return if the thread is stopped.
--@@ -139,27 +139,27 @@
--          * @return <code>true</code> if the current thread has is the same
--          *         thread as this thread, <code>false</code> if not.
--          */
---        EQ_EXPORT bool isCurrent() const;
--+        bool isCurrent() const;
-- 
--         /** 
--          * Add a new thread state listener.
--          * 
--          * @param listener the listener.
--          */
---        EQ_EXPORT static void addListener( ExecutionListener* listener );
--+        static void addListener( ExecutionListener* listener );
-- 
--         /** 
--          * Remove a thread state listener.
--          * 
--          * @param listener the listener.
--          */
---        EQ_EXPORT static bool removeListener( ExecutionListener* listener );
--+        static bool removeListener( ExecutionListener* listener );
-- 
--         /** Remove all registered listeners, used at exit. */
---        EQ_EXPORT static void removeAllListeners();
--+        static void removeAllListeners();
-- 
--         /** @return a unique identifier for the calling thread. */
---        EQ_EXPORT static size_t getSelfThreadID();
--+        static size_t getSelfThreadID();
-- 
--         /** @internal */
--         static void pinCurrentThread();
--Index: lib/client/channel.h
--===================================================================
----- lib/client/channel.h	(revision 3227)
--+++ lib/client/channel.h	(working copy)
--@@ -43,7 +43,7 @@
--      * rendering-relevant tasks, such as clear, draw, assemble and readback. It
--      * is a child of a Window.
--      */
---    class Channel : public net::Object
--+    class EQ_EXPORT Channel : public net::Object
--     {
--     public:
--     
--@@ -60,10 +60,10 @@
--         };
--         
--         /** Constructs a new channel. */
---        EQ_EXPORT Channel( Window* parent );
--+        Channel( Window* parent );
-- 
--         /** Destructs the channel. */
---        EQ_EXPORT virtual ~Channel();
--+        virtual ~Channel();
-- 
--         /**
--          * @name Data Access
--@@ -72,18 +72,18 @@
--         Window*       getWindow()       { return _window; }
--         const Window* getWindow() const { return _window; }
-- 
---        EQ_EXPORT Pipe*       getPipe();
---        EQ_EXPORT const Pipe* getPipe() const;
--+        Pipe*       getPipe();
--+        const Pipe* getPipe() const;
-- 
---        EQ_EXPORT Node*       getNode();
---        EQ_EXPORT const Node* getNode() const;
--+        Node*       getNode();
--+        const Node* getNode() const;
-- 
---        EQ_EXPORT Config*       getConfig();
---        EQ_EXPORT const Config* getConfig() const;
--+        Config*       getConfig();
--+        const Config* getConfig() const;
-- 
---        EQ_EXPORT ServerPtr getServer();
--+        ServerPtr getServer();
-- 
---        EQ_EXPORT Window::ObjectManager* getObjectManager();
--+        Window::ObjectManager* getObjectManager();
-- 
--         /** 
--          * Get the GLEW context for this channel.
--@@ -98,8 +98,8 @@
--          * @return the extended OpenGL function table for the channel's OpenGL
--          *         context.
--          */
---        EQ_EXPORT GLEWContext*       glewGetContext();
---        EQ_EXPORT const GLEWContext* glewGetContext() const;
--+        GLEWContext*       glewGetContext();
--+        const GLEWContext* glewGetContext() const;
--         
--         /** @return the name of the window. */
--         const std::string& getName() const { return _name; }
--@@ -120,7 +120,7 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQ_EXPORT VisitorResult accept( ChannelVisitor& visitor );
--+        VisitorResult accept( ChannelVisitor& visitor );
-- 
--         /** 
--          * Set the near and far planes for this channel.
--@@ -133,7 +133,7 @@
--          * @param nearPlane the near plane.
--          * @param farPlane the far plane.
--          */
---        EQ_EXPORT void setNearFar( const float nearPlane, const float farPlane);
--+        void setNearFar( const float nearPlane, const float farPlane);
-- 
--         /** Return a stable, unique color for this channel. */
--         const Vector3ub& getUniqueColor() const { return _color; }
--@@ -149,16 +149,16 @@
--          * 
--          * @return the channel's view, or 0 if it does not have a view.
--          */
---        EQ_EXPORT const View* getView();
--+        const View* getView();
-- 
--         /**
--          * @return the channel's native view, or 0 if it is not an output
--          *         channel.
--          */
---        EQ_EXPORT const View* getNativeView();
--+        const View* getNativeView();
-- 
--         /** Add a new statistics event for the current frame. */
---        EQ_EXPORT void addStatistic( Event& event );
--+        void addStatistic( Event& event );
--         //@}
-- 
--         /**
--@@ -170,16 +170,16 @@
--          */
--         //@{
--         /** @return the channel's current draw buffer. */
---        EQ_EXPORT uint32_t getDrawBuffer() const;
--+        uint32_t getDrawBuffer() const;
-- 
--         /** @return the channel's current read buffer. */
---        EQ_EXPORT uint32_t getReadBuffer() const;
--+        uint32_t getReadBuffer() const;
-- 
--         /** @return the channel's current color mask for drawing. */
---        EQ_EXPORT const ColorMask& getDrawBufferMask() const;
--+        const ColorMask& getDrawBufferMask() const;
-- 
--         /** @return the channel's current pixel viewport. */
---        EQ_EXPORT const PixelViewport& getPixelViewport() const;
--+        const PixelViewport& getPixelViewport() const;
-- 
--         /**
--          * Get the channel's current position wrt the destination channel.
--@@ -190,34 +190,34 @@
--          *
--          * @return the channel's current position wrt the destination channel.
--          */
---        EQ_EXPORT const Vector2i& getPixelOffset() const;
--+        const Vector2i& getPixelOffset() const;
-- 
--         /** @return the perspective frustum for the current rendering task. */
---        EQ_EXPORT const Frustumf& getFrustum() const;
--+        const Frustumf& getFrustum() const;
-- 
--         /** @return the orthographic frustum for the current rendering task. */
---        EQ_EXPORT const Frustumf& getOrtho() const;
--+        const Frustumf& getOrtho() const;
-- 
--         /** @return the fractional viewport wrt the destination view. */
---        EQ_EXPORT const Viewport& getViewport() const;
--+        const Viewport& getViewport() const;
-- 
--         /** @return the database range for the current rendering task. */
---        EQ_EXPORT const Range& getRange() const;
--+        const Range& getRange() const;
-- 
--         /** @return the pixel decomposition for the current rendering task. */
---        EQ_EXPORT const Pixel& getPixel() const;
--+        const Pixel& getPixel() const;
-- 
--         /** @return the up/downscale factor for the current rendering task. */
---        EQ_EXPORT const Zoom& getZoom() const;
--+        const Zoom& getZoom() const;
-- 
--         /** @return the currently rendered eye pass. */
---        EQ_EXPORT Eye getEye() const;
--+        Eye getEye() const;
-- 
--         /**
--          * @return the view transformation to position and orient the view
--          *         frustum.
--          */
---        EQ_EXPORT const Matrix4f& getHeadTransform() const;
--+        const Matrix4f& getHeadTransform() const;
-- 
--         /** @return the list of input frames, used from frameAssemble(). */
--         const FrameVector& getInputFrames() { return _inputFrames; }
--@@ -233,7 +233,7 @@
--          *
--          * @return the 2D orthographic frustum.
--          */
---        EQ_EXPORT Frustumf getScreenFrustum() const;
--+        Frustumf getScreenFrustum() const;
-- 
--         /** 
--          * get the channel's native (drawable) pixel viewport.
--@@ -242,18 +242,18 @@
--             { return _nativeContext.pvp; }
-- 
--         /** @internal  Undocumented - may not be supported in the future */
---        EQ_EXPORT const Vector4i& getOverdraw() const;
--+        const Vector4i& getOverdraw() const;
-- 
--         /** @internal  Undocumented - may not be supported in the future */
---        EQ_EXPORT void setMaxSize( const Vector2i& size );
--+        void setMaxSize( const Vector2i& size );
-- 
--         /** @internal  Undocumented - may not be supported in the future */
---        EQ_EXPORT uint32_t getTaskID() const;
--+        uint32_t getTaskID() const;
-- 
--         /** 
--          * get the FBO used as an alternate frame buffer.
--          */
---        EQ_EXPORT FrameBufferObject* getFrameBufferObject();
--+        FrameBufferObject* getFrameBufferObject();
--         //@}
-- 
--         /**
--@@ -267,27 +267,27 @@
--         /** 
--          * Apply the current rendering buffer, including the color mask.
--          */
---        EQ_EXPORT virtual void applyBuffer();
--+        virtual void applyBuffer();
-- 
--         /** 
--          * Apply the current color mask.
--          */
---        EQ_EXPORT virtual void applyColorMask() const;
--+        virtual void applyColorMask() const;
-- 
--         /** 
--          * Apply the OpenGL viewport for the current rendering task.
--          */
---        EQ_EXPORT virtual void applyViewport() const;
--+        virtual void applyViewport() const;
-- 
--         /**
--          * Apply the perspective frustum matrix for the current rendering task.
--          */
---        EQ_EXPORT virtual void applyFrustum() const;
--+        virtual void applyFrustum() const;
-- 
--         /**
--          * Apply the orthographic frustum matrix for the current rendering task.
--          */
---        EQ_EXPORT virtual void applyOrtho() const;
--+        virtual void applyOrtho() const;
-- 
--         /** 
--          * Apply a orthographic frustum for pixel-based 2D operations. 
--@@ -295,18 +295,18 @@
--          * One unit in the frustum corresponds to one pixel on the screen. The
--          * frustum is position wrt the canvas.
--          */
---        EQ_EXPORT void applyScreenFrustum() const;
--+        void applyScreenFrustum() const;
-- 
--         /** 
--          * Apply the modeling transformation to position and orient the view
--          * frustum.
--          */
---        EQ_EXPORT virtual void applyHeadTransform() const;
--+        virtual void applyHeadTransform() const;
-- 
--         /** 
--          * Apply the current alternate frame buffer.
--          */
---        EQ_EXPORT virtual void applyFrameBufferObject();
--+        virtual void applyFrameBufferObject();
--         
--         /** 
--          * Process a received event.
--@@ -318,13 +318,13 @@
--          * @param event the received event.
--          * @return true when the event was handled, false if not.
--          */
---        EQ_EXPORT virtual bool processEvent( const Event& event );
--+        virtual bool processEvent( const Event& event );
-- 
--         /** Draw a statistics overlay. */
---        EQ_EXPORT virtual void drawStatistics();
--+        virtual void drawStatistics();
-- 
--         /** Outlines the current pixel viewport. */
---        EQ_EXPORT virtual void outlineViewport();
--+        virtual void outlineViewport();
-- 
--         /**
--          * @name Attributes
--@@ -340,8 +340,8 @@
--             IATTR_ALL
--         };
--         
---        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
---        EQ_EXPORT static const std::string& getIAttributeString(
--+        int32_t getIAttribute( const IAttribute attr ) const;
--+        static const std::string& getIAttributeString(
--                                                         const IAttribute attr );
--         //@}
-- #if 0
--@@ -358,7 +358,7 @@
--     protected:
--         friend class Window;
-- 
---        EQ_EXPORT void attachToSession( const uint32_t id, 
--+        void attachToSession( const uint32_t id, 
--                                         const uint32_t instanceID, 
--                                         net::Session* session );
-- 
--@@ -398,17 +398,17 @@
--          * 
--          * @param initID the init identifier.
--          */
---        EQ_EXPORT virtual bool configInit( const uint32_t initID );
--+        virtual bool configInit( const uint32_t initID );
-- 
--         /** 
--          * Exit this channel.
--          */
---        EQ_EXPORT virtual bool configExit();
--+        virtual bool configExit();
-- 
--         /** 
--          * Rebind the current alternate rendering buffer.
--          */
---        EQ_EXPORT void bindFrameBuffer();
--+        void bindFrameBuffer();
--         
--         /**
--          * Start rendering a frame.
--@@ -455,14 +455,14 @@
--          * 
--          * @param frameID the per-frame identifier.
--          */
---        EQ_EXPORT virtual void frameClear( const uint32_t frameID );
--+        virtual void frameClear( const uint32_t frameID );
-- 
--         /** 
--          * Draw the scene.
--          * 
--          * @param frameID the per-frame identifier.
--          */
---        EQ_EXPORT virtual void frameDraw( const uint32_t frameID );
--+        virtual void frameDraw( const uint32_t frameID );
-- 
--         /** 
--          * Assemble input frames.
--@@ -470,7 +470,7 @@
--          * @param frameID the per-frame identifier.
--          * @sa getInputFrames
--          */
---        EQ_EXPORT virtual void frameAssemble( const uint32_t frameID );
--+        virtual void frameAssemble( const uint32_t frameID );
-- 
--         /** 
--          * Read back the rendered scene.
--@@ -478,7 +478,7 @@
--          * @param frameID the per-frame identifier.
--          * @sa getOutputFrames
--          */
---        EQ_EXPORT virtual void frameReadback( const uint32_t frameID );
--+        virtual void frameReadback( const uint32_t frameID );
-- 
--         /** 
--          * Start updating a destination channel.
--@@ -506,12 +506,12 @@
--          * The default implementation is very conservative and saves any state
--          * which is potentially changed by the assembly routines.
--          */
---        EQ_EXPORT virtual void setupAssemblyState();
--+        virtual void setupAssemblyState();
-- 
--         /**
--          * Reset the OpenGL state after an assembly operation.
--          */
---        EQ_EXPORT virtual void resetAssemblyState();
--+        virtual void resetAssemblyState();
--         //@}
-- 
--         /** @name Error information. */
--@@ -524,7 +524,7 @@
--          *
--          * @param message the error message.
--          */
---        EQ_EXPORT void setErrorMessage( const std::string& message );
--+        void setErrorMessage( const std::string& message );
--         //@}
-- 
--     private:
--Index: lib/client/channelStatistics.h
--===================================================================
----- lib/client/channelStatistics.h	(revision 3227)
--+++ lib/client/channelStatistics.h	(working copy)
--@@ -27,12 +27,12 @@
--     /**
--      * Holds one statistics event, used for profiling.
--      */
---    class ChannelStatistics : public StatisticSampler< Channel >
--+    class EQ_EXPORT ChannelStatistics : public StatisticSampler< Channel >
--     {
--     public:
---        EQ_EXPORT ChannelStatistics( const Statistic::Type type, 
--+        ChannelStatistics( const Statistic::Type type, 
--                                      Channel* channel );
---        virtual EQ_EXPORT ~ChannelStatistics();
--+        virtual ~ChannelStatistics();
--     };
-- }
-- 
--Index: lib/client/client.h
--===================================================================
----- lib/client/client.h	(revision 3227)
--+++ lib/client/client.h	(working copy)
--@@ -32,18 +32,18 @@
--     /** 
--      * The client represents a network node in the cluster.
--      */
---    class Client : public net::Node
--+    class EQ_EXPORT Client : public net::Node
--     {
--     public:
--         /** 
--          * Constructs a new client.
--          */
---        EQ_EXPORT Client();
--+        Client();
-- 
--         /**
--          * Destructs the client.
--          */
---        EQ_EXPORT virtual ~Client();
--+        virtual ~Client();
-- 
--         /** 
--          * Open and connect an Equalizer server to the local client.
--@@ -51,7 +51,7 @@
--          * @param server the server.
--          * @return true if the server was connected, false if not.
--          */
---        EQ_EXPORT bool connectServer( ServerPtr server );
--+        bool connectServer( ServerPtr server );
-- 
--         /** 
--          * Disconnect and close the connection of an Equalizer server to the
--@@ -60,37 +60,37 @@
--          * @param server the server.
--          * @return true if the server was disconnected, false if not.
--          */
---        EQ_EXPORT bool disconnectServer( ServerPtr server );
--+        bool disconnectServer( ServerPtr server );
-- 
--         /** @return true if the client has commands pending, false otherwise. */
---        EQ_EXPORT bool hasCommands();
--+        bool hasCommands();
-- 
--         /** 
--          * Get and process one command from the node command queue. Used
--          * internally to run node commands.
--          */
---        EQ_EXPORT void processCommand();
--+        void processCommand();
-- 
--         /** @sa net::Node::listen() */
---        EQ_EXPORT virtual bool listen();
--+        virtual bool listen();
--         /** @sa net::Node::stopListening() */
---        EQ_EXPORT virtual bool stopListening();
--+        virtual bool stopListening();
-- 
--         /** 
--          * Set the window system for the client's message pump, used by
--          * non-threaded pipes.
--          * @internal
--          */
---        EQ_EXPORT void setWindowSystem( const WindowSystem windowSystem );
--+        void setWindowSystem( const WindowSystem windowSystem );
-- 
--         /** Return the command queue to the main node thread. */
--         CommandQueue* getNodeThreadQueue() { return _nodeThreadQueue; }
-- 
--     protected:
--         /** @sa net::Node::clientLoop */
---        EQ_EXPORT virtual bool clientLoop();
--+        virtual bool clientLoop();
--         /** @sa net::Node::exitClient(). */
---        EQ_EXPORT virtual bool exitClient();
--+        virtual bool exitClient();
-- 
--     private:
--         /** The command->node command queue. */
--@@ -104,13 +104,13 @@
--         };
-- 
--         /** @sa net::Node::createNode */
---        EQ_EXPORT virtual net::NodePtr createNode( const uint32_t type );
--+        virtual net::NodePtr createNode( const uint32_t type );
--         
--         /** @sa net::Node::dispatchCommand */
---        EQ_EXPORT virtual bool dispatchCommand( net::Command& command );
--+        virtual bool dispatchCommand( net::Command& command );
-- 
--         /** @sa net::Node::invokeCommand */
---        EQ_EXPORT virtual net::CommandResult invokeCommand( net::Command& );
--+        virtual net::CommandResult invokeCommand( net::Command& );
-- 
--         /** The command functions. */
--         net::CommandResult _cmdExit( net::Command& command );
--Index: lib/client/config.h
--===================================================================
----- lib/client/config.h	(revision 3227)
--+++ lib/client/config.h	(working copy)
--@@ -38,21 +38,21 @@
--      * The configuration groups all processes of the application in a single
--      * net::Session.
--      */
---    class Config : public net::Session
--+    class EQ_EXPORT Config : public net::Session
--     {
--     public:
--         /** Constructs a new config. */
---        EQ_EXPORT Config( ServerPtr parent );
--+        Config( ServerPtr parent );
-- 
--         /** Destructs a config. */
---        EQ_EXPORT virtual ~Config();
--+        virtual ~Config();
-- 
--         /** @name Data Access */
--         //@{
---        EQ_EXPORT ClientPtr getClient();
---        EQ_EXPORT ServerPtr getServer();
--+        ClientPtr getClient();
--+        ServerPtr getServer();
-- 
---        EQ_EXPORT CommandQueue* getNodeThreadQueue();
--+        CommandQueue* getNodeThreadQueue();
-- 
--         uint32_t getCurrentFrame()  const { return _currentFrame; }
--         uint32_t getFinishedFrame() const { return _finishedFrame.get(); }
--@@ -71,10 +71,10 @@
--         const LayoutVector& getLayouts() const { return _layouts; }
-- 
--         /** @return the layout of the given identifier, or 0. */
---        EQ_EXPORT Layout* findLayout( const uint32_t id );
--+        Layout* findLayout( const uint32_t id );
-- 
--         /** @return the view of the given identifier, or 0. */
---        EQ_EXPORT View* findView( const uint32_t id );
--+        View* findView( const uint32_t id );
-- 
--         /** @return the vector of canvases, app-node only. */
--         const CanvasVector& getCanvases() const { return _canvases; }
--@@ -88,10 +88,10 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQ_EXPORT VisitorResult accept( ConfigVisitor& visitor );
--+        VisitorResult accept( ConfigVisitor& visitor );
-- 
--         /** Get all received statistics. */
---        EQ_EXPORT void getStatistics( std::vector< FrameStatistics >& stats );
--+        void getStatistics( std::vector< FrameStatistics >& stats );
-- 
--         /**
--          * @return true while the config is initialized and no exit event
--@@ -114,7 +114,7 @@
--          * @param initID an identifier to be passed to all init methods.
--          * @return true if the initialization was successful, false if not.
--          */
---        EQ_EXPORT virtual bool init( const uint32_t initID );
--+        virtual bool init( const uint32_t initID );
-- 
--         /** 
--          * Exits this configuration.
--@@ -125,7 +125,7 @@
--          * @return <code>true</code> if the exit was successful,
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT virtual bool exit();
--+        virtual bool exit();
--         //@}
-- 
--         /**
--@@ -139,7 +139,7 @@
--          *                methods.
--          * @return the frame number of the new frame.
--          */
---        EQ_EXPORT virtual uint32_t startFrame( const uint32_t frameID );
--+        virtual uint32_t startFrame( const uint32_t frameID );
-- 
--         /** 
--          * Finish the rendering of a frame.
--@@ -147,14 +147,14 @@
--          * @return the frame number of the finished frame, or <code>0</code> if
--          *         no frame has been finished.
--          */
---        EQ_EXPORT virtual uint32_t finishFrame();
--+        virtual uint32_t finishFrame();
-- 
--         /**
--          * Finish rendering all pending frames.
--          *
--          * @return the frame number of the last finished frame.
--          */
---        EQ_EXPORT virtual uint32_t finishAllFrames();
--+        virtual uint32_t finishAllFrames();
-- 
--         /** 
--          * Release the local synchronization of the config for a frame.
--@@ -175,7 +175,7 @@
--          * 
--          * @param event the event.
--          */
---        EQ_EXPORT void sendEvent( ConfigEvent& event );
--+        void sendEvent( ConfigEvent& event );
-- 
--         /** 
--          * Get the next received event on the application node.
--@@ -184,7 +184,7 @@
--          * 
--          * @return a config event.
--          */
---        EQ_EXPORT const ConfigEvent* nextEvent();
--+        const ConfigEvent* nextEvent();
-- 
--         /** 
--          * Try to get an event on the application node.
--@@ -193,7 +193,7 @@
--          * 
--          * @return a config event, or 0 if no events are pending.
--          */
---        EQ_EXPORT const ConfigEvent* tryNextEvent();
--+        const ConfigEvent* tryNextEvent();
-- 
--         /** @return true if events are pending. */
--         bool checkEvent() const { return !_eventQueue.isEmpty(); }
--@@ -205,7 +205,7 @@
--          * default implementation calls handleEvent() on all pending events,
--          * without blocking.
--          */
---        EQ_EXPORT virtual void handleEvents();
--+        virtual void handleEvents();
-- 
--         /** 
--          * Handle one config event.
--@@ -214,7 +214,7 @@
--          * @return <code>true</code> if the event requires a redraw,
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT virtual bool handleEvent( const ConfigEvent* event );
--+        virtual bool handleEvent( const ConfigEvent* event );
--         //@}
--         
-- #ifdef EQ_USE_DEPRECATED
--@@ -231,16 +231,16 @@
--          *
--          * @param matrix the matrix
--          */
---        EQ_EXPORT void setHeadMatrix( const vmml::Matrix4f& matrix );
--+        void setHeadMatrix( const vmml::Matrix4f& matrix );
-- 
--         /** @return the current head matrix. */
---        EQ_EXPORT const vmml::Matrix4f& getHeadMatrix() const;
--+        const vmml::Matrix4f& getHeadMatrix() const;
-- 
--         /** Set the eye separation, i.e., the distance between the eyes. */
---        EQ_EXPORT void setEyeBase( const float eyeBase );
--+        void setEyeBase( const float eyeBase );
-- 
--         /** @return the current eye separation. */
---        EQ_EXPORT float getEyeBase() const;
--+        float getEyeBase() const;
--         //@}
-- #endif
-- 
--@@ -264,7 +264,7 @@
-- #endif
-- 
--         /** Undocumented */
---        EQ_EXPORT void freezeLoadBalancing( const bool onOff );
--+        void freezeLoadBalancing( const bool onOff );
-- 
--         /** 
--          * Set the window system for the config's message pump, used by
--@@ -276,7 +276,7 @@
--     protected:
-- 
--         /** @sa eq::net::Session::notifyMapped() */
---        EQ_EXPORT virtual void notifyMapped( net::NodePtr node );
--+        virtual void notifyMapped( net::NodePtr node );
-- 
--     private:
--         /** The node identifier of the node running the application thread. */
--Index: lib/client/configEvent.h
--===================================================================
----- lib/client/configEvent.h	(revision 3227)
--+++ lib/client/configEvent.h	(working copy)
--@@ -36,7 +36,7 @@
--      *
--      * When subclassing, make sure to set the packet size.
--      */
---    struct ConfigEvent : public ConfigPacket
--+    struct EQ_EXPORT ConfigEvent : public ConfigPacket
--     {
--     public:
--         ConfigEvent()
--Index: lib/client/eventHandler.h
--===================================================================
----- lib/client/eventHandler.h	(revision 3227)
--+++ lib/client/eventHandler.h	(working copy)
--@@ -29,22 +29,22 @@
--     /**
--      * Base class for window system-specific event handlers
--      */
---    class EventHandler
--+    class EQ_EXPORT EventHandler
--     {
--     public:
-- 
--     protected:
--         /** Constructs a new event handler. */
---        EQ_EXPORT EventHandler() : _lastEventWindow( 0 ) {}
--+        EventHandler() : _lastEventWindow( 0 ) {}
-- 
--         /** Destructs the event handler. */
---        EQ_EXPORT virtual ~EventHandler(){}
--+        virtual ~EventHandler(){}
-- 
--         /** Compute the mouse move delta from the previous pointer event. */
---        EQ_EXPORT void _computePointerDelta(const Window* window, Event& event);
--+        void _computePointerDelta(const Window* window, Event& event);
-- 
--         /** Find and set the rendering context at the mouse position. */
---        EQ_EXPORT void _getRenderContext( const Window* window, Event& event );
--+        void _getRenderContext( const Window* window, Event& event );
-- 
--         /** The previous pointer event to compute mouse movement deltas. */
--         Event _lastPointerEvent;
--Index: lib/client/frame.h
--===================================================================
----- lib/client/frame.h	(revision 3227)
--+++ lib/client/frame.h	(working copy)
--@@ -43,7 +43,7 @@
--     /**
--      * A holder for a frame data and parameters.
--      */
---    class Frame : public net::Object
--+    class EQ_EXPORT Frame : public net::Object
--     {
--     public:
--         /** 
--@@ -69,24 +69,24 @@
--         /** 
--          * Constructs a new Frame.
--          */
---        EQ_EXPORT Frame();
---        EQ_EXPORT virtual ~Frame();
--+        Frame();
--+        virtual ~Frame();
-- 
--         /**
--          * @name Data Access
--          */
--         //@{
---        EQ_EXPORT const std::string& getName() const;
--+        const std::string& getName() const;
-- 
--         const Vector2i& getOffset() const { return _data.offset; }
--         void setOffset( const Vector2i& offset ) { _data.offset = offset;}
-- 
--         /** @return the database-range relative to the destination channel. */
---        EQ_EXPORT const Range& getRange() const;
---        EQ_EXPORT void         setRange( const Range& range );
--+        const Range& getRange() const;
--+        void         setRange( const Range& range );
-- 
--         /** @return the pixel parameters relative to the destination channel. */
---        EQ_EXPORT const Pixel& getPixel() const;
--+        const Pixel& getPixel() const;
-- 
--         /** @return the zoom factor for readback or assemble. */
--         const Zoom& getZoom() const { return _data.zoom; }
--@@ -96,14 +96,14 @@
--         void setZoom( const Zoom& zoom ) { _data.zoom = zoom; }
-- 
--         /** The images of this frame */
---        EQ_EXPORT const ImageVector& getImages() const;
--+        const ImageVector& getImages() const;
-- 
--         /** Set the data for this frame. */
--         void setData( FrameData* data ) { _frameData = data; }
--         FrameData* getData() { return _frameData; }
-- 
--         /** Set the pixel viewport of the frame's data */
---        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
--+        void setPixelViewport( const PixelViewport& pvp );
-- 
--         const net::ObjectVersion& getDataVersion( const Eye eye ) const
--             { return _data.frameData[ eye ]; }
--@@ -115,7 +115,7 @@
--         //@{
-- 
--         /** Clear the frame, recycles the images attached to the frame data. */
---        EQ_EXPORT void clear();
--+        void clear();
-- 
--         /** Clear the frame and free all images attached to the frame data. */
--         void flush();
--@@ -127,10 +127,10 @@
--          *
--          * @param glObjects the GL object manager for the current GL context.
--          */
---        EQ_EXPORT void startReadback( Window::ObjectManager* glObjects );
--+        void startReadback( Window::ObjectManager* glObjects );
--         
--         /** Synchronize the image readback. */
---        EQ_EXPORT void syncReadback();
--+        void syncReadback();
-- 
--         /** 
--          * Transmit the frame data to the specified node.
--@@ -159,10 +159,10 @@
--          * 
--          * @return true if the frame is ready, false if not. 
--          */
---        EQ_EXPORT bool isReady() const;
--+        bool isReady() const;
-- 
--         /** Wait for the frame to become available. */
---        EQ_EXPORT void waitReady() const;
--+        void waitReady() const;
-- 
--         /** 
--          * Add a listener which will be incremented when the frame is ready.
--@@ -180,20 +180,20 @@
--         //@}
-- 
--         /** @return the enabled frame buffer attachments. */
---        EQ_EXPORT uint32_t getBuffers() const;
--+        uint32_t getBuffers() const;
-- 
--         /** 
--          * Disable the usage of a frame buffer attachment for all images.
--          * 
--          * @param buffer the buffer to disable.
--          */
---        EQ_EXPORT void disableBuffer( const Buffer buffer );
--+        void disableBuffer( const Buffer buffer );
-- 
--         /** Set color buffer type to read */
---        EQ_EXPORT void setColorType( const GLuint colorType );
--+        void setColorType( const GLuint colorType );
-- 
--         /** Enable/disable alpha usage for newly allocated images. */
---        EQ_EXPORT void setAlphaUsage( const bool useAlpha );
--+        void setAlphaUsage( const bool useAlpha );
-- 
--         /** @internal */
--         void useSendToken( const bool use );
--Index: lib/client/frameData.h
--===================================================================
----- lib/client/frameData.h	(revision 3227)
--+++ lib/client/frameData.h	(working copy)
--@@ -45,11 +45,11 @@
--      * A frame data holds multiple images and is used by frames.
--      * It is not intended to be used directly by application code.
--      */
---    class FrameData : public net::Object
--+    class EQ_EXPORT FrameData : public net::Object
--     {
--     public:
---        EQ_EXPORT FrameData();
---        EQ_EXPORT virtual ~FrameData();
--+        FrameData();
--+        virtual ~FrameData();
-- 
--         /** 
--          * @name Data Access
--@@ -92,10 +92,10 @@
--          * 
--          * @return the image.
--          */
---        EQ_EXPORT Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
--+        Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
-- 
--         /** Clear the frame by recycling the attached images. */
---        EQ_EXPORT void clear();
--+        void clear();
-- 
--         /** 
--          * Read back a set of images according to the current frame data.
--Index: lib/client/global.h
--===================================================================
----- lib/client/global.h	(revision 3227)
--+++ lib/client/global.h	(working copy)
--@@ -55,7 +55,7 @@
--     /** 
--      * Global parameter handling for the Equalizer client library. 
--      */
---    class Global
--+    class EQ_EXPORT Global
--     {
--     public:
--         /** @return the node factory. */
--@@ -66,20 +66,20 @@
--          * 
--          * @param server the default server.
--          */
---        EQ_EXPORT static void setServer( const std::string& server );
--+        static void setServer( const std::string& server );
-- 
--         /** @return the default Equalizer server. */
---        EQ_EXPORT static const std::string& getServer();
--+        static const std::string& getServer();
-- 
--         /** 
--          * Set the config file for the app-local server.
--          * 
--          * @param configFile the default configFile.
--          */
---        EQ_EXPORT static void setConfigFile( const std::string& configFile );
--+        static void setConfigFile( const std::string& configFile );
-- 
--         /** @return the default config file for the app-local server. */
---        EQ_EXPORT static const std::string& getConfigFile();
--+        static const std::string& getConfigFile();
-- 
--         /** 
--          * Global lock for all non-thread-safe Carbon API calls. 
--@@ -94,21 +94,21 @@
--           * @return all directories to search for compressor DSOs during
--           *         eq::init().
--           */
---        EQ_EXPORT static const StringVector& getPluginDirectories();
--+        static const StringVector& getPluginDirectories();
-- 
--         /** add a new directory to search for compressor DSOs. */
---        EQ_EXPORT static void  addPluginDirectory( const std::string& path );
--+        static void  addPluginDirectory( const std::string& path );
-- 
--         /** remove a plugin directory */
---        EQ_EXPORT static void  removePluginDirectory( const std::string& path );
--+        static void  removePluginDirectory( const std::string& path );
-- 
--         /** @return the plugin registry. */
---        EQ_EXPORT static PluginRegistry& getPluginRegistry();
--+        static PluginRegistry& getPluginRegistry();
-- 
--     private:
---        EQ_EXPORT friend bool init( const int argc, char** argv, 
--+        friend EQ_EXPORT bool init( const int argc, char** argv, 
--                                     NodeFactory* nodeFactory );
---        EQ_EXPORT friend bool exit();
--+        friend EQ_EXPORT bool exit();
-- 
--         static StringVector _initPluginDirectories();
--         friend bool testInitPluginDirectories();
--Index: lib/client/image.h
--===================================================================
----- lib/client/image.h	(revision 3227)
--+++ lib/client/image.h	(working copy)
--@@ -33,12 +33,12 @@
--      *
--      * An image holds color and depth information for a rectangular region.
--      */
---    class Image
--+    class EQ_EXPORT Image
--     {
--     public:
--         /** Constructs a new Image. */
---        EQ_EXPORT Image();
---        EQ_EXPORT virtual ~Image();
--+        Image();
--+        virtual ~Image();
-- 
--         struct PixelData : public base::NonCopyable
--         {
--@@ -72,11 +72,11 @@
--          * @param buffer the buffer type.
--          * @param format the format.
--          */
---        EQ_EXPORT void setFormat( const Frame::Buffer buffer,
--+        void setFormat( const Frame::Buffer buffer,
--                                   const uint32_t format );
-- 
--         /** @return the (OpenGL) format of the pixel data. */
---        EQ_EXPORT uint32_t getFormat( const Frame::Buffer buffer ) const;
--+        uint32_t getFormat( const Frame::Buffer buffer ) const;
-- 
--         /**
--          * Set the (OpenGL) type of the pixel data for a buffer.
--@@ -85,14 +85,14 @@
--          * @param buffer the buffer type.
--          * @param type the type.
--          */
---        EQ_EXPORT void setType( const Frame::Buffer buffer, 
--+        void setType( const Frame::Buffer buffer, 
--                                 const uint32_t type );
-- 
--         /** @return the (OpenGL) type of the pixel data. */
---        EQ_EXPORT uint32_t getType( const Frame::Buffer buffer ) const;
--+        uint32_t getType( const Frame::Buffer buffer ) const;
-- 
--         /** @return true if the image has a color buffer with alpha. */
---        EQ_EXPORT bool hasAlpha() const;
--+        bool hasAlpha() const;
-- 
--         /** 
--          * Set the frame pixel storage type. 
--@@ -109,7 +109,7 @@
--         Frame::Type getStorageType() const{ return _type; }
-- 
--         /** @return true if the image buffer has valid data. */
---        EQ_EXPORT bool hasData( const Frame::Buffer buffer ) const;
--+        bool hasData( const Frame::Buffer buffer ) const;
-- 
--         /** @return the fractional viewport of the image. */
--         //const eq::Viewport& getViewport() const { return _data.vp; }
--@@ -121,33 +121,33 @@
--          *
--          * @param pvp the pixel viewport.
--          */
---        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
--+        void setPixelViewport( const PixelViewport& pvp );
-- 
--         /** @return the pixel viewport of the image with in the frame buffer. */
--         const PixelViewport& getPixelViewport() const { return _pvp; }
-- 
--         /** Reset the image to its default state. */
---        EQ_EXPORT void reset();
--+        void reset();
--         //@}
-- 
-- 
--         /** @name Pixel data */
--         //@{
--         /** @return a pointer to the raw pixel data. */
---        EQ_EXPORT const uint8_t* getPixelPointer( const Frame::Buffer buffer )
--+        const uint8_t* getPixelPointer( const Frame::Buffer buffer )
--                                      const;
---        EQ_EXPORT uint8_t* getPixelPointer( const Frame::Buffer buffer );
--+        uint8_t* getPixelPointer( const Frame::Buffer buffer );
-- 
--         /** @return the size of the raw pixel data in bytes */
--         uint32_t getPixelDataSize( const Frame::Buffer buffer ) const
--             { return _pvp.getArea() * getDepth( buffer ); }
-- 
--         /** @return the pixel data. */
---        EQ_EXPORT const PixelData& getPixelData( const Frame::Buffer buffer )
--+        const PixelData& getPixelData( const Frame::Buffer buffer )
--                                        const;
-- 
--         /** @return compress, if needed, and return the pixel data. */
---        EQ_EXPORT const PixelData& compressPixelData( const Frame::Buffer 
--+        const PixelData& compressPixelData( const Frame::Buffer 
--                                                           buffer );
-- 
--         /**
--@@ -162,10 +162,10 @@
--          *
--          * @param buffer the image buffer to clear.
--          */
---        EQ_EXPORT void clearPixelData( const Frame::Buffer buffer );
--+        void clearPixelData( const Frame::Buffer buffer );
-- 
--         /** Validate an image buffer without initializing its content. */
---        EQ_EXPORT void validatePixelData( const Frame::Buffer buffer );
--+        void validatePixelData( const Frame::Buffer buffer );
-- 
--         /**
--          * Set the pixel data of one of the image buffers.
--@@ -176,7 +176,7 @@
--          * @param buffer the image buffer to set.
--          * @param data the buffer data of size pvp.w * pvp.h * depth.
--          */
---        EQ_EXPORT void setPixelData( const Frame::Buffer buffer, 
--+        void setPixelData( const Frame::Buffer buffer, 
--                                      const uint8_t* data );
-- 
--         /**
--@@ -188,7 +188,7 @@
--          * @param buffer the image buffer to set.
--          * @param data the pixel data.
--          */
---        EQ_EXPORT void setPixelData( const Frame::Buffer buffer,
--+        void setPixelData( const Frame::Buffer buffer,
--                                      const PixelData& data );
-- 
--         /** Switch PBO usage for image transfers on. */
--@@ -201,10 +201,10 @@
--         bool usePBO() const { return _usePBO; }
-- 
--         /** Enable compression and transport of alpha data. */
---        EQ_EXPORT void enableAlphaUsage();
--+        void enableAlphaUsage();
-- 
--         /** Disable compression and transport of alpha data. */
---        EQ_EXPORT void disableAlphaUsage();
--+        void disableAlphaUsage();
-- 
--         /** @return true if alpha data can be ignored. */
--         bool ignoreAlpha() const { return _ignoreAlpha; }
--@@ -214,19 +214,19 @@
--         /** @name Texture access */
--         //@{
--         /** Get the texture of this image. */
---        EQ_EXPORT const Texture& getTexture( const Frame::Buffer buffer ) const;
--+        const Texture& getTexture( const Frame::Buffer buffer ) const;
-- 
--         /**
--          * @return true if the image has texture data for the buffer, false if
--          * not.
--          */
---        EQ_EXPORT bool hasTextureData( const Frame::Buffer buffer ) const;
--+        bool hasTextureData( const Frame::Buffer buffer ) const;
-- 
--         /** 
--          * @return the internal format a texture should use for the given
--          *         buffer. 
--          */
---        EQ_EXPORT uint32_t getInternalTextureFormat( const Frame::Buffer which )
--+        uint32_t getInternalTextureFormat( const Frame::Buffer which )
--                                const;
--         //@}
-- 
--@@ -244,23 +244,23 @@
--          * @param glObjects the GL object manager for the current GL context.
--          * @sa setStorageType()
--          */
---        EQ_EXPORT void startReadback( const uint32_t buffers, 
--+        void startReadback( const uint32_t buffers, 
--                                       const PixelViewport& pvp,
--                                       const Zoom& zoom,
--                                       Window::ObjectManager* glObjects );
-- 
--         /** Make sure that the last readback operation is complete. */
---        EQ_EXPORT void syncReadback();
--+        void syncReadback();
-- 
--         /** Writes the pixel data as rgb image files. */
---        EQ_EXPORT void writeImage( const std::string& filename,
--+        void writeImage( const std::string& filename,
--                                    const Frame::Buffer buffer ) const;
-- 
--         /** Writes all valid pixel data as separate images. */
---        EQ_EXPORT void writeImages( const std::string& filenameTemplate ) const;
--+        void writeImages( const std::string& filenameTemplate ) const;
-- 
--         /** Read pixel data from an uncompressed rgb image file. */
---        EQ_EXPORT bool readImage( const std::string& filename, 
--+        bool readImage( const std::string& filename, 
--                                   const Frame::Buffer buffer   );
-- 
--         /** Setting image offset, used after readback to correct position 
--@@ -268,33 +268,33 @@
--         void setOffset( int32_t x, int32_t y ) { _pvp.x = x; _pvp.y = y; }
-- 
--         /** Delete all cache data of this image. */
---        EQ_EXPORT void flush();
--+        void flush();
--         //@}
-- 
--         /** @return the GL function table, valid during readback. */
--         GLEWContext* glewGetContext() { return _glObjects->glewGetContext(); }
-- 
--         /** @return the number of channels in a pixel. */
---        EQ_EXPORT uint8_t getNumChannels( const Frame::Buffer buffer ) const;
--+        uint8_t getNumChannels( const Frame::Buffer buffer ) const;
-- 
--         /** @return the size in bytes for one channel. */
---        EQ_EXPORT uint8_t getChannelSize( const Frame::Buffer buffer ) const;
--+        uint8_t getChannelSize( const Frame::Buffer buffer ) const;
-- 
--         /** @return the size in bytes for one pixel (nChannels*channelSize). */
---        EQ_EXPORT uint32_t getDepth( const Frame::Buffer buffer ) const;
--+        uint32_t getDepth( const Frame::Buffer buffer ) const;
-- 
--         /** 
--          * @return the list of possible compressors for the given buffer.
--          * @internal
--          */
---        EQ_EXPORT std::vector< uint32_t > 
--+        std::vector< uint32_t > 
--         findCompressors( const Frame::Buffer buffer ) const;
-- 
--         /**
--          * Re-allocate, if needed, a compressor instance.
--          * @internal
--          */
---        EQ_EXPORT bool allocCompressor( const Frame::Buffer buffer, 
--+        bool allocCompressor( const Frame::Buffer buffer, 
--                                         const uint32_t name );
-- 
--     private:
--Index: lib/client/node.h
--===================================================================
----- lib/client/node.h	(revision 3227)
--+++ lib/client/node.h	(working copy)
--@@ -36,14 +36,14 @@
--      *
--      * Each node is executed in a seperate process.
--      */
---    class Node : public net::Object
--+    class EQ_EXPORT Node : public net::Object
--     {
--     public:
--         /** Constructs a new node. */
---        EQ_EXPORT Node( Config* parent );
--+        Node( Config* parent );
-- 
--         /** Destructs the node. */
---        EQ_EXPORT virtual ~Node();
--+        virtual ~Node();
-- 
--         /** 
--          * Returns the config of this node.
--@@ -53,8 +53,8 @@
--         Config*       getConfig()       { return _config; }
--         const Config* getConfig() const { return _config; }
-- 
---        EQ_EXPORT ClientPtr getClient();
---        EQ_EXPORT ServerPtr getServer();
--+        ClientPtr getClient();
--+        ServerPtr getServer();
-- 
--         const PipeVector& getPipes() const { return _pipes; }
--         const std::string& getName() const { return _name; }
--@@ -71,7 +71,7 @@
--          */
--         uint32_t getTasks() const { return _tasks; }
-- 
---        EQ_EXPORT CommandQueue* getNodeThreadQueue();
--+        CommandQueue* getNodeThreadQueue();
-- 
--         /** 
--          * Traverse this node and all children using a node visitor.
--@@ -79,7 +79,7 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQ_EXPORT VisitorResult accept( NodeVisitor& visitor );
--+        VisitorResult accept( NodeVisitor& visitor );
-- 
--         /** 
--          * Get a network barrier. 
--@@ -100,8 +100,8 @@
--         FrameData* getFrameData( const net::ObjectVersion& dataVersion );
-- 
--         /** Wait for the node to be initialized. */
---        EQ_EXPORT void waitInitialized() const;
---        EQ_EXPORT bool isRunning() const;
--+        void waitInitialized() const;
--+        bool isRunning() const;
--         
--         /** 
--          * Wait for a frame to be started.
--@@ -109,7 +109,7 @@
--          * @param frameNumber the frame number.
--          * @sa releaseFrame()
--          */
---        EQ_EXPORT void waitFrameStarted( const uint32_t frameNumber ) const;
--+        void waitFrameStarted( const uint32_t frameNumber ) const;
-- 
--         uint32_t getFinishedFrame() const { return _finishedFrame; }
-- 
--@@ -128,10 +128,10 @@
--             IATTR_ALL
--         };
-- 
---        EQ_EXPORT void setIAttribute( const IAttribute attr,
--+        void setIAttribute( const IAttribute attr,
--                                       const int32_t value );
---        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
---        EQ_EXPORT static const std::string& getIAttributeString(
--+        int32_t getIAttribute( const IAttribute attr ) const;
--+        static const std::string& getIAttributeString(
--                                                         const IAttribute attr );
--         //@}
-- 
--@@ -167,7 +167,7 @@
--     protected:
--         friend class Config;
-- 
---        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
--+        virtual void attachToSession( const uint32_t id, 
--                                                 const uint32_t instanceID, 
--                                                 net::Session* session );
-- 
--@@ -178,21 +178,21 @@
--          * 
--          * @param frameNumber the frame to start.
--          */
---        EQ_EXPORT void startFrame( const uint32_t frameNumber );
--+        void startFrame( const uint32_t frameNumber );
-- 
--         /** 
--          * Signal the completion of a frame to the parent.
--          * 
--          * @param frameNumber the frame to end.
--          */
---        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
--+        void releaseFrame( const uint32_t frameNumber );
-- 
--         /** 
--          * Release the local synchronization of the parent for a frame.
--          * 
--          * @param frameNumber the frame to release.
--          */
---        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
--+        void releaseFrameLocal( const uint32_t frameNumber );
--         //@}
-- 
--         /**
--@@ -208,12 +208,12 @@
--          * 
--          * @param initID the init identifier.
--          */
---        EQ_EXPORT virtual bool configInit( const uint32_t initID );
--+        virtual bool configInit( const uint32_t initID );
-- 
--         /** 
--          * Exit this node.
--          */
---        EQ_EXPORT virtual bool configExit();
--+        virtual bool configExit();
-- 
--         /**
--          * Start rendering a frame.
--@@ -227,7 +227,7 @@
--          * @param frameNumber the frame to start.
--          * @sa startFrame(), Config::beginFrame()
--          */
---        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
--+        virtual void frameStart( const uint32_t frameID, 
--                                            const uint32_t frameNumber );
-- 
--         /**
--@@ -256,7 +256,7 @@
--          * @param frameNumber the frame finished with draw.
--          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
--          */
---        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
--+        virtual void frameDrawFinish( const uint32_t frameID, 
--                                                 const uint32_t frameNumber );
-- 
--         /** 
--@@ -273,7 +273,7 @@
--          * @param frameNumber the frame finished with draw.
--          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
--          */
---        EQ_EXPORT virtual void frameTasksFinish( const uint32_t frameID, 
--+        virtual void frameTasksFinish( const uint32_t frameID, 
--                                                  const uint32_t frameNumber );
--         //@}
-- 
--@@ -287,7 +287,7 @@
--          *
--          * @param message the error message.
--          */
---        EQ_EXPORT void setErrorMessage( const std::string& message );
--+        void setErrorMessage( const std::string& message );
--         //@}
-- 
--     private:
--Index: lib/client/objectManager.h
--===================================================================
----- lib/client/objectManager.h	(revision 3227)
--+++ lib/client/objectManager.h	(working copy)
--@@ -44,7 +44,7 @@
--      * delete - delete.
--      */
--     template< typename T >
---    class ObjectManager : public base::NonCopyable
--+    class EQ_EXPORT ObjectManager : public base::NonCopyable
--     {
--     public:
--         enum
--@@ -53,57 +53,57 @@
--         };
-- 
--         /** Construct a new object manager. */
---        EQ_EXPORT ObjectManager( GLEWContext* const glewContext );
--+        ObjectManager( GLEWContext* const glewContext );
-- 
--         /** Construct a new object manager sharing data with another manager. */
---        EQ_EXPORT ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
--+        ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
-- 
---        EQ_EXPORT virtual ~ObjectManager();
--+        virtual ~ObjectManager();
-- 
--         /** @return the number of object managers currently sharing the data. */
--         int getSharedUsage() const { return _data->getRefCount(); }
-- 
---        EQ_EXPORT void deleteAll();
--+        void deleteAll();
-- 
---        EQ_EXPORT GLuint getList( const T& key );
---        EQ_EXPORT GLuint newList( const T& key, const GLsizei num = 1 );
---        EQ_EXPORT GLuint obtainList( const T& key, const GLsizei num = 1 );
---        EQ_EXPORT void   deleteList( const T& key );
--+        GLuint getList( const T& key );
--+        GLuint newList( const T& key, const GLsizei num = 1 );
--+        GLuint obtainList( const T& key, const GLsizei num = 1 );
--+        void   deleteList( const T& key );
-- 
---        EQ_EXPORT GLuint getTexture( const T& key );
---        EQ_EXPORT GLuint newTexture( const T& key );
---        EQ_EXPORT GLuint obtainTexture( const T& key );
---        EQ_EXPORT void   deleteTexture( const T& key );
--+        GLuint getTexture( const T& key );
--+        GLuint newTexture( const T& key );
--+        GLuint obtainTexture( const T& key );
--+        void   deleteTexture( const T& key );
-- 
---        EQ_EXPORT bool   supportsBuffers() const;
---        EQ_EXPORT GLuint getBuffer( const T& key );
---        EQ_EXPORT GLuint newBuffer( const T& key );
---        EQ_EXPORT GLuint obtainBuffer( const T& key );
---        EQ_EXPORT void   deleteBuffer( const T& key );
--+        bool   supportsBuffers() const;
--+        GLuint getBuffer( const T& key );
--+        GLuint newBuffer( const T& key );
--+        GLuint obtainBuffer( const T& key );
--+        void   deleteBuffer( const T& key );
-- 
---        EQ_EXPORT bool   supportsPrograms() const;
---        EQ_EXPORT GLuint getProgram( const T& key );
---        EQ_EXPORT GLuint newProgram( const T& key );
---        EQ_EXPORT GLuint obtainProgram( const T& key );
---        EQ_EXPORT void   deleteProgram( const T& key );
--+        bool   supportsPrograms() const;
--+        GLuint getProgram( const T& key );
--+        GLuint newProgram( const T& key );
--+        GLuint obtainProgram( const T& key );
--+        void   deleteProgram( const T& key );
-- 
---        EQ_EXPORT bool   supportsShaders() const;
---        EQ_EXPORT GLuint getShader( const T& key );
---        EQ_EXPORT GLuint newShader( const T& key, const GLenum type );
---        EQ_EXPORT GLuint obtainShader( const T& key, const GLenum type );
---        EQ_EXPORT void   deleteShader( const T& key );
--+        bool   supportsShaders() const;
--+        GLuint getShader( const T& key );
--+        GLuint newShader( const T& key, const GLenum type );
--+        GLuint obtainShader( const T& key, const GLenum type );
--+        void   deleteShader( const T& key );
-- 
---        EQ_EXPORT bool     supportsEqTexture() const;
---        EQ_EXPORT Texture* getEqTexture( const T& key );
---        EQ_EXPORT Texture* newEqTexture( const T& key );
---        EQ_EXPORT Texture* obtainEqTexture( const T& key );
---        EQ_EXPORT void     deleteEqTexture( const T& key );
--+        bool     supportsEqTexture() const;
--+        Texture* getEqTexture( const T& key );
--+        Texture* newEqTexture( const T& key );
--+        Texture* obtainEqTexture( const T& key );
--+        void     deleteEqTexture( const T& key );
-- 
---        EQ_EXPORT bool               supportsEqFrameBufferObject() const;
---        EQ_EXPORT FrameBufferObject* getEqFrameBufferObject( const T& key );
---        EQ_EXPORT FrameBufferObject* newEqFrameBufferObject( const T& key );
---        EQ_EXPORT FrameBufferObject* obtainEqFrameBufferObject( const T& key );
---        EQ_EXPORT void               deleteEqFrameBufferObject( const T& key );
--+        bool               supportsEqFrameBufferObject() const;
--+        FrameBufferObject* getEqFrameBufferObject( const T& key );
--+        FrameBufferObject* newEqFrameBufferObject( const T& key );
--+        FrameBufferObject* obtainEqFrameBufferObject( const T& key );
--+        void               deleteEqFrameBufferObject( const T& key );
-- 
--         const GLEWContext* glewGetContext() const { return _glewContext; }
--         GLEWContext* glewGetContext()             { return _glewContext; }
--Index: lib/client/pipe.h
--===================================================================
----- lib/client/pipe.h	(revision 3227)
--+++ lib/client/pipe.h	(working copy)
--@@ -52,26 +52,26 @@
--      * the pipe is non-threaded, in which case the tasks are executed on the
--      * Node's main thread.
--      */
---    class Pipe : public net::Object
--+    class EQ_EXPORT Pipe : public net::Object
--     {
--     public:
--         /** Constructs a new pipe. */
---        EQ_EXPORT Pipe( Node* parent );
--+        Pipe( Node* parent );
-- 
--         /** Destructs the pipe. */
---        EQ_EXPORT virtual ~Pipe();
--+        virtual ~Pipe();
-- 
--         /** @name Data Access. */
--         //@{
---        EQ_EXPORT net::CommandQueue* getPipeThreadQueue();
--+        net::CommandQueue* getPipeThreadQueue();
--         Node*       getNode()       { return _node; }
--         const Node* getNode() const { return _node; }
-- 
---        EQ_EXPORT Config* getConfig();
---        EQ_EXPORT const Config* getConfig() const;
--+        Config* getConfig();
--+        const Config* getConfig() const;
-- 
---        EQ_EXPORT ClientPtr getClient();
---        EQ_EXPORT ServerPtr getServer();
--+        ClientPtr getClient();
--+        ServerPtr getServer();
-- 
--         const WindowVector& getWindows() const { return _windows; }
-- 
--@@ -91,7 +91,7 @@
-- 
--         bool isThreaded() const { return ( _thread != 0 ); }
--         uint32_t getCurrentFrame()  const { return _currentFrame; }
---        EQ_EXPORT uint32_t getFinishedFrame() const;
--+        uint32_t getFinishedFrame() const;
-- 
--         /** 
--          * Traverse this pipe and all children using a pipe visitor.
--@@ -99,7 +99,7 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQ_EXPORT VisitorResult accept( PipeVisitor& visitor );
--+        VisitorResult accept( PipeVisitor& visitor );
-- 
--         /**
--          * Set the pipes's pixel viewport.
--@@ -151,10 +151,10 @@
--         WindowSystem getWindowSystem() const { return _windowSystem; }
-- 
--         /** @return the time in ms elapsed since the frame started. */
---        EQ_EXPORT int64_t getFrameTime() const;
--+        int64_t getFrameTime() const;
-- 
--         /** @return the generic WGL function table for the pipe. */
---        EQ_EXPORT WGLEWContext* wglewGetContext();
--+        WGLEWContext* wglewGetContext();
--         //@}
-- 
--         /**
--@@ -186,8 +186,8 @@
--         //@}
-- 
--         /** Wait for the pipe to be exited. */
---        EQ_EXPORT void waitExited() const;
---        EQ_EXPORT bool isRunning() const;
--+        void waitExited() const;
--+        bool isRunning() const;
--         
--         /** 
--          * Wait for a frame to be finished.
--@@ -195,7 +195,7 @@
--          * @param frameNumber the frame number.
--          * @sa releaseFrame()
--          */
---        EQ_EXPORT void waitFrameFinished( const uint32_t frameNumber ) const;
--+        void waitFrameFinished( const uint32_t frameNumber ) const;
-- 
--         /** 
--          * Wait for a frame to be released locally.
--@@ -203,7 +203,7 @@
--          * @param frameNumber the frame number.
--          * @sa releaseFrameLocal()
--          */
---        EQ_EXPORT void waitFrameLocal( const uint32_t frameNumber ) const;
--+        void waitFrameLocal( const uint32_t frameNumber ) const;
-- 
--         /** Start the pipe thread. */
--         void startThread();
--@@ -252,14 +252,14 @@
--          * 
--          * @param frameNumber the frame to start.
--          */
---        EQ_EXPORT void startFrame( const uint32_t frameNumber );
--+        void startFrame( const uint32_t frameNumber );
-- 
--         /** 
--          * Signal the completion of a frame to the parent.
--          * 
--          * @param frameNumber the frame to end.
--          */
---        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
--+        void releaseFrame( const uint32_t frameNumber );
-- 
--         /** 
--          * Release the local synchronization of the parent for a frame.
--@@ -272,7 +272,7 @@
--          * 
--          * @param frameNumber the frame to release.
--          */
---        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
--+        void releaseFrameLocal( const uint32_t frameNumber );
--         //@}
-- 
--         /**
--@@ -290,7 +290,7 @@
--          * @return <code>true</code> if the window system is supported,
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT virtual bool supportsWindowSystem( const WindowSystem system )
--+        virtual bool supportsWindowSystem( const WindowSystem system )
--                                    const;
-- 
--         /** 
--@@ -301,19 +301,19 @@
--          * 
--          * @return the window system currently used by this pipe.
--          */
---        EQ_EXPORT virtual WindowSystem selectWindowSystem() const;
--+        virtual WindowSystem selectWindowSystem() const;
-- 
--         /** 
--          * Initialises this pipe.
--          * 
--          * @param initID the init identifier.
--          */
---        EQ_EXPORT virtual bool configInit( const uint32_t initID );
--+        virtual bool configInit( const uint32_t initID );
-- 
--         /** 
--          * Exit this pipe.
--          */
---        EQ_EXPORT virtual bool configExit();
--+        virtual bool configExit();
-- 
--         /**
--          * Start rendering a frame.
--@@ -331,7 +331,7 @@
--          * @sa Config::beginFrame(), Node::startFrame(), 
--          *     Node::waitFrameStarted()
--          */
---        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
--+        virtual void frameStart( const uint32_t frameID, 
--                                            const uint32_t frameNumber );
-- 
--         /**
--@@ -347,7 +347,7 @@
--          * @param frameID the per-frame identifier.
--          * @param frameNumber the frame to finish.
--          */
---        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
--+        virtual void frameFinish( const uint32_t frameID, 
--                                             const uint32_t frameNumber );
-- 
--         /** 
--@@ -359,7 +359,7 @@
--          * @param frameID the per-frame identifier.
--          * @param frameNumber the frame to finished with draw.
--          */
---        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
--+        virtual void frameDrawFinish( const uint32_t frameID, 
--                                                 const uint32_t frameNumber );
-- 
--         /** @name Configuration. */
--@@ -376,7 +376,7 @@
--         //@}
-- 
--         /** @sa net::Object::attachToSession. */
---        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
--+        virtual void attachToSession( const uint32_t id, 
--                                                 const uint32_t instanceID, 
--                                                 net::Session* session );
-- 
--Index: lib/client/pluginRegistry.h
--===================================================================
----- lib/client/pluginRegistry.h	(revision 3227)
--+++ lib/client/pluginRegistry.h	(working copy)
--@@ -23,7 +23,7 @@
-- namespace eq 
-- {
-- 
---class PluginRegistry
--+class EQ_EXPORT PluginRegistry
-- {
-- public:
-- 
--@@ -34,7 +34,7 @@
--     void exit();
-- 
--     /* @return all registered compressors plugins */
---    EQ_EXPORT const CompressorVector& getCompressors() const;
--+    const CompressorVector& getCompressors() const;
-- 
--     /* @return the compressor with the given name, or 0. */
--     Compressor* findCompressor( const uint32_t name );
--Index: lib/client/projection.h
--===================================================================
----- lib/client/projection.h	(revision 3227)
--+++ lib/client/projection.h	(working copy)
--@@ -34,30 +34,30 @@
--      * wall at the given distance. The fov defines the horizontal and
--      * vertical field of view of the projector.
--      */
---    class Projection
--+    class EQ_EXPORT Projection
--     {
--     public:
---        EQ_EXPORT Projection();
--+        Projection();
-- 
--         /** 
--          * Resize the horizontal FOV.
--          * 
--          * @param ratio the amount by which the FOV is grown or shrunk.
--          */
---        EQ_EXPORT void resizeHorizontal( const float ratio );
--+        void resizeHorizontal( const float ratio );
-- 
--         /** 
--          * Resize the vertical FOV.
--          * 
--          * @param ratio the amount by which the FOV is grown or shrunk.
--          */
---        EQ_EXPORT void resizeVertical( const float ratio );
--+        void resizeVertical( const float ratio );
-- 
--         /** Set the projection parameters from a wall description. */
---        EQ_EXPORT Projection& operator = ( const Wall& wall );
--+        Projection& operator = ( const Wall& wall );
-- 
---        EQ_EXPORT bool operator == ( const Projection& rhs ) const;
---        EQ_EXPORT bool operator != ( const Projection& rhs ) const;
--+        bool operator == ( const Projection& rhs ) const;
--+        bool operator != ( const Projection& rhs ) const;
--         
--         Vector3f origin;
--         float    distance;
--Index: lib/client/server.h
--===================================================================
----- lib/client/server.h	(revision 3227)
--+++ lib/client/server.h	(working copy)
--@@ -31,21 +31,21 @@
--     class Node;
--     struct ServerPacket;
-- 
---    class Server : public net::Node
--+    class EQ_EXPORT Server : public net::Node
--     {
--     public:
--         /** 
--          * Constructs a new server.
--          */
---        EQ_EXPORT Server();
--+        Server();
-- 
--         /** @name Data Access */
--         //@{
--         void setClient( ClientPtr client );
--         ClientPtr getClient(){ return _client; }
-- 
---        EQ_EXPORT net::CommandQueue* getNodeThreadQueue();
---        EQ_EXPORT net::CommandQueue* getCommandThreadQueue();
--+        net::CommandQueue* getNodeThreadQueue();
--+        net::CommandQueue* getCommandThreadQueue();
--         //@}
-- 
--         /** 
--@@ -56,10 +56,10 @@
--          *         config was found.
--          * @sa ConfigParams
--          */
---        EQ_EXPORT Config* chooseConfig( const ConfigParams& parameters );
--+        Config* chooseConfig( const ConfigParams& parameters );
-- 
--         /** @warning Undocumented - may not be supported in the future */
---        EQ_EXPORT Config* useConfig( const ConfigParams& parameters, 
--+        Config* useConfig( const ConfigParams& parameters, 
--                                      const std::string& config );
-- 
--         /** 
--@@ -70,16 +70,16 @@
--          *
--          * @param config the configuration.
--          */
---        EQ_EXPORT void releaseConfig( Config* config );
--+        void releaseConfig( Config* config );
-- 
--         /** Undocumented - may not be supported in the future */
---        EQ_EXPORT bool shutdown();
--+        bool shutdown();
-- 
--     protected:
--         /**
--          * Destructs this server.
--          */
---        EQ_EXPORT virtual ~Server();
--+        virtual ~Server();
-- 
--     private:
--         /** The local client connected to the server */
--Index: lib/client/wall.h
--===================================================================
----- lib/client/wall.h	(revision 3227)
--+++ lib/client/wall.h	(working copy)
--@@ -34,58 +34,58 @@
--      * The three points describe the bottom left, bottom right and top left
--      * coordinate of the wall in real-world coordinates.
--      */
---    class Wall
--+    class EQ_EXPORT Wall
--     {
--     public:
---        EQ_EXPORT Wall();
--+        Wall();
-- 
--         /** 
--          * Resize the wall horizontally.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeHorizontal( const float ratio );
--+        void resizeHorizontal( const float ratio );
-- 
--         /** 
--          * Resize the wall vertically.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeVertical( const float ratio );
--+        void resizeVertical( const float ratio );
--         
--         /** 
--          * Resize the wall on the left side.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeLeft( const float ratio );
--+        void resizeLeft( const float ratio );
-- 
--         /** 
--          * Resize the wall on the right side.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeRight( const float ratio );
--+        void resizeRight( const float ratio );
-- 
--         /** 
--          * Resize the wall on the top side.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeTop( const float ratio );
--+        void resizeTop( const float ratio );
-- 
--         /** 
--          * Resize the wall on the bottom side.
--          * 
--          * @param ratio the amount by which the wall is grown or shrunk.
--          */
---        EQ_EXPORT void resizeBottom( const float ratio );
--+        void resizeBottom( const float ratio );
-- 
--         /** Compute the sub-frustum for a 2D area on the full wall. */
---        EQ_EXPORT void apply( const Viewport& viewport);
--+        void apply( const Viewport& viewport);
-- 
--         /** Set the wall parameters from a projection description. */
---        EQ_EXPORT Wall& operator = ( const Projection& projection );
--+        Wall& operator = ( const Projection& projection );
-- 
--         /** @return the width of the wall. */
--         float getWidth() const { return (bottomRight - bottomLeft).length(); }
--@@ -93,8 +93,8 @@
--         /** @return the height of the wall. */
--         float getHeight() const { return (topLeft - bottomLeft).length(); }
-- 
---        EQ_EXPORT bool operator == ( const Wall& rhs ) const;
---        EQ_EXPORT bool operator != ( const Wall& rhs ) const;
--+        bool operator == ( const Wall& rhs ) const;
--+        bool operator != ( const Wall& rhs ) const;
-- 
--         Vector3f bottomLeft;
--         Vector3f bottomRight;
--Index: lib/client/wglEventHandler.h
--===================================================================
----- lib/client/wglEventHandler.h	(revision 3227)
--+++ lib/client/wglEventHandler.h	(working copy)
--@@ -31,14 +31,14 @@
--      * by a 'wndproc' callback in the thread which created the window. Each
--      * window has its own WGLEventHandler
--      */
---    class WGLEventHandler : public EventHandler
--+    class EQ_EXPORT WGLEventHandler : public EventHandler
--     {
--     public:
--         /** Constructs a new WGL event handler. */
---        EQ_EXPORT WGLEventHandler( WGLWindowIF* window );
--+        WGLEventHandler( WGLWindowIF* window );
-- 
--         /** Destructs the WGL event handler. */
---        EQ_EXPORT virtual ~WGLEventHandler();
--+        virtual ~WGLEventHandler();
-- 
--         /** 
--          * @return the function pointer of the previously installed window
--Index: lib/client/wglWindowEvent.h
--===================================================================
----- lib/client/wglWindowEvent.h	(revision 3227)
--+++ lib/client/wglWindowEvent.h	(working copy)
--@@ -24,7 +24,7 @@
-- namespace eq
-- {
--     /** A window-system event for a WGLWindowIF */
---    class WGLWindowEvent : public Event
--+    class EQ_EXPORT WGLWindowEvent : public Event
--     {
--     public:
--         // Native event data
--Index: lib/client/window.h
--===================================================================
----- lib/client/window.h	(revision 3227)
--+++ lib/client/window.h	(working copy)
--@@ -48,7 +48,7 @@
--      * to synchronize the state of OpenGL objects between windows. Therefore,
--      * Equalizer calls flush() at the end of each frame for each window.
--      */
---    class Window : public net::Object
--+    class EQ_EXPORT Window : public net::Object
--     {
--     public:
--         /** Stores current drawable characteristics. */
--@@ -92,27 +92,27 @@
--         };
-- 
--         /** Constructs a new window. */
---        EQ_EXPORT Window( Pipe* parent );
--+        Window( Pipe* parent );
-- 
--         /** Destructs the window. */
---        EQ_EXPORT virtual ~Window();
--+        virtual ~Window();
-- 
--         /** @name Data Access */
--         //@{
---        EQ_EXPORT net::CommandQueue* getPipeThreadQueue();
--+        net::CommandQueue* getPipeThreadQueue();
-- 
--         /** @return the pipe of this window. */
--         const Pipe* getPipe() const { return _pipe; }
--         Pipe*       getPipe()       { return _pipe; }
-- 
---        EQ_EXPORT const Node* getNode() const; 
---        EQ_EXPORT Node*       getNode();
--+        const Node* getNode() const; 
--+        Node*       getNode();
-- 
---        EQ_EXPORT const Config* getConfig() const;
---        EQ_EXPORT Config*       getConfig();
--+        const Config* getConfig() const;
--+        Config*       getConfig();
-- 
---        EQ_EXPORT ClientPtr getClient();
---        EQ_EXPORT ServerPtr getServer();
--+        ClientPtr getClient();
--+        ServerPtr getServer();
-- 
--         const ChannelVector& getChannels() { return _channels; }
-- 
--@@ -138,7 +138,7 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQ_EXPORT VisitorResult accept( WindowVisitor& visitor );
--+        VisitorResult accept( WindowVisitor& visitor );
-- 
--         /** 
--          * Set the window with which this window shares the OpenGL context,
--@@ -169,10 +169,10 @@
--          * @return the extended OpenGL function table for the window's OpenGL
--          *         context.
--          */
---        EQ_EXPORT GLEWContext* glewGetContext();
--+        GLEWContext* glewGetContext();
-- 
--         /** @return the generic WGL function table for the window's pipe. */
---        EQ_EXPORT WGLEWContext* wglewGetContext();
--+        WGLEWContext* wglewGetContext();
-- 
--         /** @return information about the current drawable. */
--         const DrawableConfig& getDrawableConfig() const 
--@@ -189,12 +189,12 @@
--          * 
--          * @param pvp the viewport in pixels.
--          */
---        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
--+        void setPixelViewport( const PixelViewport& pvp );
--         
--         /** 
--          * @return the window's pixel viewport
--          */
---        EQ_EXPORT const PixelViewport& getPixelViewport() const { return _pvp; }
--+        const PixelViewport& getPixelViewport() const { return _pvp; }
-- 
--         /** 
--          * @return the window's fractional viewport.
--@@ -205,7 +205,7 @@
--         void addRenderContext( const RenderContext& context );
-- 
--         /** Get the last rendering context at the x, y position. */
---        EQ_EXPORT bool getRenderContext( const int32_t x, const int32_t y,
--+        bool getRenderContext( const int32_t x, const int32_t y,
--                                          RenderContext& context ) const;
--         //@}
-- 
--@@ -237,10 +237,10 @@
--             IATTR_ALL
--         };
-- 
---        EQ_EXPORT void setIAttribute( const IAttribute attr,
--+        void setIAttribute( const IAttribute attr,
--                                       const int32_t value );
---        EQ_EXPORT int32_t  getIAttribute( const IAttribute attr ) const;
---        EQ_EXPORT static const std::string& getIAttributeString(
--+        int32_t  getIAttribute( const IAttribute attr ) const;
--+        static const std::string& getIAttributeString(
--                                                 const IAttribute attr );
--         //@}
-- 
--@@ -265,7 +265,7 @@
--          * e.g., swapBuffers() to the OS window. The os-specific window has to
--          * be initialized.
--          */
---        EQ_EXPORT void setOSWindow( OSWindow* window );
--+        void setOSWindow( OSWindow* window );
-- 
--         const OSWindow* getOSWindow() const { return _osWindow; }
--         OSWindow*       getOSWindow()       { return _osWindow; }
--@@ -282,7 +282,7 @@
--          *
--          * @param message the error message.
--          */
---        EQ_EXPORT void setErrorMessage( const std::string& message );
--+        void setErrorMessage( const std::string& message );
--         //@}
-- 
--         /**
--@@ -303,7 +303,7 @@
--          * @param event the received window system event.
--          * @return true when the event was handled, false if not.
--          */
---        EQ_EXPORT virtual bool processEvent( const Event& event );
--+        virtual bool processEvent( const Event& event );
-- 
--         //@}
-- 
--@@ -311,18 +311,18 @@
--         double getFPS() const { return _avgFPS; }
-- 
--         /* Draw FPS count */
---        EQ_EXPORT virtual void drawFPS() const;
--+        virtual void drawFPS() const;
-- 
--         /** @return the internal color type */
--         int getColorType();
--         
--         /** @return true if FBO is used */
---        EQ_EXPORT bool isFBOWindow();
--+        bool isFBOWindow();
-- 
--     protected:
--         friend class Pipe;
-- 
---        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
--+        virtual void attachToSession( const uint32_t id, 
--                                                 const uint32_t instanceID, 
--                                                 net::Session* session );
-- 
--@@ -363,14 +363,14 @@
--          * 
--          * @param initID the init identifier.
--          */
---        EQ_EXPORT virtual bool configInit( const uint32_t initID );
--+        virtual bool configInit( const uint32_t initID );
-- 
--         /** 
--          * Initialize the OS-specific window.
--          *
--          * @sa setOSWindow()
--          */
---        EQ_EXPORT virtual bool configInitOSWindow( const uint32_t initID );
--+        virtual bool configInitOSWindow( const uint32_t initID );
-- 
--         /** 
--          * Initialize the OpenGL state for this window.
--@@ -379,13 +379,13 @@
--          * @return <code>true</code> if the initialization was successful,
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT virtual bool configInitGL( const uint32_t initID );
--+        virtual bool configInitGL( const uint32_t initID );
-- 
--         /** Exit this window. */
---        EQ_EXPORT virtual bool configExit();
--+        virtual bool configExit();
-- 
--         /** De-initialize the OS-specific window. */
---        EQ_EXPORT virtual bool configExitOSWindow();
--+        virtual bool configExitOSWindow();
-- 
--         /** De-initializer the OpenGL state for this window. */
--         virtual bool configExitGL() { return true; }
--@@ -416,7 +416,7 @@
--          * @param frameID the per-frame identifier.
--          * @param frameNumber the frame to finish.
--          */
---        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
--+        virtual void frameFinish( const uint32_t frameID, 
--                                             const uint32_t frameNumber );
-- 
--         /** 
--@@ -440,13 +440,13 @@
--          * this method will only call OSWindow::makeCurrent if it has not been
--          * done before for this window.
--          */
---        EQ_EXPORT virtual void makeCurrent( const bool cache = true ) const;
--+        virtual void makeCurrent( const bool cache = true ) const;
-- 
--         /** Bind the window's FBO, if it uses one. */
---        EQ_EXPORT virtual void bindFrameBuffer() const;
--+        virtual void bindFrameBuffer() const;
-- 
--         /** Swap the front and back buffer of the window. */
---        EQ_EXPORT virtual void swapBuffers();
--+        virtual void swapBuffers();
--         //@}
-- 
--     private:
--Index: lib/net/barrier.h
--===================================================================
----- lib/net/barrier.h	(revision 3227)
--+++ lib/net/barrier.h	(working copy)
--@@ -33,23 +33,23 @@
--     /**
--      * A networked, versioned barrier.
--      */
---    class Barrier : public Object
--+    class EQ_EXPORT Barrier : public Object
--     {
--     public:
--         /** 
--          * Constructs a new barrier.
--          */
---        EQ_EXPORT Barrier( NodePtr master, const uint32_t height = 0 );
--+        Barrier( NodePtr master, const uint32_t height = 0 );
-- 
--         /** 
--          * Constructs a new barrier.
--          */
---        EQ_EXPORT Barrier();
--+        Barrier();
-- 
--         /**
--          * Destructs the barrier.
--          */
---        EQ_EXPORT virtual ~Barrier();
--+        virtual ~Barrier();
-- 
--         /** 
--          * @name Data Access
--@@ -72,7 +72,7 @@
--          * The implementation assumes that the master node instance also enters
--          * the barrier.
--          */
---        EQ_EXPORT void enter();
--+        void enter();
--         //@}
-- 
--     protected:
--Index: lib/net/bufferConnection.h
--===================================================================
----- lib/net/bufferConnection.h	(revision 3227)
--+++ lib/net/bufferConnection.h	(working copy)
--@@ -28,22 +28,22 @@
--     /**
--      * A proxy connection buffering outgoing data into a memory region.
--      */
---    class BufferConnection : public Connection
--+    class EQ_EXPORT BufferConnection : public Connection
--     {
--     public:
---        EQ_EXPORT BufferConnection();
---        EQ_EXPORT virtual ~BufferConnection();
--+        BufferConnection();
--+        virtual ~BufferConnection();
-- 
---        EQ_EXPORT void sendBuffer( ConnectionPtr connection );
--+        void sendBuffer( ConnectionPtr connection );
-- 
---        EQ_EXPORT uint64_t getSize() const { return _buffer.getSize(); }
--+        uint64_t getSize() const { return _buffer.getSize(); }
-- 
--     protected:
--         virtual void readNB( void* buffer, const uint64_t bytes )
--             { EQDONTCALL; }
--         virtual int64_t readSync( void* buffer, const uint64_t bytes )
--             { EQDONTCALL; return -1; }
---        EQ_EXPORT virtual int64_t write( const void* buffer,
--+        virtual int64_t write( const void* buffer,
--                                          const uint64_t bytes );
-- 
--     private:
--Index: lib/net/commandCache.h
--===================================================================
----- lib/net/commandCache.h	(revision 3227)
--+++ lib/net/commandCache.h	(working copy)
--@@ -37,7 +37,7 @@
--      * Commands are retained and released whenever they are not directly
--      * processed, e.g., when pushed to another thread using a CommandQueue.
--      */
---    class CommandCache
--+    class EQ_EXPORT CommandCache
--     {
--     public:
--         CommandCache();
--Index: lib/net/commandQueue.h
--===================================================================
----- lib/net/commandQueue.h	(revision 3227)
--+++ lib/net/commandQueue.h	(working copy)
--@@ -32,21 +32,21 @@
--     /**
--      * A CommandQueue is a thread-safe queue for command packets.
--      */
---    class CommandQueue : public base::NonCopyable
--+    class EQ_EXPORT CommandQueue : public base::NonCopyable
--     {
--     public:
---        EQ_EXPORT CommandQueue();
---        EQ_EXPORT virtual ~CommandQueue();
--+        CommandQueue();
--+        virtual ~CommandQueue();
-- 
--         /** 
--          * Push a command to the queue.
--          * 
--          * @param packet the command packet.
--          */
---        EQ_EXPORT virtual void push( Command& packet );
--+        virtual void push( Command& packet );
-- 
--         /** Push a command to the front of the queue. */
---        EQ_EXPORT virtual void pushFront( Command& packet );
--+        virtual void pushFront( Command& packet );
-- 
--         /** Wake up the command queue, pop() will return 0. */
--         virtual void wakeup() { _commands.push( static_cast< Command* >( 0 )); }
--@@ -58,7 +58,7 @@
--          * 
--          * @return the next command in the queue.
--          */
---        EQ_EXPORT virtual Command* pop();
--+        virtual Command* pop();
-- 
--         /** 
--          * Try to pop a command from the queue.
--@@ -67,14 +67,14 @@
--          * 
--          * @return the next command in the queue, or 0 if no command is queued.
--          */
---        EQ_EXPORT virtual Command* tryPop();
--+        virtual Command* tryPop();
-- 
--         /** 
--          * Peek the command at the end of the queue.
--          *
--          * @return the last command in the queue, or 0 if no command is queued.
--          */
---        EQ_EXPORT Command* back() const;
--+        Command* back() const;
-- 
--         /** 
--          * @return <code>true</code> if the command queue is empty,
--Index: lib/net/connection.h
--===================================================================
----- lib/net/connection.h	(revision 3227)
--+++ lib/net/connection.h	(working copy)
--@@ -66,7 +66,7 @@
--      * The Connection is used reference-counted in eq::net, since it has
--      * multiple owners, such as the ConnectionSet and Node.
--      */
---    class Connection : public base::Referenced, public base::NonCopyable
--+    class EQ_EXPORT Connection : public base::Referenced, public base::NonCopyable
--     {
--     public:
--         enum State //! The current state of the Connection
--@@ -86,7 +86,7 @@
--          * @param description the connection parameters.
--          * @return the connection.
--          */
---        EQ_EXPORT static ConnectionPtr create( ConnectionDescriptionPtr 
--+        static ConnectionPtr create( ConnectionDescriptionPtr 
--                                                    description );
-- 
--         /** @name Data Access */
--@@ -108,10 +108,10 @@
--          * 
--          * @param description the connection parameters.
--          */
---        EQ_EXPORT void setDescription( ConnectionDescriptionPtr description );
--+        void setDescription( ConnectionDescriptionPtr description );
-- 
--         /** @return the description for this connection. */
---        EQ_EXPORT ConnectionDescriptionPtr getDescription() const;
--+        ConnectionDescriptionPtr getDescription() const;
--         //@}
-- 
-- 
--@@ -190,7 +190,7 @@
--          * @param bytes the number of bytes to read.
--          * @sa recvSync()
--          */
---        EQ_EXPORT void recvNB( void* buffer, const uint64_t bytes );
--+        void recvNB( void* buffer, const uint64_t bytes );
-- 
--         /** 
--          * Finish reading data from the connection.
--@@ -204,7 +204,7 @@
--          * @param bytes return value, the number of bytes read.
--          * @return true if all requested data has been read, false otherwise.
--          */
---        EQ_EXPORT bool recvSync( void** buffer, uint64_t* bytes );
--+        bool recvSync( void** buffer, uint64_t* bytes );
-- 
--         void getRecvData( void** buffer, uint64_t* bytes )
--             { *buffer = _aioBuffer; *bytes = _aioBytes; }
--@@ -253,7 +253,7 @@
--          * @return true if all data has been read, false if not.
--          * @sa lockSend(), unlockSend()
--          */
---        EQ_EXPORT bool send( const void* buffer, const uint64_t bytes, 
--+        bool send( const void* buffer, const uint64_t bytes, 
--                              const bool isLocked = false );
-- 
--         /** Lock the connection, no other thread can send data. */
--@@ -307,7 +307,7 @@
--          * @param size the data size in bytes.
--          * @return true if all data has been read, false if not.
--          */
---        EQ_EXPORT bool send( Packet& packet, const void* data,
--+        bool send( Packet& packet, const void* data,
--                              const uint64_t size );
-- 
--         /** 
--Index: lib/net/connectionDescription.h
--===================================================================
----- lib/net/connectionDescription.h	(revision 3227)
--+++ lib/net/connectionDescription.h	(working copy)
--@@ -32,7 +32,7 @@
--      *
--      * @sa Node
--      */
---    class ConnectionDescription : public base::Referenced
--+    class EQ_EXPORT ConnectionDescription : public base::Referenced
--     {
--     public:
--         ConnectionDescription() 
--@@ -72,8 +72,8 @@
--         char launchCommandQuote;
-- 
--         /** @return this description as a string. */
---        EQ_EXPORT std::string toString() const;
---        EQ_EXPORT void serialize( std::ostream& os ) const;
--+        std::string toString() const;
--+        void serialize( std::ostream& os ) const;
-- 
--         /** 
--          * Reads the connection description from a string.
--@@ -84,23 +84,23 @@
--          * @return <code>true</code> if the information was read correctly, 
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT bool fromString( std::string& data );
--+        bool fromString( std::string& data );
-- 
--         /** @name Data Access
--          *
--          * std::strings are not public because of DLL allocation issues.
--          */
--         //@{
---        EQ_EXPORT void setHostname( const std::string& hostname );
---        EQ_EXPORT const std::string& getHostname() const;
---        EQ_EXPORT void setLaunchCommand( const std::string& launchCommand );
---        EQ_EXPORT const std::string& getLaunchCommand() const;
---        EQ_EXPORT void setFilename( const std::string& filename );
---        EQ_EXPORT const std::string& getFilename() const;
--+        void setHostname( const std::string& hostname );
--+        const std::string& getHostname() const;
--+        void setLaunchCommand( const std::string& launchCommand );
--+        const std::string& getLaunchCommand() const;
--+        void setFilename( const std::string& filename );
--+        const std::string& getFilename() const;
--         //@}
-- 
--     protected:
---        EQ_EXPORT virtual ~ConnectionDescription() {}
--+        virtual ~ConnectionDescription() {}
-- 
--     private:
--         /** 
--Index: lib/net/connectionSet.h
--===================================================================
----- lib/net/connectionSet.h	(revision 3227)
--+++ lib/net/connectionSet.h	(working copy)
--@@ -41,7 +41,7 @@
--      *
--      * From the set, a connection with pending events can be selected.
--      */
---    class ConnectionSet : public ConnectionListener
--+    class EQ_EXPORT ConnectionSet : public ConnectionListener
--     {
--     public:
--         enum Event
--@@ -58,12 +58,12 @@
--             EVENT_ALL
--         };
-- 
---        EQ_EXPORT ConnectionSet();
---        EQ_EXPORT ~ConnectionSet();
--+        ConnectionSet();
--+        ~ConnectionSet();
-- 
---        EQ_EXPORT void addConnection( ConnectionPtr connection );
---        EQ_EXPORT bool removeConnection( ConnectionPtr connection );
---        EQ_EXPORT void clear();
--+        void addConnection( ConnectionPtr connection );
--+        bool removeConnection( ConnectionPtr connection );
--+        void clear();
--         size_t size()  const { return _connections.size(); }
--         bool   empty() const { return _connections.empty(); }
-- 
--@@ -79,12 +79,12 @@
--          *                indefinitly.
--          * @return The event occured during selection.
--          */
---        EQ_EXPORT Event select( const int timeout = -1 );
--+        Event select( const int timeout = -1 );
-- 
--         /**
--          * Interrupt the current or next select call.
--          */
---        EQ_EXPORT void interrupt();
--+        void interrupt();
-- 
--         int           getError()     { return _error; }
--         ConnectionPtr getConnection(){ return _connection; }
--Index: lib/net/dataIStream.h
--===================================================================
----- lib/net/dataIStream.h	(revision 3227)
--+++ lib/net/dataIStream.h	(working copy)
--@@ -33,7 +33,7 @@
--      *
--      * Derived classes send the data using command packets.
--      */
---    class DataIStream
--+    class EQ_EXPORT DataIStream
--     {
--     public:
--         DataIStream();
--@@ -60,16 +60,16 @@
--         }
-- 
--         /** Read a number of bytes into a buffer.  */
---        EQ_EXPORT void read( void* data, uint64_t size );
--+        void read( void* data, uint64_t size );
-- 
--         /** Get the pointer to the data remaining in the current buffer. */
---        EQ_EXPORT const void*    getRemainingBuffer();
--+        const void*    getRemainingBuffer();
-- 
--         /** Get the size of the data remaining in the current buffer. */
---        EQ_EXPORT uint64_t       getRemainingBufferSize();
--+        uint64_t       getRemainingBufferSize();
-- 
--         /** Advance the current buffer by a number of bytes. */
---        EQ_EXPORT void           advanceBuffer( const uint64_t offset ); 
--+        void           advanceBuffer( const uint64_t offset ); 
-- 
--         /** Get the number of remaining buffers. */
--         virtual size_t nRemainingBuffers() const = 0;
--Index: lib/net/dataOStream.h
--===================================================================
----- lib/net/dataOStream.h	(revision 3227)
--+++ lib/net/dataOStream.h	(working copy)
--@@ -35,7 +35,7 @@
--      *
--      * Derived classes send the data using command packets.
--      */
---    class DataOStream
--+    class EQ_EXPORT DataOStream
--     {
--     public:
--         DataOStream();
--@@ -94,8 +94,8 @@
--                 return *this;
--             }
-- 
---        EQ_EXPORT void write( const void* data, uint64_t size );
---        EQ_EXPORT void writeOnce( const void* data, uint64_t size );
--+        void write( const void* data, uint64_t size );
--+        void writeOnce( const void* data, uint64_t size );
--         //@}
-- 
--  
--Index: lib/net/dispatcher.h
--===================================================================
----- lib/net/dispatcher.h	(revision 3227)
--+++ lib/net/dispatcher.h	(working copy)
--@@ -40,12 +40,12 @@
--      * Provides packet dispatch through a command queue and command handler
--      * table. Returns the result of the invoked command handlers.
--      */
---    class Dispatcher
--+    class EQ_EXPORT Dispatcher
--     {
--     public:
---        EQ_EXPORT Dispatcher();
---		EQ_EXPORT Dispatcher( const Dispatcher& from );
---        EQ_EXPORT virtual ~Dispatcher();
--+        Dispatcher();
--+		Dispatcher( const Dispatcher& from );
--+        virtual ~Dispatcher();
-- 
--         /** NOP assignment operator. */
--         const Dispatcher& operator = ( const Dispatcher& ) { return *this; }
--@@ -58,7 +58,7 @@
--          *         be dispatched again later)
--          * @sa registerCommand
--          */
---        EQ_EXPORT virtual bool dispatchCommand( Command& command );
--+        virtual bool dispatchCommand( Command& command );
-- 
--         /** 
--          * Handles a received command packet for this object by calling the
--@@ -68,7 +68,7 @@
--          * @return the result of the operation.
--          * @sa registerCommand
--          */
---        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
--+        virtual CommandResult invokeCommand( Command& command );
--  
--     protected:
--         /** 
--@@ -97,7 +97,7 @@
--         CommandResult _cmdUnknown( Command& command );
-- 
--     private:
---        EQ_EXPORT void _registerCommand( const uint32_t command, 
--+        void _registerCommand( const uint32_t command, 
--                                          const CommandFunc< Dispatcher >& func,
--                                          CommandQueue* destinationQueue );
-- 
--Index: lib/net/node.cpp
--===================================================================
----- lib/net/node.cpp	(revision 3227)
--+++ lib/net/node.cpp	(working copy)
--@@ -666,13 +666,6 @@
--     return true;
-- }
-- 
---NodePtr Node::createNode( const uint32_t type )
---{
---    EQASSERTINFO( type == TYPE_EQNET_NODE, type );
---    return new Node();
---}
---
---
-- void Node::acquireSendToken( NodePtr node )
-- {
--     NodeAcquireSendTokenPacket packet;
--Index: lib/net/node.h
--===================================================================
----- lib/net/node.h	(revision 3227)
--+++ lib/net/node.h	(working copy)
--@@ -54,7 +54,7 @@
--      * has at least one Connection through which is reachable. A Node provides
--      * the basic communication facilities through message passing.
--      */
---    class Node : public Dispatcher, public base::Referenced
--+    class EQ_EXPORT Node : public Dispatcher, public base::Referenced
--     {
--     public:
--         enum State 
--@@ -68,7 +68,7 @@
--         /** 
--          * Constructs a new Node.
--          */
---        EQ_EXPORT Node();
--+        Node();
-- 
--         /** @name Data Access. */
--         //@{
--@@ -90,14 +90,14 @@
--          * 
--          * @param name the program name to start this node.
--          */
---        EQ_EXPORT void setProgramName( const std::string& name );
--+        void setProgramName( const std::string& name );
-- 
--         /** 
--          * Set the working directory to start this node.
--          * 
--          * @param name the working directory to start this node.
--          */
---        EQ_EXPORT void setWorkDir( const std::string& name );
--+        void setWorkDir( const std::string& name );
--         //@}
-- 
--         /**
--@@ -119,7 +119,7 @@
--          * @return <code>true</code> if the client was successfully initialized,
--          *         <code>false</code> otherwise.
--          */
---        EQ_EXPORT virtual bool initLocal( const int argc, char** argv );
--+        virtual bool initLocal( const int argc, char** argv );
-- 
--         /** Exit a local, listening node. */
--         virtual bool exitLocal() { return stopListening(); }
--@@ -139,7 +139,7 @@
--          *         <code>false</code> if not.
--          * @sa connect
--          */
---        EQ_EXPORT virtual bool listen();
--+        virtual bool listen();
-- 
--         /** 
--          * Stops this node.
--@@ -150,7 +150,7 @@
--          * @return <code>true</code> if the node was stopped, <code>false</code>
--          *         if it was not stopped.
--          */
---        EQ_EXPORT virtual bool stopListening();
--+        virtual bool stopListening();
-- 
--         /** 
--          * Connects a node to this listening node.
--@@ -182,7 +182,7 @@
--          *         <code>false</code> otherwise.
--          * @sa initConnect, syncConnect
--          */
---        EQ_EXPORT bool connect( NodePtr node );
--+        bool connect( NodePtr node );
-- 
--         /** 
--          * Start connecting and potentially launching a node using the
--@@ -196,7 +196,7 @@
--          *         <code>false</code> otherwise.
--          * @sa syncConnect
--          */
---        EQ_EXPORT bool initConnect( NodePtr node );
--+        bool initConnect( NodePtr node );
-- 
--         /** 
--          * Synchronize the connection initiated by initConnect().
--@@ -209,7 +209,7 @@
--          *         <code>false</code> otherwise.
--          * @sa initConnect
--          */
---        EQ_EXPORT bool syncConnect( NodePtr node );
--+        bool syncConnect( NodePtr node );
-- 
--         /** 
--          * Create and connect a node given by an identifier.
--@@ -227,7 +227,7 @@
--          * @return <code>true</code> if the node was disconnected correctly,
--          *         <code>false</code> otherwise.
--          */
---        EQ_EXPORT bool disconnect( NodePtr node );
--+        bool disconnect( NodePtr node );
-- 
--         /** 
--          * Ensures the connectivity of this node.
--@@ -262,7 +262,7 @@
--          * 
--          * @param cd the connection description.
--          */
---        EQ_EXPORT void addConnectionDescription( ConnectionDescriptionPtr cd );
--+        void addConnectionDescription( ConnectionDescriptionPtr cd );
--         
--         /** 
--          * Removes a connection description.
--@@ -276,7 +276,7 @@
--          * 
--          * @return the number of stored connection descriptions. 
--          */
---        EQ_EXPORT const ConnectionDescriptionVector& getConnectionDescriptions()
--+        const ConnectionDescriptionVector& getConnectionDescriptions()
--                             const;
--         /** 
--          * Returns the connection to this node.
--@@ -398,7 +398,7 @@
--          * @return <code>true</code> if the session was mapped,
--          *         <code>false</code> if not.
--          */
---        EQ_EXPORT bool registerSession( Session* session );
--+        bool registerSession( Session* session );
-- 
--         /** Deregister a (master) session. */
--         bool deregisterSession( Session* session )
--@@ -426,7 +426,7 @@
--          * @return <code>true</code> if the session was unmapped,
--          *         <code>false</code> if there was an error.
--          */
---        EQ_EXPORT bool unmapSession( Session* session );
--+        bool unmapSession( Session* session );
-- 
--         /** @return the mapped session with the given identifier, or 0. */
--         Session* getSession( const uint32_t id );
--@@ -440,7 +440,7 @@
--          * @param clientArgs the client arguments as specified by the server.
--          * @return the success value of the run.
--          */
---        EQ_EXPORT virtual bool runClient( const std::string& clientArgs );
--+        virtual bool runClient( const std::string& clientArgs );
-- 
--         /** Return the command queue to the command thread. */
--         CommandQueue* getCommandThreadQueue() 
--@@ -456,13 +456,13 @@
--         const NodeID& getNodeID() const { return _id; }
-- 
--         /** Serialize the node's information. */
---        EQ_EXPORT std::string serialize() const;
--+        std::string serialize() const;
--         /** Deserialize the node information, consumes given data. */
---        EQ_EXPORT bool deserialize( std::string& data );
--+        bool deserialize( std::string& data );
-- 
--     protected:
--         /** Destructs this node. */
---        EQ_EXPORT virtual ~Node();
--+        virtual ~Node();
-- 
--         /** 
--          * Dispatches a packet to the registered command queue.
--@@ -471,7 +471,7 @@
--          * @return the result of the operation.
--          * @sa invokeCommand
--          */
---        EQ_EXPORT virtual bool dispatchCommand( Command& command );
--+        virtual bool dispatchCommand( Command& command );
-- 
--         /** 
--          * Invokes the command handler method for the packet.
--@@ -480,7 +480,7 @@
--          * @return the result of the operation.
--          * @sa Dispatcher::invokeCommand
--          */
---        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
--+        virtual CommandResult invokeCommand( Command& command );
-- 
--         /** 
--          * The main loop for auto-launched clients. 
--@@ -499,7 +499,11 @@
--          * @return the node.
--          * @sa getType()
--          */
---        EQ_EXPORT virtual NodePtr createNode( const uint32_t type );
--+        virtual NodePtr createNode( const uint32_t type )
--+		{
--+			EQASSERTINFO( type == TYPE_EQNET_NODE, type );
--+			return new Node();
--+		}
-- 
--         /** Registers request packets waiting for a return value. */
--         base::RequestHandler _requestHandler;
--@@ -592,7 +596,7 @@
--         bool _hasSendToken;
-- 
--         bool _connectSelf();
---        EQ_EXPORT void _addConnection( ConnectionPtr connection );
--+        void _addConnection( ConnectionPtr connection );
--         void _removeConnection( ConnectionPtr connection );
--         void _cleanup();
-- 
--Index: lib/net/objectDataIStream.h
--===================================================================
----- lib/net/objectDataIStream.h	(revision 3227)
--+++ lib/net/objectDataIStream.h	(working copy)
--@@ -33,7 +33,7 @@
--     /**
--      * The DataIStream for object data.
--      */
---    class ObjectDataIStream : public DataIStream
--+    class EQ_EXPORT ObjectDataIStream : public DataIStream
--     {
--     public:
--         ObjectDataIStream();
--Index: lib/net/objectDataOStream.h
--===================================================================
----- lib/net/objectDataOStream.h	(revision 3227)
--+++ lib/net/objectDataOStream.h	(working copy)
--@@ -30,7 +30,7 @@
--     /**
--      * The DataOStream for object data.
--      */
---    class ObjectDataOStream : public DataOStream
--+    class EQ_EXPORT ObjectDataOStream : public DataOStream
--     {
--     public:
--         ObjectDataOStream( const Object* object )
--Index: lib/net/objectDeltaDataIStream.h
--===================================================================
----- lib/net/objectDeltaDataIStream.h	(revision 3227)
--+++ lib/net/objectDeltaDataIStream.h	(working copy)
--@@ -29,7 +29,7 @@
--     /**
--      * The DataIStream for object delta version data.
--      */
---    class ObjectDeltaDataIStream : public ObjectDataIStream
--+    class EQ_EXPORT ObjectDeltaDataIStream : public ObjectDataIStream
--     {
--     public:
--         ObjectDeltaDataIStream();
--Index: lib/net/objectDeltaDataOStream.h
--===================================================================
----- lib/net/objectDeltaDataOStream.h	(revision 3227)
--+++ lib/net/objectDeltaDataOStream.h	(working copy)
--@@ -29,7 +29,7 @@
--     /**
--      * The DataOStream for object delta version data.
--      */
---    class ObjectDeltaDataOStream : public ObjectDataOStream
--+    class EQ_EXPORT ObjectDeltaDataOStream : public ObjectDataOStream
--     {
--     public:
--         ObjectDeltaDataOStream( const Object* object );
--Index: lib/net/objectInstanceDataIStream.h
--===================================================================
----- lib/net/objectInstanceDataIStream.h	(revision 3227)
--+++ lib/net/objectInstanceDataIStream.h	(working copy)
--@@ -31,7 +31,7 @@
--     /**
--      * The DataIStream for object instance data.
--      */
---    class ObjectInstanceDataIStream : public ObjectDataIStream
--+    class EQ_EXPORT ObjectInstanceDataIStream : public ObjectDataIStream
--     {
--     public:
--         ObjectInstanceDataIStream();
--Index: lib/net/objectInstanceDataOStream.h
--===================================================================
----- lib/net/objectInstanceDataOStream.h	(revision 3227)
--+++ lib/net/objectInstanceDataOStream.h	(working copy)
--@@ -29,7 +29,7 @@
--     /**
--      * The DataOStream for object instance data.
--      */
---    class ObjectInstanceDataOStream : public ObjectDataOStream
--+    class EQ_EXPORT ObjectInstanceDataOStream : public ObjectDataOStream
--     {
--     public:
--         ObjectInstanceDataOStream( const Object* object );
--Index: lib/net/pairConnection.h
--===================================================================
----- lib/net/pairConnection.h	(revision 3227)
--+++ lib/net/pairConnection.h	(working copy)
--@@ -28,22 +28,22 @@
--      * A meta connection consisting of two (unidirectional) connections
--      * providing bidirectional communication.
--      */
---    class PairConnection : public Connection
--+    class EQ_EXPORT PairConnection : public Connection
--     {
--     public:
---        EQ_EXPORT PairConnection( ConnectionPtr readConnection,
--+        PairConnection( ConnectionPtr readConnection,
--                                   ConnectionPtr writeConnection );
-- 
---        EQ_EXPORT ConnectionPtr getSibling();
--+        ConnectionPtr getSibling();
-- 
---        EQ_EXPORT virtual bool connect();
---        EQ_EXPORT virtual void close();
--+        virtual bool connect();
--+        virtual void close();
-- 
--         virtual Notifier getNotifier() const
--             { return _readConnection->getNotifier(); }
-- 
--     protected:
---        EQ_EXPORT virtual ~PairConnection();
--+        virtual ~PairConnection();
-- 
--         virtual void readNB( void* buffer, const uint64_t bytes )
--             { _readConnection->readNB( buffer, bytes ); }
--Index: lib/net/pipeConnection.h
--===================================================================
----- lib/net/pipeConnection.h	(revision 3227)
--+++ lib/net/pipeConnection.h	(working copy)
--@@ -37,7 +37,7 @@
--      * therefore only be used between related threads. A PairConnection can be
--      * used to create a bi-directional communication using two pipe connections.
--      */
---    class PipeConnection 
--+    class EQ_EXPORT PipeConnection 
-- #ifdef WIN32
--         : public Connection
-- #else
--@@ -46,9 +46,9 @@
--     {
--     public:
--         /** Construct a new pipe connection. */
---        EQ_EXPORT PipeConnection();
--+        PipeConnection();
--         /** Destruct this pipe connection. */
---        EQ_EXPORT virtual ~PipeConnection();
--+        virtual ~PipeConnection();
-- 
--         virtual bool connect();
--         virtual void close();
--Index: lib/net/session.h
--===================================================================
----- lib/net/session.h	(revision 3227)
--+++ lib/net/session.h	(working copy)
--@@ -40,14 +40,14 @@
--      * A received SessionPacket is dispatched to the locally-mapped session of
--      * the same identifier.
--      */
---    class Session : public Dispatcher
--+    class EQ_EXPORT Session : public Dispatcher
--     {
--     public:
--         /** Construct a new session. */
---        EQ_EXPORT Session();
--+        Session();
-- 
--         /** Destruct this session. */
---        EQ_EXPORT virtual ~Session();
--+        virtual ~Session();
-- 
--         /** @name Data Access */
--         //@{
--@@ -64,7 +64,7 @@
--          * @return the queue to the command thread of the local node, or 0 if
--          *         the session is not mapped.
--          */
---        EQ_EXPORT CommandQueue* getCommandThreadQueue();
--+        CommandQueue* getCommandThreadQueue();
-- 
--         /** @return the server hosting this session, or 0 if the session is not
--          *          mapped.. */
--@@ -85,7 +85,7 @@
--          * @return true if the command was dispatched, false otherwise.
--          * @sa Dispatcher::dispatchCommand
--          */
---        EQ_EXPORT virtual bool dispatchCommand( Command& packet );
--+        virtual bool dispatchCommand( Command& packet );
-- 
--         /** 
--          * Invokes the registered handler method for a command packet.
--@@ -96,7 +96,7 @@
--          * @param packet the command packet.  @return the result of
--          * the operation.  @sa Dispatcher::invokeCommand
--          */
---        EQ_EXPORT virtual CommandResult invokeCommand( Command& packet );
--+        virtual CommandResult invokeCommand( Command& packet );
--         //@}
-- 
-- 
--@@ -122,7 +122,7 @@
--          *         continous block of identifiers for the request is available.
--          * @sa base::IDPool
--          */
---        EQ_EXPORT uint32_t genIDs( const uint32_t range );
--+        uint32_t genIDs( const uint32_t range );
-- 
--         /** 
--          * Free a continous block of unique identifiers.
--@@ -133,7 +133,7 @@
--          * @param start the first identifier in the block.
--          * @param range the size of the block.
--          */
---        EQ_EXPORT void freeIDs( const uint32_t start, const uint32_t range );
--+        void freeIDs( const uint32_t start, const uint32_t range );
-- 
--         /** 
--          * Set the master node for a block of identifiers.
--@@ -150,7 +150,7 @@
--          * @param range the size of the block.
--          * @param master the master node for the block of identifiers.
--          */
---        EQ_EXPORT void setIDMaster( const uint32_t start, const uint32_t range, 
--+        void setIDMaster( const uint32_t start, const uint32_t range, 
--                           const NodeID& master );
-- 
--         /** 
--@@ -159,7 +159,7 @@
--          * @param start the first identifier of the block.
--          * @param range the size of the block.
--          */
---        EQ_EXPORT void unsetIDMaster( const uint32_t start, 
--+        void unsetIDMaster( const uint32_t start, 
--                                       const uint32_t range );
-- 
--         /** 
--@@ -169,7 +169,7 @@
--          * @return the master node, or Node::ZERO if no master node is
--          *         set for the identifier.
--          */
---        EQ_EXPORT const NodeID& getIDMaster( const uint32_t id );
--+        const NodeID& getIDMaster( const uint32_t id );
--         //@}
-- 
-- 
--@@ -189,14 +189,14 @@
--          * @param object the object instance.
--          * @return true if the object was registered, false otherwise.
--          */
---        EQ_EXPORT bool registerObject( Object* object );
--+        bool registerObject( Object* object );
-- 
--         /** 
--          * Deregister a distributed object.
--          *
--          * @param object the object instance.
--          */
---        EQ_EXPORT void deregisterObject( Object* object );
--+        void deregisterObject( Object* object );
-- 
--         /** 
--          * Map a distributed object.
--@@ -229,21 +229,21 @@
--          *         available.
--          * @sa registerObject
--          */
---        EQ_EXPORT bool mapObject( Object* object, const uint32_t id, 
--+        bool mapObject( Object* object, const uint32_t id, 
--                         const uint32_t version = Object::VERSION_OLDEST );
-- 
--         /** Start mapping a distributed object. */
---        EQ_EXPORT uint32_t mapObjectNB( Object* object, const uint32_t id, 
--+        uint32_t mapObjectNB( Object* object, const uint32_t id, 
--                               const uint32_t version = Object::VERSION_OLDEST );
--         /** Finalize the mapping of a distributed object. */
---        EQ_EXPORT bool mapObjectSync( const uint32_t requestID );
--+        bool mapObjectSync( const uint32_t requestID );
-- 
--         /** 
--          * Unmap a mapped object.
--          * 
--          * @param object the mapped object.
--          */
---        EQ_EXPORT void unmapObject( Object* object );
--+        void unmapObject( Object* object );
-- 
--         /** 
--          * Attach an object to an identifier.
--@@ -257,7 +257,7 @@
--          * @param instanceID the node-local instance identifier, or
--          *                   EQ_ID_INVALID if this method should generate one.
--          */
---        EQ_EXPORT void attachObject( Object* object, const uint32_t id, 
--+        void attachObject( Object* object, const uint32_t id, 
--                            const uint32_t instanceID );
-- 
--         /** 
--@@ -265,7 +265,7 @@
--          * 
--          * @param object the attached object.
--          */
---        EQ_EXPORT void detachObject( Object* object );
--+        void detachObject( Object* object );
--         //@}
-- 
-- 
--@@ -279,7 +279,7 @@
--          *
--          * @param node the node to which the session has been mapped.
--          */
---        EQ_EXPORT virtual void notifyMapped( NodePtr node );
--+        virtual void notifyMapped( NodePtr node );
--         //@}
-- 
--     protected:
--Index: server/channel.h
--===================================================================
----- server/channel.h	(revision 3227)
--+++ server/channel.h	(working copy)
--@@ -52,7 +52,7 @@
--     /**
--      * The channel.
--      */
---    class Channel : public net::Object
--+    class EQSERVER_EXPORT Channel : public net::Object
--     {
--     public:
--         enum State
--@@ -70,7 +70,7 @@
--         /** 
--          * Constructs a new Channel.
--          */
---        EQSERVER_EXPORT Channel();
--+        Channel();
-- 
--         /** 
--          * Constructs a new deep copy of a channel.
--@@ -92,8 +92,8 @@
--         Config* getConfig();
--         const Config* getConfig() const;
-- 
---        EQSERVER_EXPORT Node* getNode();
---        EQSERVER_EXPORT const Node* getNode() const;
--+        Node* getNode();
--+        const Node* getNode() const;
-- 
--         Pipe* getPipe();
--         const Pipe* getPipe() const;
--@@ -115,8 +115,8 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQSERVER_EXPORT VisitorResult accept( ChannelVisitor& visitor );
---        EQSERVER_EXPORT VisitorResult accept( ConstChannelVisitor& ) const;
--+        VisitorResult accept( ChannelVisitor& visitor );
--+        VisitorResult accept( ConstChannelVisitor& ) const;
-- 
--         /** Increase channel activition count. */
--         void activate();
--Index: server/compound.h
--===================================================================
----- server/compound.h	(revision 3227)
--+++ server/compound.h	(working copy)
--@@ -52,13 +52,13 @@
--     /**
--      * The compound.
--      */
---    class Compound
--+    class EQSERVER_EXPORT Compound
--     {
--     public:
--         /** 
--          * Constructs a new Compound.
--          */
---        EQSERVER_EXPORT Compound();
--+        Compound();
-- 
--         /**
--          * Constructs a new, deep copy of the passed compound
--@@ -114,7 +114,7 @@
--          * 
--          * @param child the child.
--          */
---        EQSERVER_EXPORT void addChild( Compound* child );
--+        void addChild( Compound* child );
-- 
--         /** 
--          * Removes a child from this compound.
--@@ -163,7 +163,7 @@
--          * 
--          * @param channel the channel.
--          */
---        EQSERVER_EXPORT void setChannel( Channel* channel );
--+        void setChannel( Channel* channel );
-- 
--         /** 
--          * Return the channel of this compound.
--@@ -173,8 +173,8 @@
--          *
--          * @return the channel of this compound.
--          */
---        EQSERVER_EXPORT Channel* getChannel();
---        EQSERVER_EXPORT const Channel* getChannel() const;
--+        Channel* getChannel();
--+        const Channel* getChannel() const;
-- 
--         Window* getWindow();
--         const Window* getWindow() const;
--@@ -186,7 +186,7 @@
--         Frustum& getFrustum() { return _frustum; }
-- 
--         /** Attach a load balancer to this compound. */
---        EQSERVER_EXPORT void addEqualizer( Equalizer* equalizer );
--+        void addEqualizer( Equalizer* equalizer );
-- 
--         /** Get the attached load balancers. */
--         const EqualizerVector& getEqualizers() const
--@@ -283,7 +283,7 @@
--          *
--          * @param frame the input frame.
--          */
---        EQSERVER_EXPORT void addInputFrame( Frame* frame );
--+        void addInputFrame( Frame* frame );
-- 
--         /** @return the vector of input frames. */
--         const FrameVector& getInputFrames() const {return _inputFrames; }
--@@ -293,7 +293,7 @@
--          *
--          * @param frame the output frame.
--          */
---        EQSERVER_EXPORT void addOutputFrame( Frame* frame );
--+        void addOutputFrame( Frame* frame );
-- 
--         /** @return the vector of output frames. */
--         const FrameVector& getOutputFrames() const { return _outputFrames; }
--@@ -348,7 +348,7 @@
--          * 
--          * @param wall the wall description.
--          */
---        EQSERVER_EXPORT void setWall( const eq::Wall& wall );
--+        void setWall( const eq::Wall& wall );
--         
--         /** @return the last specified wall description. */
--         const eq::Wall& getWall() const { return _frustum.getWall(); }
--@@ -358,7 +358,7 @@
--          * 
--          * @param projection the projection description.
--          */
---        EQSERVER_EXPORT void setProjection( const eq::Projection& projection );
--+        void setProjection( const eq::Projection& projection );
-- 
--         /** @return the last specified projection description. */
--         const eq::Projection& getProjection() const 
--@@ -404,10 +404,10 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQSERVER_EXPORT VisitorResult accept( ConstCompoundVisitor& visitor )
--+        VisitorResult accept( ConstCompoundVisitor& visitor )
--                                           const;
--         /** Non-const version of accept(). */
---        EQSERVER_EXPORT VisitorResult accept( CompoundVisitor& visitor );
--+        VisitorResult accept( CompoundVisitor& visitor );
-- 
-- 
--         /** Activate the compound tree. */
--Index: server/server.h
--===================================================================
----- server/server.h	(revision 3227)
--+++ server/server.h	(working copy)
--@@ -46,13 +46,13 @@
--     /**
--      * The Equalizer server.
--      */
---    class Server : public net::Node
--+    class EQSERVER_EXPORT Server : public net::Node
--     {
--     public:
--         /** 
--          * Constructs a new Server.
--          */
---        EQSERVER_EXPORT Server();
--+        Server();
-- 
--         /** 
--          * Runs the server.
--@@ -60,7 +60,7 @@
--          * @return <code>true</code> if the server did run successfully,
--          *         <code>false</code> if not.
--          */
---        EQSERVER_EXPORT bool run();
--+        bool run();
-- 
--         void registerConfig( Config* config );
--         
--@@ -69,7 +69,7 @@
--          * 
--          * @param config the config.
--          */
---        EQSERVER_EXPORT void addConfig( Config* config );
--+        void addConfig( Config* config );
-- 
--         /** 
--          * Remove a config from this config.
--@@ -93,8 +93,8 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQSERVER_EXPORT VisitorResult accept( ServerVisitor& visitor );
---        EQSERVER_EXPORT VisitorResult accept( ConstServerVisitor& ) const;
--+        VisitorResult accept( ServerVisitor& visitor );
--+        VisitorResult accept( ConstServerVisitor& ) const;
-- 
--     protected:
--         virtual ~Server();
--Index: server/window.h
--===================================================================
----- server/window.h	(revision 3227)
--+++ server/window.h	(working copy)
--@@ -48,7 +48,7 @@
--     /**
--      * The window.
--      */
---    class Window : public net::Object
--+    class EQSERVER_EXPORT Window : public net::Object
--     {
--     public:
--         enum State
--@@ -66,7 +66,7 @@
--         /** 
--          * Constructs a new Window.
--          */
---        EQSERVER_EXPORT Window();
--+        Window();
-- 
--         /** 
--          * Constructs a new deep copy of a window.
--@@ -82,7 +82,7 @@
--          * 
--          * @param channel the channel.
--          */
---        EQSERVER_EXPORT void addChannel( Channel* channel );
--+        void addChannel( Channel* channel );
-- 
--         /** 
--          * Insert a new channel after the given channel.
--@@ -133,8 +133,8 @@
--          * @param visitor the visitor.
--          * @return the result of the visitor traversal.
--          */
---        EQSERVER_EXPORT VisitorResult accept( WindowVisitor& visitor );
---        EQSERVER_EXPORT VisitorResult accept( ConstWindowVisitor& ) const;
--+        VisitorResult accept( WindowVisitor& visitor );
--+        VisitorResult accept( ConstWindowVisitor& ) const;
-- 
--         /** Increase window activition count. */
--         void activate();
--@@ -159,7 +159,7 @@
--          * 
--          * @param pvp the viewport in pixels.
--          */
---        EQSERVER_EXPORT void setPixelViewport( const eq::PixelViewport& pvp );
--+        void setPixelViewport( const eq::PixelViewport& pvp );
-- 
--         /** 
--          * Return this window's pixel viewport.
--Index: VS2005/accept.vcproj
--===================================================================
----- VS2005/accept.vcproj	(revision 3227)
--+++ VS2005/accept.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/affinityCheck.vcproj
--===================================================================
----- VS2005/affinityCheck.vcproj	(revision 3227)
--+++ VS2005/affinityCheck.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/base/refPtr.vcproj
--===================================================================
----- VS2005/base/refPtr.vcproj	(revision 3227)
--+++ VS2005/base/refPtr.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/compositor.vcproj
--===================================================================
----- VS2005/compositor.vcproj	(revision 3227)
--+++ VS2005/compositor.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/ConfigTool.vcproj
--===================================================================
----- VS2005/ConfigTool.vcproj	(revision 3227)
--+++ VS2005/ConfigTool.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -130,7 +130,7 @@
-- 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -207,7 +207,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -287,7 +287,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/copyBuild.bat
--===================================================================
----- VS2005/copyBuild.bat	(revision 3227)
--+++ VS2005/copyBuild.bat	(working copy)
--@@ -1,5 +1,5 @@
-- 
---set base_dir=c:\<ChangeMe>
--+set base_dir="D:\DEV\C++\RTTSOFTWARE_1_0\trunk"
-- 
-- set inc_dir=%base_dir%\include
-- set bin_dir=%base_dir%\bin
--@@ -34,5 +34,8 @@
-- copy ..\build\VS2005\x64\Release\*.dll %dll_dir%\x64\Release
-- copy ..\build\VS2005\x64\Release\*.lib %lib_dir%\x64\Release
-- 
--+copy ..\server\*.h %inc_dir%\eq\server
--+copy ..\server\equalizers\*.h %inc_dir%\eq\server\equalizers
--+
-- "%ProgramFiles%\TortoiseSVN\bin\SubWCRev.exe" .. > %inc_dir%\eq\Version.txt
-- pause
--Index: VS2005/eqHello.vcproj
--===================================================================
----- VS2005/eqHello.vcproj	(revision 3227)
--+++ VS2005/eqHello.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/eqPly Example.vcproj
--===================================================================
----- VS2005/eqPly Example.vcproj	(revision 3227)
--+++ VS2005/eqPly Example.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/Equalizer Server Library.vcproj
--===================================================================
----- VS2005/Equalizer Server Library.vcproj	(revision 3227)
--+++ VS2005/Equalizer Server Library.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="2"
--@@ -133,7 +133,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="2"
--@@ -213,7 +213,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="2"
--@@ -298,7 +298,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="2"
--Index: VS2005/Equalizer Server.vcproj
--===================================================================
----- VS2005/Equalizer Server.vcproj	(revision 3227)
--+++ VS2005/Equalizer Server.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/Equalizer.vcproj
--===================================================================
----- VS2005/Equalizer.vcproj	(revision 3227)
--+++ VS2005/Equalizer.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				OpenMP="true"
-- 				UsePrecompiledHeader="0"
--@@ -134,7 +134,7 @@
-- 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				OpenMP="true"
-- 				UsePrecompiledHeader="0"
--@@ -217,7 +217,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				OpenMP="true"
-- 				UsePrecompiledHeader="0"
--@@ -303,7 +303,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				OpenMP="true"
-- 				UsePrecompiledHeader="0"
--@@ -8763,6 +8763,46 @@
-- 			Filter="dll;lib"
-- 			>
-- 			<File
--+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
--+				>
--+				<FileConfiguration
--+					Name="Debug|Win32"
--+					ExcludedFromBuild="true"
--+					>
--+					<Tool
--+						Name="VCCustomBuildTool"
--+					/>
--+				</FileConfiguration>
--+				<FileConfiguration
--+					Name="Debug|x64"
--+					>
--+					<Tool
--+						Name="VCCustomBuildTool"
--+						Description="copying library (x64)"
--+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--+					/>
--+				</FileConfiguration>
--+				<FileConfiguration
--+					Name="Release|Win32"
--+					ExcludedFromBuild="true"
--+					>
--+					<Tool
--+						Name="VCCustomBuildTool"
--+					/>
--+				</FileConfiguration>
--+				<FileConfiguration
--+					Name="Release|x64"
--+					>
--+					<Tool
--+						Name="VCCustomBuildTool"
--+						Description="copying library (x64)"
--+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--+					/>
--+				</FileConfiguration>
--+			</File>
--+			<File
-- 				RelativePath="..\Windows\pthreads\lib\pthreadVC2.dll"
-- 				>
-- 				<FileConfiguration
--@@ -8809,7 +8849,7 @@
-- 				</FileConfiguration>
-- 			</File>
-- 			<File
---				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
--+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
-- 				>
-- 				<FileConfiguration
-- 					Name="Debug|Win32"
--@@ -8894,46 +8934,6 @@
-- 					/>
-- 				</FileConfiguration>
-- 			</File>
---			<File
---				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
---				>
---				<FileConfiguration
---					Name="Debug|Win32"
---					ExcludedFromBuild="true"
---					>
---					<Tool
---						Name="VCCustomBuildTool"
---					/>
---				</FileConfiguration>
---				<FileConfiguration
---					Name="Debug|x64"
---					>
---					<Tool
---						Name="VCCustomBuildTool"
---						Description="copying library (x64)"
---						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
---						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
---					/>
---				</FileConfiguration>
---				<FileConfiguration
---					Name="Release|Win32"
---					ExcludedFromBuild="true"
---					>
---					<Tool
---						Name="VCCustomBuildTool"
---					/>
---				</FileConfiguration>
---				<FileConfiguration
---					Name="Release|x64"
---					>
---					<Tool
---						Name="VCCustomBuildTool"
---						Description="copying library (x64)"
---						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
---						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
---					/>
---				</FileConfiguration>
---			</File>
-- 		</Filter>
-- 		<File
-- 			RelativePath="..\AUTHORS"
--Index: VS2005/eVolve.vcproj
--===================================================================
----- VS2005/eVolve.vcproj	(revision 3227)
--+++ VS2005/eVolve.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/frustumTest.vcproj
--===================================================================
----- VS2005/frustumTest.vcproj	(revision 3227)
--+++ VS2005/frustumTest.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/image.vcproj
--===================================================================
----- VS2005/image.vcproj	(revision 3227)
--+++ VS2005/image.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/netPerf.vcproj
--===================================================================
----- VS2005/netPerf.vcproj	(revision 3227)
--+++ VS2005/netPerf.vcproj	(working copy)
--@@ -1,7 +1,7 @@
-- <?xml version="1.0" encoding="Windows-1252"?>
-- <VisualStudioProject
-- 	ProjectType="Visual C++"
---	Version="8.00"
--+	Version="8,00"
-- 	Name="NetPerf"
-- 	ProjectGUID="{891B47F2-0A50-4D42-A724-95886FA1F149}"
-- 	RootNamespace="NetPerf"
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/netProxy.vcproj
--===================================================================
----- VS2005/netProxy.vcproj	(revision 3227)
--+++ VS2005/netProxy.vcproj	(working copy)
--@@ -1,7 +1,7 @@
-- <?xml version="1.0" encoding="Windows-1252"?>
-- <VisualStudioProject
-- 	ProjectType="Visual C++"
---	Version="8.00"
--+	Version="8,00"
-- 	Name="NetProxy"
-- 	ProjectGUID="{BA9D9327-A284-419A-B5E3-A2EBCD84165E}"
-- 	RootNamespace="NetProxy"
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/pipePerf.vcproj
--===================================================================
----- VS2005/pipePerf.vcproj	(revision 3227)
--+++ VS2005/pipePerf.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--Index: VS2005/pixelBench.vcproj
--===================================================================
----- VS2005/pixelBench.vcproj	(revision 3227)
--+++ VS2005/pixelBench.vcproj	(working copy)
--@@ -48,7 +48,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -132,7 +132,7 @@
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-- 				MinimalRebuild="true"
-- 				BasicRuntimeChecks="3"
---				RuntimeLibrary="3"
--+				RuntimeLibrary="1"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -211,7 +211,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
--@@ -293,7 +293,7 @@
-- 				Name="VCCLCompilerTool"
-- 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
---				RuntimeLibrary="2"
--+				RuntimeLibrary="0"
-- 				RuntimeTypeInfo="true"
-- 				UsePrecompiledHeader="0"
-- 				WarningLevel="1"
-+Index: patches/dllHeap.patch
-+===================================================================
-Index: lib/net/objectDeltaDataIStream.h
-===================================================================
---- lib/net/objectDeltaDataIStream.h	(revision 3280)
-+++ lib/net/objectDeltaDataIStream.h	(working copy)
-@@ -29,7 +29,7 @@
-     /**
-      * The DataIStream for object delta version data.
-      */
--    class ObjectDeltaDataIStream : public ObjectDataIStream
-+    class EQ_EXPORT ObjectDeltaDataIStream : public ObjectDataIStream
-     {
-     public:
-         ObjectDeltaDataIStream();
-Index: lib/net/objectDeltaDataOStream.h
-===================================================================
---- lib/net/objectDeltaDataOStream.h	(revision 3280)
-+++ lib/net/objectDeltaDataOStream.h	(working copy)
-@@ -29,7 +29,7 @@
-     /**
-      * The DataOStream for object delta version data.
-      */
--    class ObjectDeltaDataOStream : public ObjectDataOStream
-+    class EQ_EXPORT ObjectDeltaDataOStream : public ObjectDataOStream
-     {
-     public:
-         ObjectDeltaDataOStream( const Object* object );
-Index: lib/net/node.cpp
-===================================================================
---- lib/net/node.cpp	(revision 3280)
-+++ lib/net/node.cpp	(working copy)
-@@ -666,13 +666,6 @@
-     return true;
- }
- 
--NodePtr Node::createNode( const uint32_t type )
--{
--    EQASSERTINFO( type == TYPE_EQNET_NODE, type );
--    return new Node();
--}
--
--
- void Node::acquireSendToken( NodePtr node )
+Index: lib/base/clock.h
+===================================================================
+--- lib/base/clock.h	(revision 3295)
++++ lib/base/clock.h	(working copy)
+@@ -37,7 +37,7 @@
+ namespace base
  {
-     NodeAcquireSendTokenPacket packet;
-Index: lib/net/objectDataIStream.h
-===================================================================
---- lib/net/objectDataIStream.h	(revision 3280)
-+++ lib/net/objectDataIStream.h	(working copy)
-@@ -33,7 +33,7 @@
-     /**
-      * The DataIStream for object data.
-      */
--    class ObjectDataIStream : public DataIStream
-+    class EQ_EXPORT ObjectDataIStream : public DataIStream
+     /** A class for time measurements. */
+-    class Clock
++    class EQ_EXPORT Clock
      {
-     public:
-         ObjectDataIStream();
-Index: lib/net/objectDataOStream.h
-===================================================================
---- lib/net/objectDataOStream.h	(revision 3280)
-+++ lib/net/objectDataOStream.h	(working copy)
-@@ -30,7 +30,7 @@
-     /**
-      * The DataOStream for object data.
-      */
--    class ObjectDataOStream : public DataOStream
-+    class EQ_EXPORT ObjectDataOStream : public DataOStream
-     {
-     public:
-         ObjectDataOStream( const Object* object )
-Index: lib/net/dataOStream.h
-===================================================================
---- lib/net/dataOStream.h	(revision 3280)
-+++ lib/net/dataOStream.h	(working copy)
-@@ -35,7 +35,7 @@
-      *
-      * Derived classes send the data using the appropriate command packets.
-      */
--    class DataOStream
-+    class EQ_EXPORT DataOStream
-     {
-     public:
-         /** @name Internal */
-@@ -95,10 +95,10 @@
-             }
+     public :
+         /** Construct a new clock. */
+Index: lib/base/dso.h
+===================================================================
+--- lib/base/dso.h	(revision 3295)
++++ lib/base/dso.h	(working copy)
+@@ -30,11 +30,11 @@
+ {
  
-         /** Write a number of bytes from data into the stream. */
--        EQ_EXPORT void write( const void* data, uint64_t size );
-+        void write( const void* data, uint64_t size );
- 
-         /** Write one block of data into the stream and close it immediately. */
--        EQ_EXPORT void writeOnce( const void* data, uint64_t size );
-+        void writeOnce( const void* data, uint64_t size );
-         //@}
- 
-  
-Index: lib/net/pipeConnection.h
-===================================================================
---- lib/net/pipeConnection.h	(revision 3280)
-+++ lib/net/pipeConnection.h	(working copy)
-@@ -37,7 +37,7 @@
-      * therefore only be used between related threads. A PairConnection can be
-      * used to create a bi-directional communication using two pipe connections.
-      */
--    class PipeConnection 
-+    class EQ_EXPORT PipeConnection 
- #ifdef WIN32
-         : public Connection
- #else
-@@ -46,9 +46,9 @@
+     /** Helper to access dynamic shared objects (DSO) */
+-    class DSO : public NonCopyable
++    class EQ_EXPORT DSO : public NonCopyable
      {
      public:
-         /** Construct a new pipe connection. */
--        EQ_EXPORT PipeConnection();
-+        PipeConnection();
-         /** Destruct this pipe connection. */
--        EQ_EXPORT virtual ~PipeConnection();
-+        virtual ~PipeConnection();
+         /** Construct a new dynamic shared object. */
+-        EQ_EXPORT DSO() : _dso( 0 ) {}
++        DSO() : _dso( 0 ) {}
  
-         virtual bool connect();
-         virtual void close();
-Index: lib/net/barrier.h
-===================================================================
---- lib/net/barrier.h	(revision 3280)
-+++ lib/net/barrier.h	(working copy)
-@@ -77,7 +77,7 @@
-          * The implementation assumes that the master node instance also enters
-          * the barrier.
-          */
--        EQ_EXPORT void enter();
-+        void enter();
-         //@}
- 
-     protected:
-Index: lib/net/dispatcher.h
-===================================================================
---- lib/net/dispatcher.h	(revision 3280)
-+++ lib/net/dispatcher.h	(working copy)
-@@ -40,12 +40,12 @@
-      * Provides packet dispatch through a command queue and command handler
-      * table. Returns the result of the invoked command handlers.
-      */
--    class Dispatcher
-+    class EQ_EXPORT Dispatcher
-     {
-     public:
--        EQ_EXPORT Dispatcher();
--		EQ_EXPORT Dispatcher( const Dispatcher& from );
--        EQ_EXPORT virtual ~Dispatcher();
-+        Dispatcher();
-+		Dispatcher( const Dispatcher& from );
-+        virtual ~Dispatcher();
- 
-         /** NOP assignment operator. */
-         const Dispatcher& operator = ( const Dispatcher& ) { return *this; }
-@@ -58,7 +58,7 @@
-          *         be dispatched again later)
-          * @sa registerCommand
-          */
--        EQ_EXPORT virtual bool dispatchCommand( Command& command );
-+        virtual bool dispatchCommand( Command& command );
- 
          /** 
-          * Handles a received command packet for this object by calling the
-@@ -68,7 +68,7 @@
-          * @return the result of the operation.
-          * @sa registerCommand
+          * Open a dynamic shared object.
+@@ -42,14 +42,14 @@
+          * @param fileName The file name of the DSO.
+          * @return true if the DSO was opened, false upon error.
           */
--        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
-+        virtual CommandResult invokeCommand( Command& command );
-  
-     protected:
-         /** 
-@@ -97,7 +97,7 @@
-         CommandResult _cmdUnknown( Command& command );
+-        EQ_EXPORT bool open( const std::string& fileName );
++        bool open( const std::string& fileName );
  
+         /** Close the DSO, which invalidates retrieved function pointers */
+-        EQ_EXPORT void close();
++        void close();
+     
+         /** @return a function pointer in the DSO, or 0 if the function is not
+          *         exported by the DSO. */
+-        EQ_EXPORT void* getFunctionPointer( const std::string& functionName );
++        void* getFunctionPointer( const std::string& functionName );
+ 
      private:
--        EQ_EXPORT void _registerCommand( const uint32_t command, 
-+        void _registerCommand( const uint32_t command, 
-                                          const CommandFunc< Dispatcher >& func,
-                                          CommandQueue* destinationQueue );
+ #ifdef WIN32
+Index: lib/base/lock.h
+===================================================================
+--- lib/base/lock.h	(revision 3295)
++++ lib/base/lock.h	(working copy)
+@@ -28,21 +28,21 @@
+     class LockPrivate;
  
-Index: lib/net/commandCache.h
-===================================================================
---- lib/net/commandCache.h	(revision 3280)
-+++ lib/net/commandCache.h	(working copy)
-@@ -37,7 +37,7 @@
-      * Commands are retained and released whenever they are not directly
-      * processed, e.g., when pushed to another thread using a CommandQueue.
-      */
--    class CommandCache
-+    class EQ_EXPORT CommandCache
+     /** A lock (mutex) primitive. */
+-    class Lock : public NonCopyable
++    class EQ_EXPORT Lock : public NonCopyable
      {
      public:
-         CommandCache();
-Index: lib/net/pairConnection.h
-===================================================================
---- lib/net/pairConnection.h	(revision 3280)
-+++ lib/net/pairConnection.h	(working copy)
-@@ -28,22 +28,22 @@
-      * A meta connection consisting of two (unidirectional) connections
-      * providing bidirectional communication.
-      */
--    class PairConnection : public Connection
-+    class EQ_EXPORT PairConnection : public Connection
-     {
-     public:
--        EQ_EXPORT PairConnection( ConnectionPtr readConnection,
-+        PairConnection( ConnectionPtr readConnection,
-                                   ConnectionPtr writeConnection );
+         /** Construct a new lock. */
+-        EQ_EXPORT Lock();
++        Lock();
  
--        EQ_EXPORT ConnectionPtr getSibling();
-+        ConnectionPtr getSibling();
  
--        EQ_EXPORT virtual bool connect();
--        EQ_EXPORT virtual void close();
-+        virtual bool connect();
-+        virtual void close();
+         /** Destruct the lock. */
+-        EQ_EXPORT ~Lock();
++        ~Lock();
  
-         virtual Notifier getNotifier() const
-             { return _readConnection->getNotifier(); }
+         /** Acquire the lock. */
+-        EQ_EXPORT void set();
++        void set();
  
-     protected:
--        EQ_EXPORT virtual ~PairConnection();
-+        virtual ~PairConnection();
+         /** Release the lock. */
+-        EQ_EXPORT void unset();
++        void unset();
  
-         virtual void readNB( void* buffer, const uint64_t bytes )
-             { _readConnection->readNB( buffer, bytes ); }
-Index: lib/net/commandQueue.h
-===================================================================
---- lib/net/commandQueue.h	(revision 3280)
-+++ lib/net/commandQueue.h	(working copy)
-@@ -32,21 +32,21 @@
-     /**
-      * A CommandQueue is a thread-safe queue for command packets.
-      */
--    class CommandQueue : public base::NonCopyable
-+    class EQ_EXPORT CommandQueue : public base::NonCopyable
-     {
-     public:
--        EQ_EXPORT CommandQueue();
--        EQ_EXPORT virtual ~CommandQueue();
-+        CommandQueue();
-+        virtual ~CommandQueue();
- 
          /** 
-          * Push a command to the queue.
-          * 
-          * @param packet the command packet.
+          * Attempt to acquire the lock.
+@@ -50,7 +50,7 @@
+          * @return <code>true</code> if the lock was set, <code>false</code> if
+          *         it was not set.
           */
--        EQ_EXPORT virtual void push( Command& packet );
-+        virtual void push( Command& packet );
+-        EQ_EXPORT bool trySet();
++        bool trySet();
  
-         /** Push a command to the front of the queue. */
--        EQ_EXPORT virtual void pushFront( Command& packet );
-+        virtual void pushFront( Command& packet );
- 
-         /** Wake up the command queue, pop() will return 0. */
-         virtual void wakeup() { _commands.push( static_cast< Command* >( 0 )); }
-@@ -58,7 +58,7 @@
-          * 
-          * @return the next command in the queue.
-          */
--        EQ_EXPORT virtual Command* pop();
-+        virtual Command* pop();
- 
          /** 
-          * Try to pop a command from the queue.
-@@ -67,14 +67,14 @@
-          * 
-          * @return the next command in the queue, or 0 if no command is queued.
+          * Test if the lock is set.
+@@ -58,7 +58,7 @@
+          * @return <code>true</code> if the lock is set, <code>false</code> if
+          *         it is not set.
           */
--        EQ_EXPORT virtual Command* tryPop();
-+        virtual Command* tryPop();
+-        EQ_EXPORT bool test(); 
++        bool test(); 
  
-         /** 
-          * Peek the command at the end of the queue.
-          *
-          * @return the last command in the queue, or 0 if no command is queued.
-          */
--        EQ_EXPORT Command* back() const;
-+        Command* back() const;
- 
-         /** 
-          * @return <code>true</code> if the command queue is empty,
-Index: lib/net/bufferConnection.h
-===================================================================
---- lib/net/bufferConnection.h	(revision 3280)
-+++ lib/net/bufferConnection.h	(working copy)
-@@ -28,22 +28,22 @@
-     /**
-      * A proxy connection buffering outgoing data into a memory region.
-      */
--    class BufferConnection : public Connection
-+    class EQ_EXPORT BufferConnection : public Connection
-     {
-     public:
--        EQ_EXPORT BufferConnection();
--        EQ_EXPORT virtual ~BufferConnection();
-+        BufferConnection();
-+        virtual ~BufferConnection();
- 
--        EQ_EXPORT void sendBuffer( ConnectionPtr connection );
-+        void sendBuffer( ConnectionPtr connection );
- 
--        EQ_EXPORT uint64_t getSize() const { return _buffer.getSize(); }
-+        uint64_t getSize() const { return _buffer.getSize(); }
- 
-     protected:
-         virtual void readNB( void* buffer, const uint64_t bytes )
-             { EQDONTCALL; }
-         virtual int64_t readSync( void* buffer, const uint64_t bytes )
-             { EQDONTCALL; return -1; }
--        EQ_EXPORT virtual int64_t write( const void* buffer,
-+        virtual int64_t write( const void* buffer,
-                                          const uint64_t bytes );
- 
      private:
-Index: lib/net/connection.h
-===================================================================
---- lib/net/connection.h	(revision 3280)
-+++ lib/net/connection.h	(working copy)
-@@ -66,7 +66,7 @@
-      * The Connection is used reference-counted in eq::net, since it has
-      * multiple owners, such as the ConnectionSet and Node.
-      */
--    class Connection : public base::Referenced, public base::NonCopyable
-+    class EQ_EXPORT Connection : public base::Referenced, public base::NonCopyable
+         LockPrivate* _data;
+Index: lib/base/log.h
+===================================================================
+--- lib/base/log.h	(revision 3295)
++++ lib/base/log.h	(working copy)
+@@ -148,8 +148,8 @@
      {
      public:
-         enum State //! The current state of the Connection
-@@ -86,7 +86,7 @@
-          * @param description the connection parameters.
-          * @return the connection.
-          */
--        EQ_EXPORT static ConnectionPtr create( ConnectionDescriptionPtr 
-+        static ConnectionPtr create( ConnectionDescriptionPtr 
-                                                    description );
  
-         /** @name Data Access */
-@@ -108,10 +108,10 @@
-          * 
-          * @param description the connection parameters.
-          */
--        EQ_EXPORT void setDescription( ConnectionDescriptionPtr description );
-+        void setDescription( ConnectionDescriptionPtr description );
+-        Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
+-        virtual ~Log() { _logBuffer.pubsync(); }
++        EQ_EXPORT Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
++        EQ_EXPORT ~Log() { _logBuffer.pubsync(); }
  
-         /** @return the description for this connection. */
--        EQ_EXPORT ConnectionDescriptionPtr getDescription() const;
-+        ConnectionDescriptionPtr getDescription() const;
-         //@}
- 
- 
-@@ -190,7 +190,7 @@
-          * @param bytes the number of bytes to read.
-          * @sa recvSync()
-          */
--        EQ_EXPORT void recvNB( void* buffer, const uint64_t bytes );
-+        void recvNB( void* buffer, const uint64_t bytes );
- 
-         /** 
-          * Finish reading data from the connection.
-@@ -204,7 +204,7 @@
-          * @param bytes return value, the number of bytes read.
-          * @return true if all requested data has been read, false otherwise.
-          */
--        EQ_EXPORT bool recvSync( void** buffer, uint64_t* bytes );
-+        bool recvSync( void** buffer, uint64_t* bytes );
- 
-         void getRecvData( void** buffer, uint64_t* bytes )
-             { *buffer = _aioBuffer; *bytes = _aioBytes; }
-@@ -253,7 +253,7 @@
-          * @return true if all data has been read, false if not.
-          * @sa lockSend(), unlockSend()
-          */
--        EQ_EXPORT bool send( const void* buffer, const uint64_t bytes, 
-+        bool send( const void* buffer, const uint64_t bytes, 
-                              const bool isLocked = false );
- 
-         /** Lock the connection, no other thread can send data. */
-@@ -307,7 +307,7 @@
-          * @param size the data size in bytes.
-          * @return true if all data has been read, false if not.
-          */
--        EQ_EXPORT bool send( Packet& packet, const void* data,
-+        bool send( Packet& packet, const void* data,
-                              const uint64_t size );
- 
-         /** 
-Index: lib/net/connectionDescription.h
-===================================================================
---- lib/net/connectionDescription.h	(revision 3280)
-+++ lib/net/connectionDescription.h	(working copy)
-@@ -1,128 +1,128 @@
--
--/* Copyright (c) 2005-2009, Stefan Eilemann <eile@equalizergraphics.com> 
-- *
-- * This library is free software; you can redistribute it and/or modify it under
-- * the terms of the GNU Lesser General Public License version 2.1 as published
-- * by the Free Software Foundation.
-- *  
-- * This library is distributed in the hope that it will be useful, but WITHOUT
-- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-- * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
-- * details.
-- * 
-- * You should have received a copy of the GNU Lesser General Public License
-- * along with this library; if not, write to the Free Software Foundation, Inc.,
-- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-- */
--
--#ifndef EQNET_CONNECTIONDESCRIPTION_H
--#define EQNET_CONNECTIONDESCRIPTION_H
--
--#include <eq/net/connectionType.h>
--
--#include <eq/base/base.h>
--#include <eq/base/referenced.h>
--
--namespace eq
--{
--namespace net
--{
--    /**
--     * Describes Connection parameters.
--     *
--     * @sa Node
--     */
--    class ConnectionDescription : public base::Referenced
--    {
--    public:
--        ConnectionDescription() 
--                : type( CONNECTIONTYPE_TCPIP )
--                , bandwidth( 0 )
--                , launchTimeout( 10000 )
--                , launchCommandQuote( '\'' )
--            {
--                TCPIP.port = 0;
--            }
--
--        /** The network protocol for the connection. */
--        ConnectionType type;
--
--        /** The bandwidth in kilobyte per second for this connection. */
--        int32_t bandwidth;
--
--        /** 
--         * The amount of time in milliseconds to wait before a node is
--         * considered unreachable during start.
--         */
--        int32_t launchTimeout;
--
--        /** The individual parameters for the connection. */
--        union
--        {
--            /** TCP/IP parameters */
--            struct
--            {
--                /** The listening port. */
--                uint16_t port;
--
--            } TCPIP, SDP;
--        };
--
--        /** The character to quote the launch command arguments */
--        char launchCommandQuote;
--
--        /** @return this description as a string. */
--        EQ_EXPORT std::string toString() const;
--        EQ_EXPORT void serialize( std::ostream& os ) const;
--
--        /** 
--         * Reads the connection description from a string.
--         * 
--         * The string is consumed as the description is parsed.
--         *
--         * @param data the string containing the connection description.
--         * @return <code>true</code> if the information was read correctly, 
--         *         <code>false</code> if not.
--         */
--        EQ_EXPORT bool fromString( std::string& data );
--
--        /** @name Data Access
--         *
--         * std::strings are not public because of DLL allocation issues.
--         */
--        //@{
--        EQ_EXPORT void setHostname( const std::string& hostname );
--        EQ_EXPORT const std::string& getHostname() const;
--        EQ_EXPORT void setLaunchCommand( const std::string& launchCommand );
--        EQ_EXPORT const std::string& getLaunchCommand() const;
--        EQ_EXPORT void setFilename( const std::string& filename );
--        EQ_EXPORT const std::string& getFilename() const;
--        //@}
--
--    protected:
--        EQ_EXPORT virtual ~ConnectionDescription() {}
--
--    private:
--        /** 
--         * The command to spawn a new process on the node, e.g., 
--         * "ssh eile@node1".
--         * 
--         * %h - hostname
--         * %c - command
--         * %n - unique node identifier
--         */
--        std::string _launchCommand; 
--
--        /** The host name. */
--        std::string _hostname;
--
--        /** The name file using for a pipe. */
--        std::string _filename;
--    };
--
--    EQ_EXPORT std::ostream& operator << ( std::ostream&,
--                                          const ConnectionDescription* );
--}
--}
--
--#endif // EQNET_CONNECTION_DESCRIPTION_H
-+
-+/* Copyright (c) 2005-2009, Stefan Eilemann <eile@equalizergraphics.com> 
-+ *
-+ * This library is free software; you can redistribute it and/or modify it under
-+ * the terms of the GNU Lesser General Public License version 2.1 as published
-+ * by the Free Software Foundation.
-+ *  
-+ * This library is distributed in the hope that it will be useful, but WITHOUT
-+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
-+ * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
-+ * details.
-+ * 
-+ * You should have received a copy of the GNU Lesser General Public License
-+ * along with this library; if not, write to the Free Software Foundation, Inc.,
-+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-+ */
-+
-+#ifndef EQNET_CONNECTIONDESCRIPTION_H
-+#define EQNET_CONNECTIONDESCRIPTION_H
-+
-+#include <eq/net/connectionType.h>
-+
-+#include <eq/base/base.h>
-+#include <eq/base/referenced.h>
-+
-+namespace eq
-+{
-+namespace net
-+{
-+    /**
-+     * Describes Connection parameters.
-+     *
-+     * @sa Node
-+     */
-+    class EQ_EXPORT ConnectionDescription : public base::Referenced
-+    {
-+    public:
-+        ConnectionDescription() 
-+                : type( CONNECTIONTYPE_TCPIP )
-+                , bandwidth( 0 )
-+                , launchTimeout( 10000 )
-+                , launchCommandQuote( '\'' )
-+            {
-+                TCPIP.port = 0;
-+            }
-+
-+        /** The network protocol for the connection. */
-+        ConnectionType type;
-+
-+        /** The bandwidth in kilobyte per second for this connection. */
-+        int32_t bandwidth;
-+
-+        /** 
-+         * The amount of time in milliseconds to wait before a node is
-+         * considered unreachable during start.
-+         */
-+        int32_t launchTimeout;
-+
-+        /** The individual parameters for the connection. */
-+        union
-+        {
-+            /** TCP/IP parameters */
-+            struct
-+            {
-+                /** The listening port. */
-+                uint16_t port;
-+
-+            } TCPIP, SDP;
-+        };
-+
-+        /** The character to quote the launch command arguments */
-+        char launchCommandQuote;
-+
-+        /** @return this description as a string. */
-+        std::string toString() const;
-+        void serialize( std::ostream& os ) const;
-+
-+        /** 
-+         * Reads the connection description from a string.
-+         * 
-+         * The string is consumed as the description is parsed.
-+         *
-+         * @param data the string containing the connection description.
-+         * @return <code>true</code> if the information was read correctly, 
-+         *         <code>false</code> if not.
-+         */
-+        bool fromString( std::string& data );
-+
-+        /** @name Data Access
-+         *
-+         * std::strings are not public because of DLL allocation issues.
-+         */
-+        //@{
-+        void setHostname( const std::string& hostname );
-+        const std::string& getHostname() const;
-+        void setLaunchCommand( const std::string& launchCommand );
-+        const std::string& getLaunchCommand() const;
-+        void setFilename( const std::string& filename );
-+        const std::string& getFilename() const;
-+        //@}
-+
-+    protected:
-+        virtual ~ConnectionDescription() {}
-+
-+    private:
-+        /** 
-+         * The command to spawn a new process on the node, e.g., 
-+         * "ssh eile@node1".
-+         * 
-+         * %h - hostname
-+         * %c - command
-+         * %n - unique node identifier
-+         */
-+        std::string _launchCommand; 
-+
-+        /** The host name. */
-+        std::string _hostname;
-+
-+        /** The name file using for a pipe. */
-+        std::string _filename;
-+    };
-+
-+    EQ_EXPORT std::ostream& operator << ( std::ostream&,
-+                                          const ConnectionDescription* );
-+}
-+}
-+
-+#endif // EQNET_CONNECTION_DESCRIPTION_H
-Index: lib/net/objectInstanceDataIStream.h
-===================================================================
---- lib/net/objectInstanceDataIStream.h	(revision 3280)
-+++ lib/net/objectInstanceDataIStream.h	(working copy)
-@@ -31,7 +31,7 @@
-     /**
-      * The DataIStream for object instance data.
-      */
--    class ObjectInstanceDataIStream : public ObjectDataIStream
-+    class EQ_EXPORT ObjectInstanceDataIStream : public ObjectDataIStream
-     {
-     public:
-         ObjectInstanceDataIStream();
-Index: lib/net/connectionSet.h
-===================================================================
---- lib/net/connectionSet.h	(revision 3280)
-+++ lib/net/connectionSet.h	(working copy)
-@@ -41,7 +41,7 @@
-      *
-      * From the set, a connection with pending events can be selected.
-      */
--    class ConnectionSet : public ConnectionListener
-+    class EQ_EXPORT ConnectionSet : public ConnectionListener
-     {
-     public:
-         enum Event
-@@ -58,12 +58,12 @@
-             EVENT_ALL
-         };
- 
--        EQ_EXPORT ConnectionSet();
--        EQ_EXPORT ~ConnectionSet();
-+        ConnectionSet();
-+        ~ConnectionSet();
- 
--        EQ_EXPORT void addConnection( ConnectionPtr connection );
--        EQ_EXPORT bool removeConnection( ConnectionPtr connection );
--        EQ_EXPORT void clear();
-+        void addConnection( ConnectionPtr connection );
-+        bool removeConnection( ConnectionPtr connection );
-+        void clear();
-         size_t size()  const { return _connections.size(); }
-         bool   empty() const { return _connections.empty(); }
- 
-@@ -79,12 +79,12 @@
-          *                indefinitly.
-          * @return The event occured during selection.
-          */
--        EQ_EXPORT Event select( const int timeout = -1 );
-+        Event select( const int timeout = -1 );
- 
-         /**
-          * Interrupt the current or next select call.
-          */
--        EQ_EXPORT void interrupt();
-+        void interrupt();
- 
-         int           getError()     { return _error; }
-         ConnectionPtr getConnection(){ return _connection; }
-Index: lib/net/objectInstanceDataOStream.h
-===================================================================
---- lib/net/objectInstanceDataOStream.h	(revision 3280)
-+++ lib/net/objectInstanceDataOStream.h	(working copy)
-@@ -29,7 +29,7 @@
-     /**
-      * The DataOStream for object instance data.
-      */
--    class ObjectInstanceDataOStream : public ObjectDataOStream
-+    class EQ_EXPORT ObjectInstanceDataOStream : public ObjectDataOStream
-     {
-     public:
-         ObjectInstanceDataOStream( const Object* object );
-Index: lib/net/session.h
-===================================================================
---- lib/net/session.h	(revision 3280)
-+++ lib/net/session.h	(working copy)
-@@ -40,14 +40,14 @@
-      * A received SessionPacket is dispatched to the locally-mapped session of
-      * the same identifier.
-      */
--    class Session : public Dispatcher
-+    class EQ_EXPORT Session : public Dispatcher
-     {
-     public:
-         /** Construct a new session. */
--        EQ_EXPORT Session();
-+        Session();
- 
-         /** Destruct this session. */
--        EQ_EXPORT virtual ~Session();
-+        virtual ~Session();
- 
-         /** @name Data Access */
-         //@{
-@@ -64,7 +64,7 @@
-          * @return the queue to the command thread of the local node, or 0 if
-          *         the session is not mapped.
-          */
--        EQ_EXPORT CommandQueue* getCommandThreadQueue();
-+        CommandQueue* getCommandThreadQueue();
- 
-         /** @return the server hosting this session, or 0 if the session is not
-          *          mapped.. */
-@@ -85,7 +85,7 @@
-          * @return true if the command was dispatched, false otherwise.
-          * @sa Dispatcher::dispatchCommand
-          */
--        EQ_EXPORT virtual bool dispatchCommand( Command& packet );
-+        virtual bool dispatchCommand( Command& packet );
- 
-         /** 
-          * Invokes the registered handler method for a command packet.
-@@ -97,7 +97,7 @@
-          * @return the result of the operation.
-          * @sa Dispatcher::invokeCommand
-          */
--        EQ_EXPORT virtual CommandResult invokeCommand( Command& packet );
-+        virtual CommandResult invokeCommand( Command& packet );
-         //@}
- 
- 
-@@ -123,7 +123,7 @@
-          *         continous block of identifiers for the request is available.
-          * @sa base::IDPool
-          */
--        EQ_EXPORT uint32_t genIDs( const uint32_t range );
-+        uint32_t genIDs( const uint32_t range );
- 
-         /** 
-          * Free a continous block of unique identifiers.
-@@ -134,7 +134,7 @@
-          * @param start the first identifier in the block.
-          * @param range the size of the block.
-          */
--        EQ_EXPORT void freeIDs( const uint32_t start, const uint32_t range );
-+        void freeIDs( const uint32_t start, const uint32_t range );
- 
-         /** 
-          * Set the master node for a block of identifiers.
-@@ -151,7 +151,7 @@
-          * @param range the size of the block.
-          * @param master the master node for the block of identifiers.
-          */
--        EQ_EXPORT void setIDMaster( const uint32_t start, const uint32_t range, 
-+        void setIDMaster( const uint32_t start, const uint32_t range, 
-                           const NodeID& master );
- 
-         /** 
-@@ -160,7 +160,7 @@
-          * @param start the first identifier of the block.
-          * @param range the size of the block.
-          */
--        EQ_EXPORT void unsetIDMaster( const uint32_t start, 
-+        void unsetIDMaster( const uint32_t start, 
-                                       const uint32_t range );
- 
-         /** 
-@@ -170,7 +170,7 @@
-          * @return the master node, or Node::ZERO if no master node is
-          *         set for the identifier.
-          */
--        EQ_EXPORT const NodeID& getIDMaster( const uint32_t id );
-+        const NodeID& getIDMaster( const uint32_t id );
-         //@}
- 
- 
-@@ -190,14 +190,14 @@
-          * @param object the object instance.
-          * @return true if the object was registered, false otherwise.
-          */
--        EQ_EXPORT bool registerObject( Object* object );
-+        bool registerObject( Object* object );
- 
-         /** 
-          * Deregister a distributed object.
-          *
-          * @param object the object instance.
-          */
--        EQ_EXPORT void deregisterObject( Object* object );
-+        void deregisterObject( Object* object );
- 
-         /** 
-          * Map a distributed object.
-@@ -230,21 +230,21 @@
-          *         available.
-          * @sa registerObject
-          */
--        EQ_EXPORT bool mapObject( Object* object, const uint32_t id, 
-+        bool mapObject( Object* object, const uint32_t id, 
-                         const uint32_t version = Object::VERSION_OLDEST );
- 
-         /** Start mapping a distributed object. */
--        EQ_EXPORT uint32_t mapObjectNB( Object* object, const uint32_t id, 
-+        uint32_t mapObjectNB( Object* object, const uint32_t id, 
-                               const uint32_t version = Object::VERSION_OLDEST );
-         /** Finalize the mapping of a distributed object. */
--        EQ_EXPORT bool mapObjectSync( const uint32_t requestID );
-+        bool mapObjectSync( const uint32_t requestID );
- 
-         /** 
-          * Unmap a mapped object.
-          * 
-          * @param object the mapped object.
-          */
--        EQ_EXPORT void unmapObject( Object* object );
-+        void unmapObject( Object* object );
- 
-         /** 
-          * Attach an object to an identifier.
-@@ -258,7 +258,7 @@
-          * @param instanceID the node-local instance identifier, or
-          *                   EQ_ID_INVALID if this method should generate one.
-          */
--        EQ_EXPORT void attachObject( Object* object, const uint32_t id, 
-+        void attachObject( Object* object, const uint32_t id, 
-                            const uint32_t instanceID );
- 
-         /** 
-@@ -266,7 +266,7 @@
-          * 
-          * @param object the attached object.
-          */
--        EQ_EXPORT void detachObject( Object* object );
-+        void detachObject( Object* object );
-         //@}
- 
- 
-@@ -280,7 +280,7 @@
-          *
-          * @param node the node to which the session has been mapped.
-          */
--        EQ_EXPORT virtual void notifyMapped( NodePtr node );
-+        virtual void notifyMapped( NodePtr node );
-         //@}
- 
-     protected:
-Index: lib/net/node.h
-===================================================================
---- lib/net/node.h	(revision 3280)
-+++ lib/net/node.h	(working copy)
-@@ -54,7 +54,7 @@
-      * has at least one Connection through which is reachable. A Node provides
-      * the basic communication facilities through message passing.
-      */
--    class Node : public Dispatcher, public base::Referenced
-+    class EQ_EXPORT Node : public Dispatcher, public base::Referenced
-     {
-     public:
-         enum State 
-@@ -68,7 +68,7 @@
-         /** 
-          * Constructs a new Node.
-          */
--        EQ_EXPORT Node();
-+        Node();
- 
-         /** @name Data Access. */
-         //@{
-@@ -90,14 +90,14 @@
-          * 
-          * @param name the program name to start this node.
-          */
--        EQ_EXPORT void setProgramName( const std::string& name );
-+        void setProgramName( const std::string& name );
- 
-         /** 
-          * Set the working directory to start this node.
-          * 
-          * @param name the working directory to start this node.
-          */
--        EQ_EXPORT void setWorkDir( const std::string& name );
-+        void setWorkDir( const std::string& name );
-         //@}
- 
-         /**
-@@ -119,7 +119,7 @@
-          * @return <code>true</code> if the client was successfully initialized,
-          *         <code>false</code> otherwise.
-          */
--        EQ_EXPORT virtual bool initLocal( const int argc, char** argv );
-+        virtual bool initLocal( const int argc, char** argv );
- 
-         /** Exit a local, listening node. */
-         virtual bool exitLocal() { return stopListening(); }
-@@ -139,7 +139,7 @@
-          *         <code>false</code> if not.
-          * @sa connect
-          */
--        EQ_EXPORT virtual bool listen();
-+        virtual bool listen();
- 
-         /** 
-          * Stops this node.
-@@ -150,7 +150,7 @@
-          * @return <code>true</code> if the node was stopped, <code>false</code>
-          *         if it was not stopped.
-          */
--        EQ_EXPORT virtual bool stopListening();
-+        virtual bool stopListening();
- 
-         /** 
-          * Connects a node to this listening node.
-@@ -182,7 +182,7 @@
-          *         <code>false</code> otherwise.
-          * @sa initConnect, syncConnect
-          */
--        EQ_EXPORT bool connect( NodePtr node );
-+        bool connect( NodePtr node );
- 
-         /** 
-          * Start connecting and potentially launching a node using the
-@@ -196,7 +196,7 @@
-          *         <code>false</code> otherwise.
-          * @sa syncConnect
-          */
--        EQ_EXPORT bool initConnect( NodePtr node );
-+        bool initConnect( NodePtr node );
- 
-         /** 
-          * Synchronize the connection initiated by initConnect().
-@@ -209,7 +209,7 @@
-          *         <code>false</code> otherwise.
-          * @sa initConnect
-          */
--        EQ_EXPORT bool syncConnect( NodePtr node );
-+        bool syncConnect( NodePtr node );
- 
-         /** 
-          * Create and connect a node given by an identifier.
-@@ -227,7 +227,7 @@
-          * @return <code>true</code> if the node was disconnected correctly,
-          *         <code>false</code> otherwise.
-          */
--        EQ_EXPORT bool disconnect( NodePtr node );
-+        bool disconnect( NodePtr node );
- 
-         /** 
-          * Ensures the connectivity of this node.
-@@ -262,7 +262,7 @@
-          * 
-          * @param cd the connection description.
-          */
--        EQ_EXPORT void addConnectionDescription( ConnectionDescriptionPtr cd );
-+        void addConnectionDescription( ConnectionDescriptionPtr cd );
-         
-         /** 
-          * Removes a connection description.
-@@ -276,7 +276,7 @@
-          * 
-          * @return the number of stored connection descriptions. 
-          */
--        EQ_EXPORT const ConnectionDescriptionVector& getConnectionDescriptions()
-+        const ConnectionDescriptionVector& getConnectionDescriptions()
-                             const;
-         /** 
-          * Returns the connection to this node.
-@@ -398,7 +398,7 @@
-          * @return <code>true</code> if the session was mapped,
-          *         <code>false</code> if not.
-          */
--        EQ_EXPORT bool registerSession( Session* session );
-+        bool registerSession( Session* session );
- 
-         /** Deregister a (master) session. */
-         bool deregisterSession( Session* session )
-@@ -426,7 +426,7 @@
-          * @return <code>true</code> if the session was unmapped,
-          *         <code>false</code> if there was an error.
-          */
--        EQ_EXPORT bool unmapSession( Session* session );
-+        bool unmapSession( Session* session );
- 
-         /** @return the mapped session with the given identifier, or 0. */
-         Session* getSession( const uint32_t id );
-@@ -440,7 +440,7 @@
-          * @param clientArgs the client arguments as specified by the server.
-          * @return the success value of the run.
-          */
--        EQ_EXPORT virtual bool runClient( const std::string& clientArgs );
-+        virtual bool runClient( const std::string& clientArgs );
- 
-         /** Return the command queue to the command thread. */
-         CommandQueue* getCommandThreadQueue() 
-@@ -456,13 +456,13 @@
-         const NodeID& getNodeID() const { return _id; }
- 
-         /** Serialize the node's information. */
--        EQ_EXPORT std::string serialize() const;
-+        std::string serialize() const;
-         /** Deserialize the node information, consumes given data. */
--        EQ_EXPORT bool deserialize( std::string& data );
-+        bool deserialize( std::string& data );
- 
-     protected:
-         /** Destructs this node. */
--        EQ_EXPORT virtual ~Node();
-+        virtual ~Node();
- 
-         /** 
-          * Dispatches a packet to the registered command queue.
-@@ -471,7 +471,7 @@
-          * @return the result of the operation.
-          * @sa invokeCommand
-          */
--        EQ_EXPORT virtual bool dispatchCommand( Command& command );
-+        virtual bool dispatchCommand( Command& command );
- 
-         /** 
-          * Invokes the command handler method for the packet.
-@@ -480,7 +480,7 @@
-          * @return the result of the operation.
-          * @sa Dispatcher::invokeCommand
-          */
--        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
-+        virtual CommandResult invokeCommand( Command& command );
- 
-         /** 
-          * The main loop for auto-launched clients. 
-@@ -499,7 +499,11 @@
-          * @return the node.
-          * @sa getType()
-          */
--        EQ_EXPORT virtual NodePtr createNode( const uint32_t type );
-+        virtual NodePtr createNode( const uint32_t type )
-+		{
-+			EQASSERTINFO( type == TYPE_EQNET_NODE, type );
-+			return new Node();
-+		}
- 
-         /** Registers request packets waiting for a return value. */
-         base::RequestHandler _requestHandler;
-@@ -592,7 +596,7 @@
-         bool _hasSendToken;
- 
-         bool _connectSelf();
--        EQ_EXPORT void _addConnection( ConnectionPtr connection );
-+        void _addConnection( ConnectionPtr connection );
-         void _removeConnection( ConnectionPtr connection );
-         void _cleanup();
- 
-Index: lib/base/clock.h
-===================================================================
---- lib/base/clock.h	(revision 3280)
-+++ lib/base/clock.h	(working copy)
-@@ -37,7 +37,7 @@
+         void indent() { _logBuffer.indent(); }
+         void exdent() { _logBuffer.exdent(); }
+Index: lib/base/omp.h
+===================================================================
+--- lib/base/omp.h	(revision 3295)
++++ lib/base/omp.h	(working copy)
+@@ -29,11 +29,11 @@
  namespace base
  {
-     /** A class for time measurements. */
--    class Clock
-+    class EQ_EXPORT Clock
-     {
-     public :
-         /** Construct a new clock. */
-Index: lib/base/omp.h
-===================================================================
---- lib/base/omp.h	(revision 3280)
-+++ lib/base/omp.h	(working copy)
-@@ -29,11 +29,11 @@
- namespace base
- {
      /** Base class abstracting OpenMP */
 -    class OMP 
 +    class EQ_EXPORT OMP 
@@ -5603,11 +129,11 @@
  
      private:
          static int _nThreads;
-Index: lib/base/referenced.h
-===================================================================
---- lib/base/referenced.h	(revision 3280)
-+++ lib/base/referenced.h	(working copy)
-@@ -36,7 +36,7 @@
+Index: lib/base/referenced.h
+===================================================================
+--- lib/base/referenced.h	(revision 3295)
++++ lib/base/referenced.h	(working copy)
+@@ -36,7 +36,7 @@
       *
       * @sa RefPtr
       */
@@ -5616,11 +142,20 @@
      {
      public:
          /** Increase the reference count. */
-Index: lib/base/requestHandler.h
-===================================================================
---- lib/base/requestHandler.h	(revision 3280)
-+++ lib/base/requestHandler.h	(working copy)
-@@ -44,7 +44,7 @@
+@@ -95,7 +95,7 @@
+             }
+ 
+     protected:
+-        EQ_EXPORT void deleteReferenced( Referenced* object );
++        void deleteReferenced( Referenced* object );
+ 
+     private:
+         mtLong _refCount;
+Index: lib/base/requestHandler.h
+===================================================================
+--- lib/base/requestHandler.h	(revision 3295)
++++ lib/base/requestHandler.h	(working copy)
+@@ -44,7 +44,7 @@
       * serveRequest() and deleteRequest() are supposed to be called only from
       * one 'serving' thread.
       */
@@ -5629,7 +164,7 @@
      {
  
      public:
-@@ -55,10 +55,10 @@
+@@ -55,10 +55,10 @@
           *                   thread-safe and can be called from multiple
           *                   threads.
           */
@@ -5642,7 +177,7 @@
  
          /** 
           * Register a new request.
-@@ -67,7 +67,7 @@
+@@ -67,7 +67,7 @@
           *             0.
           * @return the request identifier.
           */
@@ -5651,7 +186,7 @@
  
          /** 
           * Unregister a request.
-@@ -78,7 +78,7 @@
+@@ -78,7 +78,7 @@
           * 
           * @param requestID the request identifier.
           */
@@ -5660,7 +195,7 @@
  
          /** 
           * Wait a given time for the completion of a request.
-@@ -93,17 +93,17 @@
+@@ -93,17 +93,17 @@
           *                indefinitely.
           * @return true if the request was served, false if not.
           */
@@ -5682,7 +217,7 @@
  
          /** 
           * Poll for the completion of a request.
-@@ -113,7 +113,7 @@
+@@ -113,7 +113,7 @@
           * @param requestID the request identifier.
           * @return true if the request has been served, false if it is pending.
           */
@@ -5691,7 +226,7 @@
  
          /** 
           * Retrieve the user-specific data for a request.
-@@ -121,7 +121,7 @@
+@@ -121,7 +121,7 @@
           * @param requestID the request identifier.
           * @return the user-specific data for the request.
           */
@@ -5700,7 +235,7 @@
  
          /** 
           * Serve a request with a void* result.
-@@ -129,11 +129,11 @@
+@@ -129,11 +129,11 @@
           * @param requestID the request identifier.
           * @param result the result of the request.
           */
@@ -5715,11 +250,11 @@
  
          /** @return true if this request handler was created thread-safe. */
  		bool isThreadSafe() const { return ( _mutex != 0 ); }
-Index: lib/base/rng.h
-===================================================================
---- lib/base/rng.h	(revision 3280)
-+++ lib/base/rng.h	(working copy)
-@@ -33,7 +33,7 @@
+Index: lib/base/rng.h
+===================================================================
+--- lib/base/rng.h	(revision 3295)
++++ lib/base/rng.h	(working copy)
+@@ -33,7 +33,7 @@
       * Generates a set of random, or if not supported by the operating system,
       * pseudo-random numbers. Each instance creates its own series of numbers.
       */
@@ -5728,60 +263,11 @@
      {
      public:
          /** Construct a new random number generator. */
-Index: lib/base/lock.h
-===================================================================
---- lib/base/lock.h	(revision 3280)
-+++ lib/base/lock.h	(working copy)
-@@ -28,21 +28,21 @@
-     class LockPrivate;
- 
-     /** A lock (mutex) primitive. */
--    class Lock : public NonCopyable
-+    class EQ_EXPORT Lock : public NonCopyable
-     {
-     public:
-         /** Construct a new lock. */
--        EQ_EXPORT Lock();
-+        Lock();
- 
- 
-         /** Destruct the lock. */
--        EQ_EXPORT ~Lock();
-+        ~Lock();
- 
-         /** Acquire the lock. */
--        EQ_EXPORT void set();
-+        void set();
- 
-         /** Release the lock. */
--        EQ_EXPORT void unset();
-+        void unset();
- 
-         /** 
-          * Attempt to acquire the lock.
-@@ -50,7 +50,7 @@
-          * @return <code>true</code> if the lock was set, <code>false</code> if
-          *         it was not set.
-          */
--        EQ_EXPORT bool trySet();
-+        bool trySet();
- 
-         /** 
-          * Test if the lock is set.
-@@ -58,7 +58,7 @@
-          * @return <code>true</code> if the lock is set, <code>false</code> if
-          *         it is not set.
-          */
--        EQ_EXPORT bool test(); 
-+        bool test(); 
- 
-     private:
-         LockPrivate* _data;
-Index: lib/base/thread.h
-===================================================================
---- lib/base/thread.h	(revision 3280)
-+++ lib/base/thread.h	(working copy)
-@@ -39,16 +39,16 @@
+Index: lib/base/thread.h
+===================================================================
+--- lib/base/thread.h	(revision 3295)
++++ lib/base/thread.h	(working copy)
+@@ -39,16 +39,16 @@
      /**
       * An abstraction for an execution thread.
       */
@@ -5801,7 +287,7 @@
  
          /** 
           * Starts the thread.
-@@ -60,7 +60,7 @@
+@@ -60,7 +60,7 @@
           *         <code>false</code> otherwise.
           * @sa init(), run(), addListener()
           */
@@ -5810,7 +296,7 @@
  
          /** 
           * The init function for the child thread.
-@@ -92,14 +92,14 @@
+@@ -92,14 +92,14 @@
           *
           * @param retVal the return value of the thread.
           */
@@ -5827,7 +313,7 @@
  
          /** 
           * Wait for the exit of the child thread.
-@@ -109,7 +109,7 @@
+@@ -109,7 +109,7 @@
           * @return <code>true</code> if the thread was joined,
           *         <code>false</code> otherwise.
           */
@@ -5836,7 +322,7 @@
  
          /** 
           * Return if the thread is stopped.
-@@ -139,27 +139,27 @@
+@@ -139,27 +139,27 @@
           * @return <code>true</code> if the current thread has is the same
           *         thread as this thread, <code>false</code> if not.
           */
@@ -5869,556 +355,11 @@
  
          /** @internal */
          static void pinCurrentThread();
-Index: lib/base/log.h
-===================================================================
---- lib/base/log.h	(revision 3280)
-+++ lib/base/log.h	(working copy)
-@@ -148,8 +148,8 @@
-     {
-     public:
- 
--        Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
--        virtual ~Log() { _logBuffer.pubsync(); }
-+        EQ_EXPORT Log() : std::ostream( &_logBuffer ), _logBuffer( getOutput( )){}
-+        EQ_EXPORT ~Log() { _logBuffer.pubsync(); }
- 
-         void indent() { _logBuffer.indent(); }
-         void exdent() { _logBuffer.exdent(); }
-Index: lib/base/dso.h
-===================================================================
---- lib/base/dso.h	(revision 3280)
-+++ lib/base/dso.h	(working copy)
-@@ -30,11 +30,11 @@
- {
- 
-     /** Helper to access dynamic shared objects (DSO) */
--    class DSO : public NonCopyable
-+    class EQ_EXPORT DSO : public NonCopyable
-     {
-     public:
-         /** Construct a new dynamic shared object. */
--        EQ_EXPORT DSO() : _dso( 0 ) {}
-+        DSO() : _dso( 0 ) {}
- 
-         /** 
-          * Open a dynamic shared object.
-@@ -42,14 +42,14 @@
-          * @param fileName The file name of the DSO.
-          * @return true if the DSO was opened, false upon error.
-          */
--        EQ_EXPORT bool open( const std::string& fileName );
-+        bool open( const std::string& fileName );
- 
-         /** Close the DSO, which invalidates retrieved function pointers */
--        EQ_EXPORT void close();
-+        void close();
-     
-         /** @return a function pointer in the DSO, or 0 if the function is not
-          *         exported by the DSO. */
--        EQ_EXPORT void* getFunctionPointer( const std::string& functionName );
-+        void* getFunctionPointer( const std::string& functionName );
- 
-     private:
- #ifdef WIN32
-Index: lib/client/objectManager.h
-===================================================================
---- lib/client/objectManager.h	(revision 3280)
-+++ lib/client/objectManager.h	(working copy)
-@@ -44,7 +44,7 @@
-      * delete - delete.
-      */
-     template< typename T >
--    class ObjectManager : public base::NonCopyable
-+    class EQ_EXPORT ObjectManager : public base::NonCopyable
-     {
-     public:
-         enum
-@@ -53,57 +53,57 @@
-         };
- 
-         /** Construct a new object manager. */
--        EQ_EXPORT ObjectManager( GLEWContext* const glewContext );
-+        ObjectManager( GLEWContext* const glewContext );
- 
-         /** Construct a new object manager sharing data with another manager. */
--        EQ_EXPORT ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
-+        ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
- 
--        EQ_EXPORT virtual ~ObjectManager();
-+        virtual ~ObjectManager();
- 
-         /** @return the number of object managers currently sharing the data. */
-         int getSharedUsage() const { return _data->getRefCount(); }
- 
--        EQ_EXPORT void deleteAll();
-+        void deleteAll();
- 
--        EQ_EXPORT GLuint getList( const T& key );
--        EQ_EXPORT GLuint newList( const T& key, const GLsizei num = 1 );
--        EQ_EXPORT GLuint obtainList( const T& key, const GLsizei num = 1 );
--        EQ_EXPORT void   deleteList( const T& key );
--
--        EQ_EXPORT GLuint getTexture( const T& key );
--        EQ_EXPORT GLuint newTexture( const T& key );
--        EQ_EXPORT GLuint obtainTexture( const T& key );
--        EQ_EXPORT void   deleteTexture( const T& key );
--
--        EQ_EXPORT bool   supportsBuffers() const;
--        EQ_EXPORT GLuint getBuffer( const T& key );
--        EQ_EXPORT GLuint newBuffer( const T& key );
--        EQ_EXPORT GLuint obtainBuffer( const T& key );
--        EQ_EXPORT void   deleteBuffer( const T& key );
--
--        EQ_EXPORT bool   supportsPrograms() const;
--        EQ_EXPORT GLuint getProgram( const T& key );
--        EQ_EXPORT GLuint newProgram( const T& key );
--        EQ_EXPORT GLuint obtainProgram( const T& key );
--        EQ_EXPORT void   deleteProgram( const T& key );
--
--        EQ_EXPORT bool   supportsShaders() const;
--        EQ_EXPORT GLuint getShader( const T& key );
--        EQ_EXPORT GLuint newShader( const T& key, const GLenum type );
--        EQ_EXPORT GLuint obtainShader( const T& key, const GLenum type );
--        EQ_EXPORT void   deleteShader( const T& key );
--
--        EQ_EXPORT bool     supportsEqTexture() const;
--        EQ_EXPORT Texture* getEqTexture( const T& key );
--        EQ_EXPORT Texture* newEqTexture( const T& key );
--        EQ_EXPORT Texture* obtainEqTexture( const T& key );
--        EQ_EXPORT void     deleteEqTexture( const T& key );
--
--        EQ_EXPORT bool               supportsEqFrameBufferObject() const;
--        EQ_EXPORT FrameBufferObject* getEqFrameBufferObject( const T& key );
--        EQ_EXPORT FrameBufferObject* newEqFrameBufferObject( const T& key );
--        EQ_EXPORT FrameBufferObject* obtainEqFrameBufferObject( const T& key );
--        EQ_EXPORT void               deleteEqFrameBufferObject( const T& key );
-+        GLuint getList( const T& key );
-+        GLuint newList( const T& key, const GLsizei num = 1 );
-+        GLuint obtainList( const T& key, const GLsizei num = 1 );
-+        void   deleteList( const T& key );
-+
-+        GLuint getTexture( const T& key );
-+        GLuint newTexture( const T& key );
-+        GLuint obtainTexture( const T& key );
-+        void   deleteTexture( const T& key );
-+
-+        bool   supportsBuffers() const;
-+        GLuint getBuffer( const T& key );
-+        GLuint newBuffer( const T& key );
-+        GLuint obtainBuffer( const T& key );
-+        void   deleteBuffer( const T& key );
-+
-+        bool   supportsPrograms() const;
-+        GLuint getProgram( const T& key );
-+        GLuint newProgram( const T& key );
-+        GLuint obtainProgram( const T& key );
-+        void   deleteProgram( const T& key );
-+
-+        bool   supportsShaders() const;
-+        GLuint getShader( const T& key );
-+        GLuint newShader( const T& key, const GLenum type );
-+        GLuint obtainShader( const T& key, const GLenum type );
-+        void   deleteShader( const T& key );
-+
-+        bool     supportsEqTexture() const;
-+        Texture* getEqTexture( const T& key );
-+        Texture* newEqTexture( const T& key );
-+        Texture* obtainEqTexture( const T& key );
-+        void     deleteEqTexture( const T& key );
-+
-+        bool               supportsEqFrameBufferObject() const;
-+        FrameBufferObject* getEqFrameBufferObject( const T& key );
-+        FrameBufferObject* newEqFrameBufferObject( const T& key );
-+        FrameBufferObject* obtainEqFrameBufferObject( const T& key );
-+        void               deleteEqFrameBufferObject( const T& key );
- 
-         const GLEWContext* glewGetContext() const { return _glewContext; }
-         GLEWContext* glewGetContext()             { return _glewContext; }
-Index: lib/client/channelStatistics.h
-===================================================================
---- lib/client/channelStatistics.h	(revision 3280)
-+++ lib/client/channelStatistics.h	(working copy)
-@@ -27,12 +27,12 @@
-     /**
-      * Holds one statistics event, used for profiling.
-      */
--    class ChannelStatistics : public StatisticSampler< Channel >
-+    class EQ_EXPORT ChannelStatistics : public StatisticSampler< Channel >
-     {
-     public:
--        EQ_EXPORT ChannelStatistics( const Statistic::Type type, 
-+        ChannelStatistics( const Statistic::Type type, 
-                                      Channel* channel );
--        virtual EQ_EXPORT ~ChannelStatistics();
-+        virtual ~ChannelStatistics();
-     };
- }
- 
-Index: lib/client/wglWindowEvent.h
-===================================================================
---- lib/client/wglWindowEvent.h	(revision 3280)
-+++ lib/client/wglWindowEvent.h	(working copy)
-@@ -24,7 +24,7 @@
- namespace eq
- {
-     /** A window-system event for a WGLWindowIF */
--    class WGLWindowEvent : public Event
-+    class EQ_EXPORT WGLWindowEvent : public Event
-     {
-     public:
-         // Native event data
-Index: lib/client/wall.h
-===================================================================
---- lib/client/wall.h	(revision 3280)
-+++ lib/client/wall.h	(working copy)
-@@ -34,58 +34,58 @@
-      * The three points describe the bottom left, bottom right and top left
-      * coordinate of the wall in real-world coordinates.
-      */
--    class Wall
-+    class EQ_EXPORT Wall
-     {
-     public:
--        EQ_EXPORT Wall();
-+        Wall();
- 
-         /** 
-          * Resize the wall horizontally.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeHorizontal( const float ratio );
-+        void resizeHorizontal( const float ratio );
- 
-         /** 
-          * Resize the wall vertically.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeVertical( const float ratio );
-+        void resizeVertical( const float ratio );
-         
-         /** 
-          * Resize the wall on the left side.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeLeft( const float ratio );
-+        void resizeLeft( const float ratio );
- 
-         /** 
-          * Resize the wall on the right side.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeRight( const float ratio );
-+        void resizeRight( const float ratio );
- 
-         /** 
-          * Resize the wall on the top side.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeTop( const float ratio );
-+        void resizeTop( const float ratio );
- 
-         /** 
-          * Resize the wall on the bottom side.
-          * 
-          * @param ratio the amount by which the wall is grown or shrunk.
-          */
--        EQ_EXPORT void resizeBottom( const float ratio );
-+        void resizeBottom( const float ratio );
- 
-         /** Compute the sub-frustum for a 2D area on the full wall. */
--        EQ_EXPORT void apply( const Viewport& viewport);
-+        void apply( const Viewport& viewport);
- 
-         /** Set the wall parameters from a projection description. */
--        EQ_EXPORT Wall& operator = ( const Projection& projection );
-+        Wall& operator = ( const Projection& projection );
- 
-         /** @return the width of the wall. */
-         float getWidth() const { return (bottomRight - bottomLeft).length(); }
-@@ -93,8 +93,8 @@
-         /** @return the height of the wall. */
-         float getHeight() const { return (topLeft - bottomLeft).length(); }
- 
--        EQ_EXPORT bool operator == ( const Wall& rhs ) const;
--        EQ_EXPORT bool operator != ( const Wall& rhs ) const;
-+        bool operator == ( const Wall& rhs ) const;
-+        bool operator != ( const Wall& rhs ) const;
- 
-         Vector3f bottomLeft;
-         Vector3f bottomRight;
-Index: lib/client/eventHandler.h
-===================================================================
---- lib/client/eventHandler.h	(revision 3280)
-+++ lib/client/eventHandler.h	(working copy)
-@@ -29,22 +29,22 @@
-     /**
-      * Base class for window system-specific event handlers
-      */
--    class EventHandler
-+    class EQ_EXPORT EventHandler
-     {
-     public:
- 
-     protected:
-         /** Constructs a new event handler. */
--        EQ_EXPORT EventHandler() : _lastEventWindow( 0 ) {}
-+        EventHandler() : _lastEventWindow( 0 ) {}
- 
-         /** Destructs the event handler. */
--        EQ_EXPORT virtual ~EventHandler(){}
-+        virtual ~EventHandler(){}
- 
-         /** Compute the mouse move delta from the previous pointer event. */
--        EQ_EXPORT void _computePointerDelta(const Window* window, Event& event);
-+        void _computePointerDelta(const Window* window, Event& event);
- 
-         /** Find and set the rendering context at the mouse position. */
--        EQ_EXPORT void _getRenderContext( const Window* window, Event& event );
-+        void _getRenderContext( const Window* window, Event& event );
- 
-         /** The previous pointer event to compute mouse movement deltas. */
-         Event _lastPointerEvent;
-Index: lib/client/frameData.h
-===================================================================
---- lib/client/frameData.h	(revision 3280)
-+++ lib/client/frameData.h	(working copy)
-@@ -45,11 +45,11 @@
-      * A frame data holds multiple images and is used by frames.
-      * It is not intended to be used directly by application code.
-      */
--    class FrameData : public net::Object
-+    class EQ_EXPORT FrameData : public net::Object
-     {
-     public:
--        EQ_EXPORT FrameData();
--        EQ_EXPORT virtual ~FrameData();
-+        FrameData();
-+        virtual ~FrameData();
- 
-         /** 
-          * @name Data Access
-@@ -92,10 +92,10 @@
-          * 
-          * @return the image.
-          */
--        EQ_EXPORT Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
-+        Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
- 
-         /** Clear the frame by recycling the attached images. */
--        EQ_EXPORT void clear();
-+        void clear();
- 
-         /** 
-          * Read back a set of images according to the current frame data.
-Index: lib/client/config.h
-===================================================================
---- lib/client/config.h	(revision 3280)
-+++ lib/client/config.h	(working copy)
-@@ -38,21 +38,21 @@
-      * The configuration groups all processes of the application in a single
-      * net::Session.
-      */
--    class Config : public net::Session
-+    class EQ_EXPORT Config : public net::Session
-     {
-     public:
-         /** Constructs a new config. */
--        EQ_EXPORT Config( ServerPtr parent );
-+        Config( ServerPtr parent );
- 
-         /** Destructs a config. */
--        EQ_EXPORT virtual ~Config();
-+        virtual ~Config();
- 
-         /** @name Data Access */
-         //@{
--        EQ_EXPORT ClientPtr getClient();
--        EQ_EXPORT ServerPtr getServer();
-+        ClientPtr getClient();
-+        ServerPtr getServer();
- 
--        EQ_EXPORT CommandQueue* getNodeThreadQueue();
-+        CommandQueue* getNodeThreadQueue();
- 
-         uint32_t getCurrentFrame()  const { return _currentFrame; }
-         uint32_t getFinishedFrame() const { return _finishedFrame.get(); }
-@@ -71,10 +71,10 @@
-         const LayoutVector& getLayouts() const { return _layouts; }
- 
-         /** @return the layout of the given identifier, or 0. */
--        EQ_EXPORT Layout* findLayout( const uint32_t id );
-+        Layout* findLayout( const uint32_t id );
- 
-         /** @return the view of the given identifier, or 0. */
--        EQ_EXPORT View* findView( const uint32_t id );
-+        View* findView( const uint32_t id );
- 
-         /** @return the vector of canvases, app-node only. */
-         const CanvasVector& getCanvases() const { return _canvases; }
-@@ -88,10 +88,10 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
-          */
--        EQ_EXPORT VisitorResult accept( ConfigVisitor& visitor );
-+        VisitorResult accept( ConfigVisitor& visitor );
- 
-         /** Get all received statistics. */
--        EQ_EXPORT void getStatistics( std::vector< FrameStatistics >& stats );
-+        void getStatistics( std::vector< FrameStatistics >& stats );
- 
-         /**
-          * @return true while the config is initialized and no exit event
-@@ -114,7 +114,7 @@
-          * @param initID an identifier to be passed to all init methods.
-          * @return true if the initialization was successful, false if not.
-          */
--        EQ_EXPORT virtual bool init( const uint32_t initID );
-+        virtual bool init( const uint32_t initID );
- 
-         /** 
-          * Exits this configuration.
-@@ -125,7 +125,7 @@
-          * @return <code>true</code> if the exit was successful,
-          *         <code>false</code> if not.
-          */
--        EQ_EXPORT virtual bool exit();
-+        virtual bool exit();
-         //@}
- 
-         /**
-@@ -139,7 +139,7 @@
-          *                methods.
-          * @return the frame number of the new frame.
-          */
--        EQ_EXPORT virtual uint32_t startFrame( const uint32_t frameID );
-+        virtual uint32_t startFrame( const uint32_t frameID );
- 
-         /** 
-          * Finish the rendering of a frame.
-@@ -147,14 +147,14 @@
-          * @return the frame number of the finished frame, or <code>0</code> if
-          *         no frame has been finished.
-          */
--        EQ_EXPORT virtual uint32_t finishFrame();
-+        virtual uint32_t finishFrame();
- 
-         /**
-          * Finish rendering all pending frames.
-          *
-          * @return the frame number of the last finished frame.
-          */
--        EQ_EXPORT virtual uint32_t finishAllFrames();
-+        virtual uint32_t finishAllFrames();
- 
-         /** 
-          * Release the local synchronization of the config for a frame.
-@@ -175,7 +175,7 @@
-          * 
-          * @param event the event.
-          */
--        EQ_EXPORT void sendEvent( ConfigEvent& event );
-+        void sendEvent( ConfigEvent& event );
- 
-         /** 
-          * Get the next received event on the application node.
-@@ -184,7 +184,7 @@
-          * 
-          * @return a config event.
-          */
--        EQ_EXPORT const ConfigEvent* nextEvent();
-+        const ConfigEvent* nextEvent();
- 
-         /** 
-          * Try to get an event on the application node.
-@@ -193,7 +193,7 @@
-          * 
-          * @return a config event, or 0 if no events are pending.
-          */
--        EQ_EXPORT const ConfigEvent* tryNextEvent();
-+        const ConfigEvent* tryNextEvent();
- 
-         /** @return true if events are pending. */
-         bool checkEvent() const { return !_eventQueue.isEmpty(); }
-@@ -205,7 +205,7 @@
-          * default implementation calls handleEvent() on all pending events,
-          * without blocking.
-          */
--        EQ_EXPORT virtual void handleEvents();
-+        virtual void handleEvents();
- 
-         /** 
-          * Handle one config event.
-@@ -214,7 +214,7 @@
-          * @return <code>true</code> if the event requires a redraw,
-          *         <code>false</code> if not.
-          */
--        EQ_EXPORT virtual bool handleEvent( const ConfigEvent* event );
-+        virtual bool handleEvent( const ConfigEvent* event );
-         //@}
-         
- #ifdef EQ_USE_DEPRECATED
-@@ -231,16 +231,16 @@
-          *
-          * @param matrix the matrix
-          */
--        EQ_EXPORT void setHeadMatrix( const vmml::Matrix4f& matrix );
-+        void setHeadMatrix( const vmml::Matrix4f& matrix );
- 
-         /** @return the current head matrix. */
--        EQ_EXPORT const vmml::Matrix4f& getHeadMatrix() const;
-+        const vmml::Matrix4f& getHeadMatrix() const;
- 
-         /** Set the eye separation, i.e., the distance between the eyes. */
--        EQ_EXPORT void setEyeBase( const float eyeBase );
-+        void setEyeBase( const float eyeBase );
- 
-         /** @return the current eye separation. */
--        EQ_EXPORT float getEyeBase() const;
-+        float getEyeBase() const;
-         //@}
- #endif
- 
-@@ -264,7 +264,7 @@
- #endif
- 
-         /** Undocumented */
--        EQ_EXPORT void freezeLoadBalancing( const bool onOff );
-+        void freezeLoadBalancing( const bool onOff );
- 
-         /** 
-          * Set the window system for the config's message pump, used by
-@@ -276,7 +276,7 @@
-     protected:
- 
-         /** @sa eq::net::Session::notifyMapped() */
--        EQ_EXPORT virtual void notifyMapped( net::NodePtr node );
-+        virtual void notifyMapped( net::NodePtr node );
- 
-     private:
-         /** The node identifier of the node running the application thread. */
-Index: lib/client/configEvent.h
-===================================================================
---- lib/client/configEvent.h	(revision 3280)
-+++ lib/client/configEvent.h	(working copy)
-@@ -36,7 +36,7 @@
-      *
-      * When subclassing, make sure to set the packet size.
-      */
--    struct ConfigEvent : public ConfigPacket
-+    struct EQ_EXPORT ConfigEvent : public ConfigPacket
-     {
-     public:
-         ConfigEvent()
-Index: lib/client/channel.h
-===================================================================
---- lib/client/channel.h	(revision 3280)
-+++ lib/client/channel.h	(working copy)
-@@ -43,7 +43,7 @@
+Index: lib/client/channel.h
+===================================================================
+--- lib/client/channel.h	(revision 3295)
++++ lib/client/channel.h	(working copy)
+@@ -43,7 +43,7 @@
       * rendering-relevant tasks, such as clear, draw, assemble and readback. It
       * is a child of a Window.
       */
@@ -6427,7 +368,7 @@
      {
      public:
      
-@@ -60,10 +60,10 @@
+@@ -60,10 +60,10 @@
          };
          
          /** Constructs a new channel. */
@@ -6440,7 +381,7 @@
  
          /**
           * @name Data Access
-@@ -72,18 +72,18 @@
+@@ -72,18 +72,18 @@
          Window*       getWindow()       { return _window; }
          const Window* getWindow() const { return _window; }
  
@@ -6467,7 +408,7 @@
  
          /** 
           * Get the GLEW context for this channel.
-@@ -98,8 +98,8 @@
+@@ -98,8 +98,8 @@
           * @return the extended OpenGL function table for the channel's OpenGL
           *         context.
           */
@@ -6478,7 +419,7 @@
          
          /** @return the name of the window. */
          const std::string& getName() const { return _name; }
-@@ -120,7 +120,7 @@
+@@ -120,7 +120,7 @@
           * @param visitor the visitor.
           * @return the result of the visitor traversal.
           */
@@ -6487,7 +428,7 @@
  
          /** 
           * Set the near and far planes for this channel.
-@@ -133,7 +133,7 @@
+@@ -133,7 +133,7 @@
           * @param nearPlane the near plane.
           * @param farPlane the far plane.
           */
@@ -6496,7 +437,7 @@
  
          /** Return a stable, unique color for this channel. */
          const Vector3ub& getUniqueColor() const { return _color; }
-@@ -149,16 +149,16 @@
+@@ -149,16 +149,16 @@
           * 
           * @return the channel's view, or 0 if it does not have a view.
           */
@@ -6516,7 +457,7 @@
          //@}
  
          /**
-@@ -170,16 +170,16 @@
+@@ -170,16 +170,16 @@
           */
          //@{
          /** @return the channel's current draw buffer. */
@@ -6537,7 +478,7 @@
  
          /**
           * Get the channel's current position wrt the destination channel.
-@@ -190,34 +190,34 @@
+@@ -190,34 +190,34 @@
           *
           * @return the channel's current position wrt the destination channel.
           */
@@ -6581,7 +522,7 @@
  
          /** @return the list of input frames, used from frameAssemble(). */
          const FrameVector& getInputFrames() { return _inputFrames; }
-@@ -233,7 +233,7 @@
+@@ -233,7 +233,7 @@
           *
           * @return the 2D orthographic frustum.
           */
@@ -6590,7 +531,7 @@
  
          /** 
           * get the channel's native (drawable) pixel viewport.
-@@ -242,18 +242,18 @@
+@@ -242,18 +242,18 @@
              { return _nativeContext.pvp; }
  
          /** @internal  Undocumented - may not be supported in the future */
@@ -6613,7 +554,7 @@
          //@}
  
          /**
-@@ -267,27 +267,27 @@
+@@ -267,27 +267,27 @@
          /** 
           * Apply the current rendering buffer, including the color mask.
           */
@@ -6646,7 +587,7 @@
  
          /** 
           * Apply a orthographic frustum for pixel-based 2D operations. 
-@@ -295,18 +295,18 @@
+@@ -295,18 +295,18 @@
           * One unit in the frustum corresponds to one pixel on the screen. The
           * frustum is position wrt the canvas.
           */
@@ -6668,7 +609,7 @@
          
          /** 
           * Process a received event.
-@@ -318,13 +318,13 @@
+@@ -318,13 +318,13 @@
           * @param event the received event.
           * @return true when the event was handled, false if not.
           */
@@ -6685,7 +626,7 @@
  
          /**
           * @name Attributes
-@@ -340,8 +340,8 @@
+@@ -340,8 +340,8 @@
              IATTR_ALL
          };
          
@@ -6696,7 +637,7 @@
                                                          const IAttribute attr );
          //@}
  #if 0
-@@ -358,7 +358,7 @@
+@@ -358,7 +358,7 @@
      protected:
          friend class Window;
  
@@ -6705,7 +646,7 @@
                                          const uint32_t instanceID, 
                                          net::Session* session );
  
-@@ -398,17 +398,17 @@
+@@ -398,17 +398,17 @@
           * 
           * @param initID the init identifier.
           */
@@ -6726,7 +667,7 @@
          
          /**
           * Start rendering a frame.
-@@ -455,14 +455,14 @@
+@@ -455,14 +455,14 @@
           * 
           * @param frameID the per-frame identifier.
           */
@@ -6743,7 +684,7 @@
  
          /** 
           * Assemble input frames.
-@@ -470,7 +470,7 @@
+@@ -470,7 +470,7 @@
           * @param frameID the per-frame identifier.
           * @sa getInputFrames
           */
@@ -6752,7 +693,7 @@
  
          /** 
           * Read back the rendered scene.
-@@ -478,7 +478,7 @@
+@@ -478,7 +478,7 @@
           * @param frameID the per-frame identifier.
           * @sa getOutputFrames
           */
@@ -6761,7 +702,7 @@
  
          /** 
           * Start updating a destination channel.
-@@ -506,12 +506,12 @@
+@@ -506,12 +506,12 @@
           * The default implementation is very conservative and saves any state
           * which is potentially changed by the assembly routines.
           */
@@ -6776,7 +717,7 @@
          //@}
  
          /** @name Error information. */
-@@ -524,7 +524,7 @@
+@@ -524,7 +524,7 @@
           *
           * @param message the error message.
           */
@@ -6785,12 +726,580 @@
          //@}
  
      private:
-Index: lib/client/image.h
-===================================================================
---- lib/client/image.h	(revision 3280)
-+++ lib/client/image.h	(working copy)
-@@ -33,12 +33,12 @@
+Index: lib/client/channelStatistics.h
+===================================================================
+--- lib/client/channelStatistics.h	(revision 3295)
++++ lib/client/channelStatistics.h	(working copy)
+@@ -27,12 +27,12 @@
+     /**
+      * Holds one statistics event, used for profiling.
+      */
+-    class ChannelStatistics : public StatisticSampler< Channel >
++    class EQ_EXPORT ChannelStatistics : public StatisticSampler< Channel >
+     {
+     public:
+-        EQ_EXPORT ChannelStatistics( const Statistic::Type type, 
++        ChannelStatistics( const Statistic::Type type, 
+                                      Channel* channel );
+-        virtual EQ_EXPORT ~ChannelStatistics();
++        virtual ~ChannelStatistics();
+     };
+ }
+ 
+Index: lib/client/client.h
+===================================================================
+--- lib/client/client.h	(revision 3295)
++++ lib/client/client.h	(working copy)
+@@ -32,18 +32,18 @@
+     /** 
+      * The client represents a network node in the cluster.
+      */
+-    class Client : public net::Node
++    class EQ_EXPORT Client : public net::Node
+     {
+     public:
+         /** 
+          * Constructs a new client.
+          */
+-        EQ_EXPORT Client();
++        Client();
+ 
+         /**
+          * Destructs the client.
+          */
+-        EQ_EXPORT virtual ~Client();
++        virtual ~Client();
+ 
+         /** 
+          * Open and connect an Equalizer server to the local client.
+@@ -51,7 +51,7 @@
+          * @param server the server.
+          * @return true if the server was connected, false if not.
+          */
+-        EQ_EXPORT bool connectServer( ServerPtr server );
++        bool connectServer( ServerPtr server );
+ 
+         /** 
+          * Disconnect and close the connection of an Equalizer server to the
+@@ -60,37 +60,37 @@
+          * @param server the server.
+          * @return true if the server was disconnected, false if not.
+          */
+-        EQ_EXPORT bool disconnectServer( ServerPtr server );
++        bool disconnectServer( ServerPtr server );
+ 
+         /** @return true if the client has commands pending, false otherwise. */
+-        EQ_EXPORT bool hasCommands();
++        bool hasCommands();
+ 
+         /** 
+          * Get and process one command from the node command queue. Used
+          * internally to run node commands.
+          */
+-        EQ_EXPORT void processCommand();
++        void processCommand();
+ 
+         /** @sa net::Node::listen() */
+-        EQ_EXPORT virtual bool listen();
++        virtual bool listen();
+         /** @sa net::Node::stopListening() */
+-        EQ_EXPORT virtual bool stopListening();
++        virtual bool stopListening();
+ 
+         /** 
+          * Set the window system for the client's message pump, used by
+          * non-threaded pipes.
+          * @internal
+          */
+-        EQ_EXPORT void setWindowSystem( const WindowSystem windowSystem );
++        void setWindowSystem( const WindowSystem windowSystem );
+ 
+         /** Return the command queue to the main node thread. */
+         CommandQueue* getNodeThreadQueue() { return _nodeThreadQueue; }
+ 
+     protected:
+         /** @sa net::Node::clientLoop */
+-        EQ_EXPORT virtual bool clientLoop();
++        virtual bool clientLoop();
+         /** @sa net::Node::exitClient(). */
+-        EQ_EXPORT virtual bool exitClient();
++        virtual bool exitClient();
+ 
+     private:
+         /** The command->node command queue. */
+@@ -104,13 +104,13 @@
+         };
+ 
+         /** @sa net::Node::createNode */
+-        EQ_EXPORT virtual net::NodePtr createNode( const uint32_t type );
++        virtual net::NodePtr createNode( const uint32_t type );
+         
+         /** @sa net::Node::dispatchCommand */
+-        EQ_EXPORT virtual bool dispatchCommand( net::Command& command );
++        virtual bool dispatchCommand( net::Command& command );
+ 
+         /** @sa net::Node::invokeCommand */
+-        EQ_EXPORT virtual net::CommandResult invokeCommand( net::Command& );
++        virtual net::CommandResult invokeCommand( net::Command& );
+ 
+         /** The command functions. */
+         net::CommandResult _cmdExit( net::Command& command );
+Index: lib/client/config.h
+===================================================================
+--- lib/client/config.h	(revision 3295)
++++ lib/client/config.h	(working copy)
+@@ -38,21 +38,21 @@
+      * The configuration groups all processes of the application in a single
+      * net::Session.
+      */
+-    class Config : public net::Session
++    class EQ_EXPORT Config : public net::Session
+     {
+     public:
+         /** Constructs a new config. */
+-        EQ_EXPORT Config( ServerPtr parent );
++        Config( ServerPtr parent );
+ 
+         /** Destructs a config. */
+-        EQ_EXPORT virtual ~Config();
++        virtual ~Config();
+ 
+         /** @name Data Access */
+         //@{
+-        EQ_EXPORT ClientPtr getClient();
+-        EQ_EXPORT ServerPtr getServer();
++        ClientPtr getClient();
++        ServerPtr getServer();
+ 
+-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
++        CommandQueue* getNodeThreadQueue();
+ 
+         uint32_t getCurrentFrame()  const { return _currentFrame; }
+         uint32_t getFinishedFrame() const { return _finishedFrame.get(); }
+@@ -71,10 +71,10 @@
+         const LayoutVector& getLayouts() const { return _layouts; }
+ 
+         /** @return the layout of the given identifier, or 0. */
+-        EQ_EXPORT Layout* findLayout( const uint32_t id );
++        Layout* findLayout( const uint32_t id );
+ 
+         /** @return the view of the given identifier, or 0. */
+-        EQ_EXPORT View* findView( const uint32_t id );
++        View* findView( const uint32_t id );
+ 
+         /** @return the vector of canvases, app-node only. */
+         const CanvasVector& getCanvases() const { return _canvases; }
+@@ -88,10 +88,10 @@
+          * @param visitor the visitor.
+          * @return the result of the visitor traversal.
+          */
+-        EQ_EXPORT VisitorResult accept( ConfigVisitor& visitor );
++        VisitorResult accept( ConfigVisitor& visitor );
+ 
+         /** Get all received statistics. */
+-        EQ_EXPORT void getStatistics( std::vector< FrameStatistics >& stats );
++        void getStatistics( std::vector< FrameStatistics >& stats );
+ 
+         /**
+          * @return true while the config is initialized and no exit event
+@@ -114,7 +114,7 @@
+          * @param initID an identifier to be passed to all init methods.
+          * @return true if the initialization was successful, false if not.
+          */
+-        EQ_EXPORT virtual bool init( const uint32_t initID );
++        virtual bool init( const uint32_t initID );
+ 
+         /** 
+          * Exits this configuration.
+@@ -125,7 +125,7 @@
+          * @return <code>true</code> if the exit was successful,
+          *         <code>false</code> if not.
+          */
+-        EQ_EXPORT virtual bool exit();
++        virtual bool exit();
+         //@}
+ 
+         /**
+@@ -139,7 +139,7 @@
+          *                methods.
+          * @return the frame number of the new frame.
+          */
+-        EQ_EXPORT virtual uint32_t startFrame( const uint32_t frameID );
++        virtual uint32_t startFrame( const uint32_t frameID );
+ 
+         /** 
+          * Finish the rendering of a frame.
+@@ -147,14 +147,14 @@
+          * @return the frame number of the finished frame, or <code>0</code> if
+          *         no frame has been finished.
+          */
+-        EQ_EXPORT virtual uint32_t finishFrame();
++        virtual uint32_t finishFrame();
+ 
+         /**
+          * Finish rendering all pending frames.
+          *
+          * @return the frame number of the last finished frame.
+          */
+-        EQ_EXPORT virtual uint32_t finishAllFrames();
++        virtual uint32_t finishAllFrames();
+ 
+         /** 
+          * Release the local synchronization of the config for a frame.
+@@ -175,7 +175,7 @@
+          * 
+          * @param event the event.
+          */
+-        EQ_EXPORT void sendEvent( ConfigEvent& event );
++        void sendEvent( ConfigEvent& event );
+ 
+         /** 
+          * Get the next received event on the application node.
+@@ -184,7 +184,7 @@
+          * 
+          * @return a config event.
+          */
+-        EQ_EXPORT const ConfigEvent* nextEvent();
++        const ConfigEvent* nextEvent();
+ 
+         /** 
+          * Try to get an event on the application node.
+@@ -193,7 +193,7 @@
+          * 
+          * @return a config event, or 0 if no events are pending.
+          */
+-        EQ_EXPORT const ConfigEvent* tryNextEvent();
++        const ConfigEvent* tryNextEvent();
+ 
+         /** @return true if events are pending. */
+         bool checkEvent() const { return !_eventQueue.isEmpty(); }
+@@ -205,7 +205,7 @@
+          * default implementation calls handleEvent() on all pending events,
+          * without blocking.
+          */
+-        EQ_EXPORT virtual void handleEvents();
++        virtual void handleEvents();
+ 
+         /** 
+          * Handle one config event.
+@@ -214,7 +214,7 @@
+          * @return <code>true</code> if the event requires a redraw,
+          *         <code>false</code> if not.
+          */
+-        EQ_EXPORT virtual bool handleEvent( const ConfigEvent* event );
++        virtual bool handleEvent( const ConfigEvent* event );
+         //@}
+         
+ #ifdef EQ_USE_DEPRECATED
+@@ -231,16 +231,16 @@
+          *
+          * @param matrix the matrix
+          */
+-        EQ_EXPORT void setHeadMatrix( const vmml::Matrix4f& matrix );
++        void setHeadMatrix( const vmml::Matrix4f& matrix );
+ 
+         /** @return the current head matrix. */
+-        EQ_EXPORT const vmml::Matrix4f& getHeadMatrix() const;
++        const vmml::Matrix4f& getHeadMatrix() const;
+ 
+         /** Set the eye separation, i.e., the distance between the eyes. */
+-        EQ_EXPORT void setEyeBase( const float eyeBase );
++        void setEyeBase( const float eyeBase );
+ 
+         /** @return the current eye separation. */
+-        EQ_EXPORT float getEyeBase() const;
++        float getEyeBase() const;
+         //@}
+ #endif
+ 
+@@ -264,7 +264,7 @@
+ #endif
+ 
+         /** Undocumented */
+-        EQ_EXPORT void freezeLoadBalancing( const bool onOff );
++        void freezeLoadBalancing( const bool onOff );
+ 
+         /** 
+          * Set the window system for the config's message pump, used by
+@@ -276,7 +276,7 @@
+     protected:
+ 
+         /** @sa eq::net::Session::notifyMapped() */
+-        EQ_EXPORT virtual void notifyMapped( net::NodePtr node );
++        virtual void notifyMapped( net::NodePtr node );
+ 
+     private:
+         /** The node identifier of the node running the application thread. */
+Index: lib/client/configEvent.h
+===================================================================
+--- lib/client/configEvent.h	(revision 3295)
++++ lib/client/configEvent.h	(working copy)
+@@ -36,7 +36,7 @@
       *
+      * When subclassing, make sure to set the packet size.
+      */
+-    struct ConfigEvent : public ConfigPacket
++    struct EQ_EXPORT ConfigEvent : public ConfigPacket
+     {
+     public:
+         ConfigEvent()
+Index: lib/client/eventHandler.h
+===================================================================
+--- lib/client/eventHandler.h	(revision 3295)
++++ lib/client/eventHandler.h	(working copy)
+@@ -29,22 +29,22 @@
+     /**
+      * Base class for window system-specific event handlers
+      */
+-    class EventHandler
++    class EQ_EXPORT EventHandler
+     {
+     public:
+ 
+     protected:
+         /** Constructs a new event handler. */
+-        EQ_EXPORT EventHandler() : _lastEventWindow( 0 ) {}
++        EventHandler() : _lastEventWindow( 0 ) {}
+ 
+         /** Destructs the event handler. */
+-        EQ_EXPORT virtual ~EventHandler(){}
++        virtual ~EventHandler(){}
+ 
+         /** Compute the mouse move delta from the previous pointer event. */
+-        EQ_EXPORT void _computePointerDelta(const Window* window, Event& event);
++        void _computePointerDelta(const Window* window, Event& event);
+ 
+         /** Find and set the rendering context at the mouse position. */
+-        EQ_EXPORT void _getRenderContext( const Window* window, Event& event );
++        void _getRenderContext( const Window* window, Event& event );
+ 
+         /** The previous pointer event to compute mouse movement deltas. */
+         Event _lastPointerEvent;
+Index: lib/client/frame.h
+===================================================================
+--- lib/client/frame.h	(revision 3295)
++++ lib/client/frame.h	(working copy)
+@@ -43,7 +43,7 @@
+     /**
+      * A holder for a frame data and parameters.
+      */
+-    class Frame : public net::Object
++    class EQ_EXPORT Frame : public net::Object
+     {
+     public:
+         /** 
+@@ -69,24 +69,24 @@
+         /** 
+          * Constructs a new Frame.
+          */
+-        EQ_EXPORT Frame();
+-        EQ_EXPORT virtual ~Frame();
++        Frame();
++        virtual ~Frame();
+ 
+         /**
+          * @name Data Access
+          */
+         //@{
+-        EQ_EXPORT const std::string& getName() const;
++        const std::string& getName() const;
+ 
+         const Vector2i& getOffset() const { return _data.offset; }
+         void setOffset( const Vector2i& offset ) { _data.offset = offset;}
+ 
+         /** @return the database-range relative to the destination channel. */
+-        EQ_EXPORT const Range& getRange() const;
+-        EQ_EXPORT void         setRange( const Range& range );
++        const Range& getRange() const;
++        void         setRange( const Range& range );
+ 
+         /** @return the pixel parameters relative to the destination channel. */
+-        EQ_EXPORT const Pixel& getPixel() const;
++        const Pixel& getPixel() const;
+ 
+         /** @return the zoom factor for readback or assemble. */
+         const Zoom& getZoom() const { return _data.zoom; }
+@@ -96,14 +96,14 @@
+         void setZoom( const Zoom& zoom ) { _data.zoom = zoom; }
+ 
+         /** The images of this frame */
+-        EQ_EXPORT const ImageVector& getImages() const;
++        const ImageVector& getImages() const;
+ 
+         /** Set the data for this frame. */
+         void setData( FrameData* data ) { _frameData = data; }
+         FrameData* getData() { return _frameData; }
+ 
+         /** Set the pixel viewport of the frame's data */
+-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
++        void setPixelViewport( const PixelViewport& pvp );
+ 
+         const net::ObjectVersion& getDataVersion( const Eye eye ) const
+             { return _data.frameData[ eye ]; }
+@@ -115,7 +115,7 @@
+         //@{
+ 
+         /** Clear the frame, recycles the images attached to the frame data. */
+-        EQ_EXPORT void clear();
++        void clear();
+ 
+         /** Clear the frame and free all images attached to the frame data. */
+         void flush();
+@@ -127,10 +127,10 @@
+          *
+          * @param glObjects the GL object manager for the current GL context.
+          */
+-        EQ_EXPORT void startReadback( Window::ObjectManager* glObjects );
++        void startReadback( Window::ObjectManager* glObjects );
+         
+         /** Synchronize the image readback. */
+-        EQ_EXPORT void syncReadback();
++        void syncReadback();
+ 
+         /** 
+          * Transmit the frame data to the specified node.
+@@ -159,10 +159,10 @@
+          * 
+          * @return true if the frame is ready, false if not. 
+          */
+-        EQ_EXPORT bool isReady() const;
++        bool isReady() const;
+ 
+         /** Wait for the frame to become available. */
+-        EQ_EXPORT void waitReady() const;
++        void waitReady() const;
+ 
+         /** 
+          * Add a listener which will be incremented when the frame is ready.
+@@ -180,20 +180,20 @@
+         //@}
+ 
+         /** @return the enabled frame buffer attachments. */
+-        EQ_EXPORT uint32_t getBuffers() const;
++        uint32_t getBuffers() const;
+ 
+         /** 
+          * Disable the usage of a frame buffer attachment for all images.
+          * 
+          * @param buffer the buffer to disable.
+          */
+-        EQ_EXPORT void disableBuffer( const Buffer buffer );
++        void disableBuffer( const Buffer buffer );
+ 
+         /** Set color buffer type to read */
+-        EQ_EXPORT void setColorType( const GLuint colorType );
++        void setColorType( const GLuint colorType );
+ 
+         /** Enable/disable alpha usage for newly allocated images. */
+-        EQ_EXPORT void setAlphaUsage( const bool useAlpha );
++        void setAlphaUsage( const bool useAlpha );
+ 
+         /** @internal */
+         void useSendToken( const bool use );
+Index: lib/client/frameData.h
+===================================================================
+--- lib/client/frameData.h	(revision 3295)
++++ lib/client/frameData.h	(working copy)
+@@ -45,11 +45,11 @@
+      * A frame data holds multiple images and is used by frames.
+      * It is not intended to be used directly by application code.
+      */
+-    class FrameData : public net::Object
++    class EQ_EXPORT FrameData : public net::Object
+     {
+     public:
+-        EQ_EXPORT FrameData();
+-        EQ_EXPORT virtual ~FrameData();
++        FrameData();
++        virtual ~FrameData();
+ 
+         /** 
+          * @name Data Access
+@@ -92,10 +92,10 @@
+          * 
+          * @return the image.
+          */
+-        EQ_EXPORT Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
++        Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
+ 
+         /** Clear the frame by recycling the attached images. */
+-        EQ_EXPORT void clear();
++        void clear();
+ 
+         /** 
+          * Read back a set of images according to the current frame data.
+Index: lib/client/global.h
+===================================================================
+--- lib/client/global.h	(revision 3295)
++++ lib/client/global.h	(working copy)
+@@ -66,7 +66,7 @@
+     /** 
+      * Global parameter handling for the Equalizer client library. 
+      */
+-    class Global
++    class EQ_EXPORT Global
+     {
+     public:
+         /** @return the node factory. */
+@@ -77,20 +77,20 @@
+          * 
+          * @param server the default server.
+          */
+-        EQ_EXPORT static void setServer( const std::string& server );
++        static void setServer( const std::string& server );
+ 
+         /** @return the default Equalizer server. */
+-        EQ_EXPORT static const std::string& getServer();
++        static const std::string& getServer();
+ 
+         /** 
+          * Set the config file for the app-local server.
+          * 
+          * @param configFile the default configFile.
+          */
+-        EQ_EXPORT static void setConfigFile( const std::string& configFile );
++        static void setConfigFile( const std::string& configFile );
+ 
+         /** @return the default config file for the app-local server. */
+-        EQ_EXPORT static const std::string& getConfigFile();
++        static const std::string& getConfigFile();
+ 
+         /** 
+          * Global lock for all non-thread-safe Carbon API calls. 
+@@ -105,21 +105,21 @@
+           * @return all directories to search for compressor DSOs during
+           *         eq::init().
+           */
+-        EQ_EXPORT static const StringVector& getPluginDirectories();
++        static const StringVector& getPluginDirectories();
+ 
+         /** add a new directory to search for compressor DSOs. */
+-        EQ_EXPORT static void  addPluginDirectory( const std::string& path );
++        static void  addPluginDirectory( const std::string& path );
+ 
+         /** remove a plugin directory */
+-        EQ_EXPORT static void  removePluginDirectory( const std::string& path );
++        static void  removePluginDirectory( const std::string& path );
+ 
+         /** @return the plugin registry. */
+-        EQ_EXPORT static PluginRegistry& getPluginRegistry();
++        static PluginRegistry& getPluginRegistry();
+ 
+     private:
+-        EQ_EXPORT friend bool init( const int argc, char** argv, 
++        friend EQ_EXPORT bool init( const int argc, char** argv, 
+                                     NodeFactory* nodeFactory );
+-        EQ_EXPORT friend bool exit();
++        friend EQ_EXPORT bool exit();
+ 
+         static StringVector _initPluginDirectories();
+         friend bool testInitPluginDirectories();
+Index: lib/client/image.h
+===================================================================
+--- lib/client/image.h	(revision 3295)
++++ lib/client/image.h	(working copy)
+@@ -33,12 +33,12 @@
+      *
       * An image holds color and depth information for a rectangular region.
       */
 -    class Image
@@ -6805,7 +1314,7 @@
  
          struct PixelData : public base::NonCopyable
          {
-@@ -72,11 +72,11 @@
+@@ -72,11 +72,11 @@
           * @param buffer the buffer type.
           * @param format the format.
           */
@@ -6819,7 +1328,7 @@
  
          /**
           * Set the (OpenGL) type of the pixel data for a buffer.
-@@ -85,14 +85,14 @@
+@@ -85,14 +85,14 @@
           * @param buffer the buffer type.
           * @param type the type.
           */
@@ -6837,7 +1346,7 @@
  
          /** 
           * Set the frame pixel storage type. 
-@@ -109,7 +109,7 @@
+@@ -109,7 +109,7 @@
          Frame::Type getStorageType() const{ return _type; }
  
          /** @return true if the image buffer has valid data. */
@@ -6846,7 +1355,7 @@
  
          /** @return the fractional viewport of the image. */
          //const eq::Viewport& getViewport() const { return _data.vp; }
-@@ -121,33 +121,33 @@
+@@ -121,33 +121,33 @@
           *
           * @param pvp the pixel viewport.
           */
@@ -6886,7 +1395,7 @@
                                                            buffer );
  
          /**
-@@ -162,10 +162,10 @@
+@@ -162,10 +162,10 @@
           *
           * @param buffer the image buffer to clear.
           */
@@ -6899,7 +1408,7 @@
  
          /**
           * Set the pixel data of one of the image buffers.
-@@ -176,7 +176,7 @@
+@@ -176,7 +176,7 @@
           * @param buffer the image buffer to set.
           * @param data the buffer data of size pvp.w * pvp.h * depth.
           */
@@ -6908,7 +1417,7 @@
                                       const uint8_t* data );
  
          /**
-@@ -188,7 +188,7 @@
+@@ -188,7 +188,7 @@
           * @param buffer the image buffer to set.
           * @param data the pixel data.
           */
@@ -6917,7 +1426,7 @@
                                       const PixelData& data );
  
          /** Switch PBO usage for image transfers on. */
-@@ -201,10 +201,10 @@
+@@ -201,10 +201,10 @@
          bool usePBO() const { return _usePBO; }
  
          /** Enable compression and transport of alpha data. */
@@ -6930,7 +1439,7 @@
  
          /** @return true if alpha data can be ignored. */
          bool ignoreAlpha() const { return _ignoreAlpha; }
-@@ -214,19 +214,19 @@
+@@ -214,19 +214,19 @@
          /** @name Texture access */
          //@{
          /** Get the texture of this image. */
@@ -6953,7 +1462,7 @@
                                 const;
          //@}
  
-@@ -244,23 +244,23 @@
+@@ -244,23 +244,23 @@
           * @param glObjects the GL object manager for the current GL context.
           * @sa setStorageType()
           */
@@ -6982,7 +1491,7 @@
                                    const Frame::Buffer buffer   );
  
          /** Setting image offset, used after readback to correct position 
-@@ -268,33 +268,33 @@
+@@ -268,33 +268,33 @@
          void setOffset( int32_t x, int32_t y ) { _pvp.x = x; _pvp.y = y; }
  
          /** Delete all cache data of this image. */
@@ -7022,284 +1531,289 @@
                                          const uint32_t name );
  
      private:
-Index: lib/client/global.h
-===================================================================
---- lib/client/global.h	(revision 3280)
-+++ lib/client/global.h	(working copy)
-@@ -55,7 +55,7 @@
-     /** 
-      * Global parameter handling for the Equalizer client library. 
+Index: lib/client/node.h
+===================================================================
+--- lib/client/node.h	(revision 3295)
++++ lib/client/node.h	(working copy)
+@@ -36,14 +36,14 @@
+      *
+      * Each node is executed in a seperate process.
       */
--    class Global
-+    class EQ_EXPORT Global
+-    class Node : public net::Object
++    class EQ_EXPORT Node : public net::Object
      {
      public:
-         /** @return the node factory. */
-@@ -66,20 +66,20 @@
-          * 
-          * @param server the default server.
+         /** Constructs a new node. */
+-        EQ_EXPORT Node( Config* parent );
++        Node( Config* parent );
+ 
+         /** Destructs the node. */
+-        EQ_EXPORT virtual ~Node();
++        virtual ~Node();
+ 
+         /** 
+          * Returns the config of this node.
+@@ -53,8 +53,8 @@
+         Config*       getConfig()       { return _config; }
+         const Config* getConfig() const { return _config; }
+ 
+-        EQ_EXPORT ClientPtr getClient();
+-        EQ_EXPORT ServerPtr getServer();
++        ClientPtr getClient();
++        ServerPtr getServer();
+ 
+         const PipeVector& getPipes() const { return _pipes; }
+         const std::string& getName() const { return _name; }
+@@ -71,7 +71,7 @@
           */
--        EQ_EXPORT static void setServer( const std::string& server );
-+        static void setServer( const std::string& server );
+         uint32_t getTasks() const { return _tasks; }
  
-         /** @return the default Equalizer server. */
--        EQ_EXPORT static const std::string& getServer();
-+        static const std::string& getServer();
+-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
++        CommandQueue* getNodeThreadQueue();
  
          /** 
-          * Set the config file for the app-local server.
-          * 
-          * @param configFile the default configFile.
+          * Traverse this node and all children using a node visitor.
+@@ -79,7 +79,7 @@
+          * @param visitor the visitor.
+          * @return the result of the visitor traversal.
           */
--        EQ_EXPORT static void setConfigFile( const std::string& configFile );
-+        static void setConfigFile( const std::string& configFile );
+-        EQ_EXPORT VisitorResult accept( NodeVisitor& visitor );
++        VisitorResult accept( NodeVisitor& visitor );
  
-         /** @return the default config file for the app-local server. */
--        EQ_EXPORT static const std::string& getConfigFile();
-+        static const std::string& getConfigFile();
+         /** 
+          * Get a network barrier. 
+@@ -100,8 +100,8 @@
+         FrameData* getFrameData( const net::ObjectVersion& dataVersion );
  
+         /** Wait for the node to be initialized. */
+-        EQ_EXPORT void waitInitialized() const;
+-        EQ_EXPORT bool isRunning() const;
++        void waitInitialized() const;
++        bool isRunning() const;
+         
          /** 
-          * Global lock for all non-thread-safe Carbon API calls. 
-@@ -94,21 +94,21 @@
-           * @return all directories to search for compressor DSOs during
-           *         eq::init().
-           */
--        EQ_EXPORT static const StringVector& getPluginDirectories();
-+        static const StringVector& getPluginDirectories();
+          * Wait for a frame to be started.
+@@ -109,7 +109,7 @@
+          * @param frameNumber the frame number.
+          * @sa releaseFrame()
+          */
+-        EQ_EXPORT void waitFrameStarted( const uint32_t frameNumber ) const;
++        void waitFrameStarted( const uint32_t frameNumber ) const;
  
-         /** add a new directory to search for compressor DSOs. */
--        EQ_EXPORT static void  addPluginDirectory( const std::string& path );
-+        static void  addPluginDirectory( const std::string& path );
+         uint32_t getFinishedFrame() const { return _finishedFrame; }
  
-         /** remove a plugin directory */
--        EQ_EXPORT static void  removePluginDirectory( const std::string& path );
-+        static void  removePluginDirectory( const std::string& path );
+@@ -127,10 +127,10 @@
+             IATTR_ALL
+         };
  
-         /** @return the plugin registry. */
--        EQ_EXPORT static PluginRegistry& getPluginRegistry();
-+        static PluginRegistry& getPluginRegistry();
+-        EQ_EXPORT void setIAttribute( const IAttribute attr,
++        void setIAttribute( const IAttribute attr,
+                                       const int32_t value );
+-        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
+-        EQ_EXPORT static const std::string& getIAttributeString(
++        int32_t getIAttribute( const IAttribute attr ) const;
++        static const std::string& getIAttributeString(
+                                                         const IAttribute attr );
+         //@}
  
-     private:
--        EQ_EXPORT friend bool init( const int argc, char** argv, 
-+        friend EQ_EXPORT bool init( const int argc, char** argv, 
-                                     NodeFactory* nodeFactory );
--        EQ_EXPORT friend bool exit();
-+        friend EQ_EXPORT bool exit();
+@@ -166,7 +166,7 @@
+     protected:
+         friend class Config;
  
-         static StringVector _initPluginDirectories();
-         friend bool testInitPluginDirectories();
-Index: lib/client/projection.h
-===================================================================
---- lib/client/projection.h	(revision 3280)
-+++ lib/client/projection.h	(working copy)
-@@ -34,30 +34,30 @@
-      * wall at the given distance. The fov defines the horizontal and
-      * vertical field of view of the projector.
-      */
--    class Projection
-+    class EQ_EXPORT Projection
-     {
-     public:
--        EQ_EXPORT Projection();
-+        Projection();
+-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
++        virtual void attachToSession( const uint32_t id, 
+                                                 const uint32_t instanceID, 
+                                                 net::Session* session );
  
+@@ -177,21 +177,21 @@
+          * 
+          * @param frameNumber the frame to start.
+          */
+-        EQ_EXPORT void startFrame( const uint32_t frameNumber );
++        void startFrame( const uint32_t frameNumber );
+ 
          /** 
-          * Resize the horizontal FOV.
+          * Signal the completion of a frame to the parent.
           * 
-          * @param ratio the amount by which the FOV is grown or shrunk.
+          * @param frameNumber the frame to end.
           */
--        EQ_EXPORT void resizeHorizontal( const float ratio );
-+        void resizeHorizontal( const float ratio );
+-        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
++        void releaseFrame( const uint32_t frameNumber );
  
          /** 
-          * Resize the vertical FOV.
+          * Release the local synchronization of the parent for a frame.
           * 
-          * @param ratio the amount by which the FOV is grown or shrunk.
+          * @param frameNumber the frame to release.
           */
--        EQ_EXPORT void resizeVertical( const float ratio );
-+        void resizeVertical( const float ratio );
+-        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
++        void releaseFrameLocal( const uint32_t frameNumber );
+         //@}
  
-         /** Set the projection parameters from a wall description. */
--        EQ_EXPORT Projection& operator = ( const Wall& wall );
-+        Projection& operator = ( const Wall& wall );
+         /**
+@@ -207,12 +207,12 @@
+          * 
+          * @param initID the init identifier.
+          */
+-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
++        virtual bool configInit( const uint32_t initID );
  
--        EQ_EXPORT bool operator == ( const Projection& rhs ) const;
--        EQ_EXPORT bool operator != ( const Projection& rhs ) const;
-+        bool operator == ( const Projection& rhs ) const;
-+        bool operator != ( const Projection& rhs ) const;
-         
-         Vector3f origin;
-         float    distance;
-Index: lib/client/pluginRegistry.h
-===================================================================
---- lib/client/pluginRegistry.h	(revision 3280)
-+++ lib/client/pluginRegistry.h	(working copy)
-@@ -23,7 +23,7 @@
- namespace eq 
- {
- 
--class PluginRegistry
-+class EQ_EXPORT PluginRegistry
- {
- public:
- 
-@@ -34,7 +34,7 @@
-     void exit();
- 
-     /* @return all registered compressors plugins */
--    EQ_EXPORT const CompressorVector& getCompressors() const;
-+    const CompressorVector& getCompressors() const;
- 
-     /* @return the compressor with the given name, or 0. */
-     Compressor* findCompressor( const uint32_t name );
-Index: lib/client/wglEventHandler.h
-===================================================================
---- lib/client/wglEventHandler.h	(revision 3280)
-+++ lib/client/wglEventHandler.h	(working copy)
-@@ -31,14 +31,14 @@
-      * by a 'wndproc' callback in the thread which created the window. Each
-      * window has its own WGLEventHandler
-      */
--    class WGLEventHandler : public EventHandler
-+    class EQ_EXPORT WGLEventHandler : public EventHandler
-     {
-     public:
-         /** Constructs a new WGL event handler. */
--        EQ_EXPORT WGLEventHandler( WGLWindowIF* window );
-+        WGLEventHandler( WGLWindowIF* window );
- 
-         /** Destructs the WGL event handler. */
--        EQ_EXPORT virtual ~WGLEventHandler();
-+        virtual ~WGLEventHandler();
- 
          /** 
-          * @return the function pointer of the previously installed window
-Index: lib/client/frame.h
-===================================================================
---- lib/client/frame.h	(revision 3280)
-+++ lib/client/frame.h	(working copy)
-@@ -43,7 +43,7 @@
-     /**
-      * A holder for a frame data and parameters.
-      */
--    class Frame : public net::Object
-+    class EQ_EXPORT Frame : public net::Object
-     {
-     public:
-         /** 
-@@ -69,24 +69,24 @@
-         /** 
-          * Constructs a new Frame.
+          * Exit this node.
           */
--        EQ_EXPORT Frame();
--        EQ_EXPORT virtual ~Frame();
-+        Frame();
-+        virtual ~Frame();
+-        EQ_EXPORT virtual bool configExit();
++        virtual bool configExit();
  
          /**
-          * @name Data Access
+          * Start rendering a frame.
+@@ -226,7 +226,7 @@
+          * @param frameNumber the frame to start.
+          * @sa startFrame(), Config::beginFrame()
           */
-         //@{
--        EQ_EXPORT const std::string& getName() const;
-+        const std::string& getName() const;
+-        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
++        virtual void frameStart( const uint32_t frameID, 
+                                            const uint32_t frameNumber );
  
-         const Vector2i& getOffset() const { return _data.offset; }
-         void setOffset( const Vector2i& offset ) { _data.offset = offset;}
+         /**
+@@ -255,7 +255,7 @@
+          * @param frameNumber the frame finished with draw.
+          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
+          */
+-        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
++        virtual void frameDrawFinish( const uint32_t frameID, 
+                                                 const uint32_t frameNumber );
  
-         /** @return the database-range relative to the destination channel. */
--        EQ_EXPORT const Range& getRange() const;
--        EQ_EXPORT void         setRange( const Range& range );
-+        const Range& getRange() const;
-+        void         setRange( const Range& range );
+         /** 
+@@ -272,7 +272,7 @@
+          * @param frameNumber the frame finished with draw.
+          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
+          */
+-        EQ_EXPORT virtual void frameTasksFinish( const uint32_t frameID, 
++        virtual void frameTasksFinish( const uint32_t frameID, 
+                                                  const uint32_t frameNumber );
+         //@}
  
-         /** @return the pixel parameters relative to the destination channel. */
--        EQ_EXPORT const Pixel& getPixel() const;
-+        const Pixel& getPixel() const;
+@@ -286,7 +286,7 @@
+          *
+          * @param message the error message.
+          */
+-        EQ_EXPORT void setErrorMessage( const std::string& message );
++        void setErrorMessage( const std::string& message );
+         //@}
  
-         /** @return the zoom factor for readback or assemble. */
-         const Zoom& getZoom() const { return _data.zoom; }
-@@ -96,14 +96,14 @@
-         void setZoom( const Zoom& zoom ) { _data.zoom = zoom; }
+     private:
+Index: lib/client/objectManager.h
+===================================================================
+--- lib/client/objectManager.h	(revision 3295)
++++ lib/client/objectManager.h	(working copy)
+@@ -44,7 +44,7 @@
+      * delete - delete.
+      */
+     template< typename T >
+-    class ObjectManager : public base::NonCopyable
++    class EQ_EXPORT ObjectManager : public base::NonCopyable
+     {
+     public:
+         enum
+@@ -53,57 +53,57 @@
+         };
  
-         /** The images of this frame */
--        EQ_EXPORT const ImageVector& getImages() const;
-+        const ImageVector& getImages() const;
+         /** Construct a new object manager. */
+-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext );
++        ObjectManager( GLEWContext* const glewContext );
  
-         /** Set the data for this frame. */
-         void setData( FrameData* data ) { _frameData = data; }
-         FrameData* getData() { return _frameData; }
+         /** Construct a new object manager sharing data with another manager. */
+-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
++        ObjectManager( GLEWContext* const glewContext, ObjectManager* shared );
  
-         /** Set the pixel viewport of the frame's data */
--        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
-+        void setPixelViewport( const PixelViewport& pvp );
+-        EQ_EXPORT virtual ~ObjectManager();
++        virtual ~ObjectManager();
  
-         const net::ObjectVersion& getDataVersion( const Eye eye ) const
-             { return _data.frameData[ eye ]; }
-@@ -115,7 +115,7 @@
-         //@{
+         /** @return the number of object managers currently sharing the data. */
+         int getSharedUsage() const { return _data->getRefCount(); }
  
-         /** Clear the frame, recycles the images attached to the frame data. */
--        EQ_EXPORT void clear();
-+        void clear();
+-        EQ_EXPORT void deleteAll();
++        void deleteAll();
  
-         /** Clear the frame and free all images attached to the frame data. */
-         void flush();
-@@ -127,10 +127,10 @@
-          *
-          * @param glObjects the GL object manager for the current GL context.
-          */
--        EQ_EXPORT void startReadback( Window::ObjectManager* glObjects );
-+        void startReadback( Window::ObjectManager* glObjects );
-         
-         /** Synchronize the image readback. */
--        EQ_EXPORT void syncReadback();
-+        void syncReadback();
+-        EQ_EXPORT GLuint getList( const T& key );
+-        EQ_EXPORT GLuint newList( const T& key, const GLsizei num = 1 );
+-        EQ_EXPORT GLuint obtainList( const T& key, const GLsizei num = 1 );
+-        EQ_EXPORT void   deleteList( const T& key );
++        GLuint getList( const T& key );
++        GLuint newList( const T& key, const GLsizei num = 1 );
++        GLuint obtainList( const T& key, const GLsizei num = 1 );
++        void   deleteList( const T& key );
  
-         /** 
-          * Transmit the frame data to the specified node.
-@@ -159,10 +159,10 @@
-          * 
-          * @return true if the frame is ready, false if not. 
-          */
--        EQ_EXPORT bool isReady() const;
-+        bool isReady() const;
+-        EQ_EXPORT GLuint getTexture( const T& key );
+-        EQ_EXPORT GLuint newTexture( const T& key );
+-        EQ_EXPORT GLuint obtainTexture( const T& key );
+-        EQ_EXPORT void   deleteTexture( const T& key );
++        GLuint getTexture( const T& key );
++        GLuint newTexture( const T& key );
++        GLuint obtainTexture( const T& key );
++        void   deleteTexture( const T& key );
  
-         /** Wait for the frame to become available. */
--        EQ_EXPORT void waitReady() const;
-+        void waitReady() const;
+-        EQ_EXPORT bool   supportsBuffers() const;
+-        EQ_EXPORT GLuint getBuffer( const T& key );
+-        EQ_EXPORT GLuint newBuffer( const T& key );
+-        EQ_EXPORT GLuint obtainBuffer( const T& key );
+-        EQ_EXPORT void   deleteBuffer( const T& key );
++        bool   supportsBuffers() const;
++        GLuint getBuffer( const T& key );
++        GLuint newBuffer( const T& key );
++        GLuint obtainBuffer( const T& key );
++        void   deleteBuffer( const T& key );
  
-         /** 
-          * Add a listener which will be incremented when the frame is ready.
-@@ -180,20 +180,20 @@
-         //@}
+-        EQ_EXPORT bool   supportsPrograms() const;
+-        EQ_EXPORT GLuint getProgram( const T& key );
+-        EQ_EXPORT GLuint newProgram( const T& key );
+-        EQ_EXPORT GLuint obtainProgram( const T& key );
+-        EQ_EXPORT void   deleteProgram( const T& key );
++        bool   supportsPrograms() const;
++        GLuint getProgram( const T& key );
++        GLuint newProgram( const T& key );
++        GLuint obtainProgram( const T& key );
++        void   deleteProgram( const T& key );
  
-         /** @return the enabled frame buffer attachments. */
--        EQ_EXPORT uint32_t getBuffers() const;
-+        uint32_t getBuffers() const;
+-        EQ_EXPORT bool   supportsShaders() const;
+-        EQ_EXPORT GLuint getShader( const T& key );
+-        EQ_EXPORT GLuint newShader( const T& key, const GLenum type );
+-        EQ_EXPORT GLuint obtainShader( const T& key, const GLenum type );
+-        EQ_EXPORT void   deleteShader( const T& key );
++        bool   supportsShaders() const;
++        GLuint getShader( const T& key );
++        GLuint newShader( const T& key, const GLenum type );
++        GLuint obtainShader( const T& key, const GLenum type );
++        void   deleteShader( const T& key );
  
-         /** 
-          * Disable the usage of a frame buffer attachment for all images.
-          * 
-          * @param buffer the buffer to disable.
-          */
--        EQ_EXPORT void disableBuffer( const Buffer buffer );
-+        void disableBuffer( const Buffer buffer );
+-        EQ_EXPORT bool     supportsEqTexture() const;
+-        EQ_EXPORT Texture* getEqTexture( const T& key );
+-        EQ_EXPORT Texture* newEqTexture( const T& key );
+-        EQ_EXPORT Texture* obtainEqTexture( const T& key );
+-        EQ_EXPORT void     deleteEqTexture( const T& key );
++        bool     supportsEqTexture() const;
++        Texture* getEqTexture( const T& key );
++        Texture* newEqTexture( const T& key );
++        Texture* obtainEqTexture( const T& key );
++        void     deleteEqTexture( const T& key );
  
-         /** Set color buffer type to read */
--        EQ_EXPORT void setColorType( const GLuint colorType );
-+        void setColorType( const GLuint colorType );
+-        EQ_EXPORT bool               supportsEqFrameBufferObject() const;
+-        EQ_EXPORT FrameBufferObject* getEqFrameBufferObject( const T& key );
+-        EQ_EXPORT FrameBufferObject* newEqFrameBufferObject( const T& key );
+-        EQ_EXPORT FrameBufferObject* obtainEqFrameBufferObject( const T& key );
+-        EQ_EXPORT void               deleteEqFrameBufferObject( const T& key );
++        bool               supportsEqFrameBufferObject() const;
++        FrameBufferObject* getEqFrameBufferObject( const T& key );
++        FrameBufferObject* newEqFrameBufferObject( const T& key );
++        FrameBufferObject* obtainEqFrameBufferObject( const T& key );
++        void               deleteEqFrameBufferObject( const T& key );
  
-         /** Enable/disable alpha usage for newly allocated images. */
--        EQ_EXPORT void setAlphaUsage( const bool useAlpha );
-+        void setAlphaUsage( const bool useAlpha );
- 
-         /** @internal */
-         void useSendToken( const bool use );
-Index: lib/client/pipe.h
-===================================================================
---- lib/client/pipe.h	(revision 3280)
-+++ lib/client/pipe.h	(working copy)
-@@ -52,26 +52,26 @@
+         const GLEWContext* glewGetContext() const { return _glewContext; }
+         GLEWContext* glewGetContext()             { return _glewContext; }
+Index: lib/client/pipe.h
+===================================================================
+--- lib/client/pipe.h	(revision 3295)
++++ lib/client/pipe.h	(working copy)
+@@ -52,26 +52,26 @@
       * the pipe is non-threaded, in which case the tasks are executed on the
       * Node's main thread.
       */
@@ -7334,7 +1848,7 @@
  
          const WindowVector& getWindows() const { return _windows; }
  
-@@ -91,7 +91,7 @@
+@@ -91,7 +91,7 @@
  
          bool isThreaded() const { return ( _thread != 0 ); }
          uint32_t getCurrentFrame()  const { return _currentFrame; }
@@ -7343,7 +1857,7 @@
  
          /** 
           * Traverse this pipe and all children using a pipe visitor.
-@@ -99,7 +99,7 @@
+@@ -99,7 +99,7 @@
           * @param visitor the visitor.
           * @return the result of the visitor traversal.
           */
@@ -7352,7 +1866,7 @@
  
          /**
           * Set the pipes's pixel viewport.
-@@ -151,10 +151,10 @@
+@@ -151,10 +151,10 @@
          WindowSystem getWindowSystem() const { return _windowSystem; }
  
          /** @return the time in ms elapsed since the frame started. */
@@ -7365,7 +1879,7 @@
          //@}
  
          /**
-@@ -186,8 +186,8 @@
+@@ -186,8 +186,8 @@
          //@}
  
          /** Wait for the pipe to be exited. */
@@ -7376,7 +1890,7 @@
          
          /** 
           * Wait for a frame to be finished.
-@@ -195,7 +195,7 @@
+@@ -195,7 +195,7 @@
           * @param frameNumber the frame number.
           * @sa releaseFrame()
           */
@@ -7385,7 +1899,7 @@
  
          /** 
           * Wait for a frame to be released locally.
-@@ -203,7 +203,7 @@
+@@ -203,7 +203,7 @@
           * @param frameNumber the frame number.
           * @sa releaseFrameLocal()
           */
@@ -7394,7 +1908,7 @@
  
          /** Start the pipe thread. */
          void startThread();
-@@ -252,14 +252,14 @@
+@@ -252,14 +252,14 @@
           * 
           * @param frameNumber the frame to start.
           */
@@ -7411,7 +1925,7 @@
  
          /** 
           * Release the local synchronization of the parent for a frame.
-@@ -272,7 +272,7 @@
+@@ -272,7 +272,7 @@
           * 
           * @param frameNumber the frame to release.
           */
@@ -7420,7 +1934,7 @@
          //@}
  
          /**
-@@ -290,7 +290,7 @@
+@@ -290,7 +290,7 @@
           * @return <code>true</code> if the window system is supported,
           *         <code>false</code> if not.
           */
@@ -7429,7 +1943,7 @@
                                     const;
  
          /** 
-@@ -301,19 +301,19 @@
+@@ -301,19 +301,19 @@
           * 
           * @return the window system currently used by this pipe.
           */
@@ -7452,7 +1966,7 @@
  
          /**
           * Start rendering a frame.
-@@ -331,7 +331,7 @@
+@@ -331,7 +331,7 @@
           * @sa Config::beginFrame(), Node::startFrame(), 
           *     Node::waitFrameStarted()
           */
@@ -7461,7 +1975,7 @@
                                             const uint32_t frameNumber );
  
          /**
-@@ -347,7 +347,7 @@
+@@ -347,7 +347,7 @@
           * @param frameID the per-frame identifier.
           * @param frameNumber the frame to finish.
           */
@@ -7470,7 +1984,7 @@
                                              const uint32_t frameNumber );
  
          /** 
-@@ -359,7 +359,7 @@
+@@ -359,7 +359,7 @@
           * @param frameID the per-frame identifier.
           * @param frameNumber the frame to finished with draw.
           */
@@ -7479,7 +1993,7 @@
                                                  const uint32_t frameNumber );
  
          /** @name Configuration. */
-@@ -376,7 +376,7 @@
+@@ -376,7 +376,7 @@
          //@}
  
          /** @sa net::Object::attachToSession. */
@@ -7488,123 +2002,81 @@
                                                  const uint32_t instanceID, 
                                                  net::Session* session );
  
-Index: lib/client/client.h
-===================================================================
---- lib/client/client.h	(revision 3280)
-+++ lib/client/client.h	(working copy)
-@@ -32,18 +32,18 @@
-     /** 
-      * The client represents a network node in the cluster.
+Index: lib/client/projection.h
+===================================================================
+--- lib/client/projection.h	(revision 3295)
++++ lib/client/projection.h	(working copy)
+@@ -34,30 +34,30 @@
+      * wall at the given distance. The fov defines the horizontal and
+      * vertical field of view of the projector.
       */
--    class Client : public net::Node
-+    class EQ_EXPORT Client : public net::Node
+-    class Projection
++    class EQ_EXPORT Projection
      {
      public:
-         /** 
-          * Constructs a new client.
-          */
--        EQ_EXPORT Client();
-+        Client();
+-        EQ_EXPORT Projection();
++        Projection();
  
-         /**
-          * Destructs the client.
-          */
--        EQ_EXPORT virtual ~Client();
-+        virtual ~Client();
- 
          /** 
-          * Open and connect an Equalizer server to the local client.
-@@ -51,7 +51,7 @@
-          * @param server the server.
-          * @return true if the server was connected, false if not.
+          * Resize the horizontal FOV.
+          * 
+          * @param ratio the amount by which the FOV is grown or shrunk.
           */
--        EQ_EXPORT bool connectServer( ServerPtr server );
-+        bool connectServer( ServerPtr server );
+-        EQ_EXPORT void resizeHorizontal( const float ratio );
++        void resizeHorizontal( const float ratio );
  
          /** 
-          * Disconnect and close the connection of an Equalizer server to the
-@@ -60,37 +60,37 @@
-          * @param server the server.
-          * @return true if the server was disconnected, false if not.
+          * Resize the vertical FOV.
+          * 
+          * @param ratio the amount by which the FOV is grown or shrunk.
           */
--        EQ_EXPORT bool disconnectServer( ServerPtr server );
-+        bool disconnectServer( ServerPtr server );
+-        EQ_EXPORT void resizeVertical( const float ratio );
++        void resizeVertical( const float ratio );
  
-         /** @return true if the client has commands pending, false otherwise. */
--        EQ_EXPORT bool hasCommands();
-+        bool hasCommands();
+         /** Set the projection parameters from a wall description. */
+-        EQ_EXPORT Projection& operator = ( const Wall& wall );
++        Projection& operator = ( const Wall& wall );
  
-         /** 
-          * Get and process one command from the node command queue. Used
-          * internally to run node commands.
-          */
--        EQ_EXPORT void processCommand();
-+        void processCommand();
- 
-         /** @sa net::Node::listen() */
--        EQ_EXPORT virtual bool listen();
-+        virtual bool listen();
-         /** @sa net::Node::stopListening() */
--        EQ_EXPORT virtual bool stopListening();
-+        virtual bool stopListening();
- 
-         /** 
-          * Set the window system for the client's message pump, used by
-          * non-threaded pipes.
-          * @internal
-          */
--        EQ_EXPORT void setWindowSystem( const WindowSystem windowSystem );
-+        void setWindowSystem( const WindowSystem windowSystem );
- 
-         /** Return the command queue to the main node thread. */
-         CommandQueue* getNodeThreadQueue() { return _nodeThreadQueue; }
- 
-     protected:
-         /** @sa net::Node::clientLoop */
--        EQ_EXPORT virtual bool clientLoop();
-+        virtual bool clientLoop();
-         /** @sa net::Node::exitClient(). */
--        EQ_EXPORT virtual bool exitClient();
-+        virtual bool exitClient();
- 
-     private:
-         /** The command->node command queue. */
-@@ -104,13 +104,13 @@
-         };
- 
-         /** @sa net::Node::createNode */
--        EQ_EXPORT virtual net::NodePtr createNode( const uint32_t type );
-+        virtual net::NodePtr createNode( const uint32_t type );
+-        EQ_EXPORT bool operator == ( const Projection& rhs ) const;
+-        EQ_EXPORT bool operator != ( const Projection& rhs ) const;
++        bool operator == ( const Projection& rhs ) const;
++        bool operator != ( const Projection& rhs ) const;
          
-         /** @sa net::Node::dispatchCommand */
--        EQ_EXPORT virtual bool dispatchCommand( net::Command& command );
-+        virtual bool dispatchCommand( net::Command& command );
- 
-         /** @sa net::Node::invokeCommand */
--        EQ_EXPORT virtual net::CommandResult invokeCommand( net::Command& );
-+        virtual net::CommandResult invokeCommand( net::Command& );
- 
-         /** The command functions. */
-         net::CommandResult _cmdExit( net::Command& command );
-Index: lib/client/server.h
-===================================================================
---- lib/client/server.h	(revision 3280)
-+++ lib/client/server.h	(working copy)
-@@ -31,21 +31,21 @@
-     class Node;
-     struct ServerPacket;
- 
+         Vector3f origin;
+         float    distance;
+Index: lib/client/server.cpp
+===================================================================
+--- lib/client/server.cpp	(revision 3295)
++++ lib/client/server.cpp	(working copy)
+@@ -275,4 +275,10 @@
+     _requestHandler.serveRequest( packet->requestID, packet->result );
+     return net::COMMAND_HANDLED;
+ }
++
++void clear( ServerPtr& server )
++{
++	server = 0;
+ }
++
++}
+\ No newline at end of file
+Index: lib/client/server.h
+===================================================================
+--- lib/client/server.h	(revision 3295)
++++ lib/client/server.h	(working copy)
+@@ -39,19 +39,19 @@
+      * and release a Config from the server.
+      * @sa Client::connectServer
+      */
 -    class Server : public net::Node
 +    class EQ_EXPORT Server : public net::Node
      {
      public:
-         /** 
-          * Constructs a new server.
-          */
+         /** Construct a new server. */
 -        EQ_EXPORT Server();
 +        Server();
  
-         /** @name Data Access */
+         /** @name Internal */
          //@{
          void setClient( ClientPtr client );
          ClientPtr getClient(){ return _client; }
@@ -7616,8 +2088,8 @@
          //@}
  
          /** 
-@@ -56,10 +56,10 @@
-          *         config was found.
+@@ -61,10 +61,10 @@
+          * @return The chosen config, or 0if no matching config was found.
           * @sa ConfigParams
           */
 -        EQ_EXPORT Config* chooseConfig( const ConfigParams& parameters );
@@ -7629,7 +2101,7 @@
                                       const std::string& config );
  
          /** 
-@@ -70,16 +70,16 @@
+@@ -75,16 +75,16 @@
           *
           * @param config the configuration.
           */
@@ -7649,11 +2121,139 @@
  
      private:
          /** The local client connected to the server */
-Index: lib/client/window.h
-===================================================================
---- lib/client/window.h	(revision 3280)
-+++ lib/client/window.h	(working copy)
-@@ -48,7 +48,7 @@
+@@ -110,6 +110,8 @@
+         net::CommandResult _cmdShutdownReply( net::Command& command );
+     };
+ 
++	EQ_EXPORT void clear( ServerPtr& server );
++
+     inline std::ostream& operator << ( std::ostream& os, const Server* server )
+     {
+         if( !server )
+Index: lib/client/wall.h
+===================================================================
+--- lib/client/wall.h	(revision 3295)
++++ lib/client/wall.h	(working copy)
+@@ -34,58 +34,58 @@
+      * The three points describe the bottom left, bottom right and top left
+      * coordinate of the wall in real-world coordinates.
+      */
+-    class Wall
++    class EQ_EXPORT Wall
+     {
+     public:
+-        EQ_EXPORT Wall();
++        Wall();
+ 
+         /** 
+          * Resize the wall horizontally.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeHorizontal( const float ratio );
++        void resizeHorizontal( const float ratio );
+ 
+         /** 
+          * Resize the wall vertically.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeVertical( const float ratio );
++        void resizeVertical( const float ratio );
+         
+         /** 
+          * Resize the wall on the left side.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeLeft( const float ratio );
++        void resizeLeft( const float ratio );
+ 
+         /** 
+          * Resize the wall on the right side.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeRight( const float ratio );
++        void resizeRight( const float ratio );
+ 
+         /** 
+          * Resize the wall on the top side.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeTop( const float ratio );
++        void resizeTop( const float ratio );
+ 
+         /** 
+          * Resize the wall on the bottom side.
+          * 
+          * @param ratio the amount by which the wall is grown or shrunk.
+          */
+-        EQ_EXPORT void resizeBottom( const float ratio );
++        void resizeBottom( const float ratio );
+ 
+         /** Compute the sub-frustum for a 2D area on the full wall. */
+-        EQ_EXPORT void apply( const Viewport& viewport);
++        void apply( const Viewport& viewport);
+ 
+         /** Set the wall parameters from a projection description. */
+-        EQ_EXPORT Wall& operator = ( const Projection& projection );
++        Wall& operator = ( const Projection& projection );
+ 
+         /** @return the width of the wall. */
+         float getWidth() const { return (bottomRight - bottomLeft).length(); }
+@@ -93,8 +93,8 @@
+         /** @return the height of the wall. */
+         float getHeight() const { return (topLeft - bottomLeft).length(); }
+ 
+-        EQ_EXPORT bool operator == ( const Wall& rhs ) const;
+-        EQ_EXPORT bool operator != ( const Wall& rhs ) const;
++        bool operator == ( const Wall& rhs ) const;
++        bool operator != ( const Wall& rhs ) const;
+ 
+         Vector3f bottomLeft;
+         Vector3f bottomRight;
+Index: lib/client/wglEventHandler.h
+===================================================================
+--- lib/client/wglEventHandler.h	(revision 3295)
++++ lib/client/wglEventHandler.h	(working copy)
+@@ -31,14 +31,14 @@
+      * by a 'wndproc' callback in the thread which created the window. Each
+      * window has its own WGLEventHandler
+      */
+-    class WGLEventHandler : public EventHandler
++    class EQ_EXPORT WGLEventHandler : public EventHandler
+     {
+     public:
+         /** Constructs a new WGL event handler. */
+-        EQ_EXPORT WGLEventHandler( WGLWindowIF* window );
++        WGLEventHandler( WGLWindowIF* window );
+ 
+         /** Destructs the WGL event handler. */
+-        EQ_EXPORT virtual ~WGLEventHandler();
++        virtual ~WGLEventHandler();
+ 
+         /** 
+          * @return the function pointer of the previously installed window
+Index: lib/client/wglWindowEvent.h
+===================================================================
+--- lib/client/wglWindowEvent.h	(revision 3295)
++++ lib/client/wglWindowEvent.h	(working copy)
+@@ -24,7 +24,7 @@
+ namespace eq
+ {
+     /** A window-system event for a WGLWindowIF */
+-    class WGLWindowEvent : public Event
++    class EQ_EXPORT WGLWindowEvent : public Event
+     {
+     public:
+         // Native event data
+Index: lib/client/window.h
+===================================================================
+--- lib/client/window.h	(revision 3295)
++++ lib/client/window.h	(working copy)
+@@ -48,7 +48,7 @@
       * to synchronize the state of OpenGL objects between windows. Therefore,
       * Equalizer calls flush() at the end of each frame for each window.
       */
@@ -7662,7 +2262,7 @@
      {
      public:
          /** Stores current drawable characteristics. */
-@@ -92,27 +92,27 @@
+@@ -92,27 +92,27 @@
          };
  
          /** Constructs a new window. */
@@ -7699,7 +2299,7 @@
  
          const ChannelVector& getChannels() { return _channels; }
  
-@@ -138,7 +138,7 @@
+@@ -138,7 +138,7 @@
           * @param visitor the visitor.
           * @return the result of the visitor traversal.
           */
@@ -7708,7 +2308,7 @@
  
          /** 
           * Set the window with which this window shares the OpenGL context,
-@@ -169,10 +169,10 @@
+@@ -169,10 +169,10 @@
           * @return the extended OpenGL function table for the window's OpenGL
           *         context.
           */
@@ -7721,7 +2321,7 @@
  
          /** @return information about the current drawable. */
          const DrawableConfig& getDrawableConfig() const 
-@@ -189,12 +189,12 @@
+@@ -189,12 +189,12 @@
           * 
           * @param pvp the viewport in pixels.
           */
@@ -7736,7 +2336,7 @@
  
          /** 
           * @return the window's fractional viewport.
-@@ -205,7 +205,7 @@
+@@ -205,7 +205,7 @@
          void addRenderContext( const RenderContext& context );
  
          /** Get the last rendering context at the x, y position. */
@@ -7745,7 +2345,7 @@
                                           RenderContext& context ) const;
          //@}
  
-@@ -237,10 +237,10 @@
+@@ -237,10 +237,10 @@
              IATTR_ALL
          };
  
@@ -7759,7 +2359,7 @@
                                                  const IAttribute attr );
          //@}
  
-@@ -265,7 +265,7 @@
+@@ -265,7 +265,7 @@
           * e.g., swapBuffers() to the OS window. The os-specific window has to
           * be initialized.
           */
@@ -7768,7 +2368,7 @@
  
          const OSWindow* getOSWindow() const { return _osWindow; }
          OSWindow*       getOSWindow()       { return _osWindow; }
-@@ -282,7 +282,7 @@
+@@ -282,7 +282,7 @@
           *
           * @param message the error message.
           */
@@ -7777,7 +2377,7 @@
          //@}
  
          /**
-@@ -303,7 +303,7 @@
+@@ -303,7 +303,7 @@
           * @param event the received window system event.
           * @return true when the event was handled, false if not.
           */
@@ -7786,7 +2386,7 @@
  
          //@}
  
-@@ -311,18 +311,18 @@
+@@ -311,18 +311,18 @@
          double getFPS() const { return _avgFPS; }
  
          /* Draw FPS count */
@@ -7808,7 +2408,7 @@
                                                  const uint32_t instanceID, 
                                                  net::Session* session );
  
-@@ -363,14 +363,14 @@
+@@ -363,14 +363,14 @@
           * 
           * @param initID the init identifier.
           */
@@ -7825,7 +2425,7 @@
  
          /** 
           * Initialize the OpenGL state for this window.
-@@ -379,13 +379,13 @@
+@@ -379,13 +379,13 @@
           * @return <code>true</code> if the initialization was successful,
           *         <code>false</code> if not.
           */
@@ -7842,7 +2442,7 @@
  
          /** De-initializer the OpenGL state for this window. */
          virtual bool configExitGL() { return true; }
-@@ -416,7 +416,7 @@
+@@ -416,7 +416,7 @@
           * @param frameID the per-frame identifier.
           * @param frameNumber the frame to finish.
           */
@@ -7851,7 +2451,7 @@
                                              const uint32_t frameNumber );
  
          /** 
-@@ -440,13 +440,13 @@
+@@ -440,13 +440,13 @@
           * this method will only call OSWindow::makeCurrent if it has not been
           * done before for this window.
           */
@@ -7868,31632 +2468,904 @@
          //@}
  
      private:
-Index: lib/client/node.h
-===================================================================
---- lib/client/node.h	(revision 3280)
-+++ lib/client/node.h	(working copy)
-@@ -36,14 +36,14 @@
-      *
-      * Each node is executed in a seperate process.
+Index: lib/net/barrier.h
+===================================================================
+--- lib/net/barrier.h	(revision 3295)
++++ lib/net/barrier.h	(working copy)
+@@ -77,7 +77,7 @@
+          * The implementation assumes that the master node instance also enters
+          * the barrier.
+          */
+-        EQ_EXPORT void enter();
++        void enter();
+         //@}
+ 
+     protected:
+Index: lib/net/bufferConnection.h
+===================================================================
+--- lib/net/bufferConnection.h	(revision 3295)
++++ lib/net/bufferConnection.h	(working copy)
+@@ -28,22 +28,22 @@
+     /**
+      * A proxy connection buffering outgoing data into a memory region.
       */
--    class Node : public net::Object
-+    class EQ_EXPORT Node : public net::Object
+-    class BufferConnection : public Connection
++    class EQ_EXPORT BufferConnection : public Connection
      {
      public:
-         /** Constructs a new node. */
--        EQ_EXPORT Node( Config* parent );
-+        Node( Config* parent );
+-        EQ_EXPORT BufferConnection();
+-        EQ_EXPORT virtual ~BufferConnection();
++        BufferConnection();
++        virtual ~BufferConnection();
  
-         /** Destructs the node. */
--        EQ_EXPORT virtual ~Node();
-+        virtual ~Node();
+-        EQ_EXPORT void sendBuffer( ConnectionPtr connection );
++        void sendBuffer( ConnectionPtr connection );
  
-         /** 
-          * Returns the config of this node.
-@@ -53,8 +53,8 @@
-         Config*       getConfig()       { return _config; }
-         const Config* getConfig() const { return _config; }
+-        EQ_EXPORT uint64_t getSize() const { return _buffer.getSize(); }
++        uint64_t getSize() const { return _buffer.getSize(); }
  
--        EQ_EXPORT ClientPtr getClient();
--        EQ_EXPORT ServerPtr getServer();
-+        ClientPtr getClient();
-+        ServerPtr getServer();
+     protected:
+         virtual void readNB( void* buffer, const uint64_t bytes )
+             { EQDONTCALL; }
+         virtual int64_t readSync( void* buffer, const uint64_t bytes )
+             { EQDONTCALL; return -1; }
+-        EQ_EXPORT virtual int64_t write( const void* buffer,
++        virtual int64_t write( const void* buffer,
+                                          const uint64_t bytes );
  
-         const PipeVector& getPipes() const { return _pipes; }
-         const std::string& getName() const { return _name; }
-@@ -71,7 +71,7 @@
+     private:
+Index: lib/net/commandCache.h
+===================================================================
+--- lib/net/commandCache.h	(revision 3295)
++++ lib/net/commandCache.h	(working copy)
+@@ -37,7 +37,7 @@
+      * Commands are retained and released whenever they are not directly
+      * processed, e.g., when pushed to another thread using a CommandQueue.
+      */
+-    class CommandCache
++    class EQ_EXPORT CommandCache
+     {
+     public:
+         CommandCache();
+Index: lib/net/commandQueue.h
+===================================================================
+--- lib/net/commandQueue.h	(revision 3295)
++++ lib/net/commandQueue.h	(working copy)
+@@ -32,21 +32,21 @@
+     /**
+      * A CommandQueue is a thread-safe queue for command packets.
+      */
+-    class CommandQueue : public base::NonCopyable
++    class EQ_EXPORT CommandQueue : public base::NonCopyable
+     {
+     public:
+-        EQ_EXPORT CommandQueue();
+-        EQ_EXPORT virtual ~CommandQueue();
++        CommandQueue();
++        virtual ~CommandQueue();
+ 
+         /** 
+          * Push a command to the queue.
+          * 
+          * @param packet the command packet.
           */
-         uint32_t getTasks() const { return _tasks; }
+-        EQ_EXPORT virtual void push( Command& packet );
++        virtual void push( Command& packet );
  
--        EQ_EXPORT CommandQueue* getNodeThreadQueue();
-+        CommandQueue* getNodeThreadQueue();
+         /** Push a command to the front of the queue. */
+-        EQ_EXPORT virtual void pushFront( Command& packet );
++        virtual void pushFront( Command& packet );
  
+         /** Wake up the command queue, pop() will return 0. */
+         virtual void wakeup() { _commands.push( static_cast< Command* >( 0 )); }
+@@ -58,7 +58,7 @@
+          * 
+          * @return the next command in the queue.
+          */
+-        EQ_EXPORT virtual Command* pop();
++        virtual Command* pop();
+ 
          /** 
-          * Traverse this node and all children using a node visitor.
-@@ -79,7 +79,7 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
+          * Try to pop a command from the queue.
+@@ -67,14 +67,14 @@
+          * 
+          * @return the next command in the queue, or 0 if no command is queued.
           */
--        EQ_EXPORT VisitorResult accept( NodeVisitor& visitor );
-+        VisitorResult accept( NodeVisitor& visitor );
+-        EQ_EXPORT virtual Command* tryPop();
++        virtual Command* tryPop();
  
          /** 
-          * Get a network barrier. 
-@@ -100,8 +100,8 @@
-         FrameData* getFrameData( const net::ObjectVersion& dataVersion );
+          * Peek the command at the end of the queue.
+          *
+          * @return the last command in the queue, or 0 if no command is queued.
+          */
+-        EQ_EXPORT Command* back() const;
++        Command* back() const;
  
-         /** Wait for the node to be initialized. */
--        EQ_EXPORT void waitInitialized() const;
--        EQ_EXPORT bool isRunning() const;
-+        void waitInitialized() const;
-+        bool isRunning() const;
-         
          /** 
-          * Wait for a frame to be started.
-@@ -109,7 +109,7 @@
-          * @param frameNumber the frame number.
-          * @sa releaseFrame()
+          * @return <code>true</code> if the command queue is empty,
+Index: lib/net/connection.h
+===================================================================
+--- lib/net/connection.h	(revision 3295)
++++ lib/net/connection.h	(working copy)
+@@ -66,7 +66,7 @@
+      * The Connection is used reference-counted in eq::net, since it has
+      * multiple owners, such as the ConnectionSet and Node.
+      */
+-    class Connection : public base::Referenced, public base::NonCopyable
++    class EQ_EXPORT Connection : public base::Referenced, public base::NonCopyable
+     {
+     public:
+         enum State //! The current state of the Connection
+@@ -86,7 +86,7 @@
+          * @param description the connection parameters.
+          * @return the connection.
           */
--        EQ_EXPORT void waitFrameStarted( const uint32_t frameNumber ) const;
-+        void waitFrameStarted( const uint32_t frameNumber ) const;
+-        EQ_EXPORT static ConnectionPtr create( ConnectionDescriptionPtr 
++        static ConnectionPtr create( ConnectionDescriptionPtr 
+                                                    description );
  
-         uint32_t getFinishedFrame() const { return _finishedFrame; }
+         /** @name Data Access */
+@@ -108,10 +108,10 @@
+          * 
+          * @param description the connection parameters.
+          */
+-        EQ_EXPORT void setDescription( ConnectionDescriptionPtr description );
++        void setDescription( ConnectionDescriptionPtr description );
  
-@@ -127,10 +127,10 @@
-             IATTR_ALL
-         };
- 
--        EQ_EXPORT void setIAttribute( const IAttribute attr,
-+        void setIAttribute( const IAttribute attr,
-                                       const int32_t value );
--        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
--        EQ_EXPORT static const std::string& getIAttributeString(
-+        int32_t getIAttribute( const IAttribute attr ) const;
-+        static const std::string& getIAttributeString(
-                                                         const IAttribute attr );
+         /** @return the description for this connection. */
+-        EQ_EXPORT ConnectionDescriptionPtr getDescription() const;
++        ConnectionDescriptionPtr getDescription() const;
          //@}
  
-@@ -166,7 +166,7 @@
-     protected:
-         friend class Config;
  
--        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
-+        virtual void attachToSession( const uint32_t id, 
-                                                 const uint32_t instanceID, 
-                                                 net::Session* session );
- 
-@@ -177,21 +177,21 @@
-          * 
-          * @param frameNumber the frame to start.
+@@ -190,7 +190,7 @@
+          * @param bytes the number of bytes to read.
+          * @sa recvSync()
           */
--        EQ_EXPORT void startFrame( const uint32_t frameNumber );
-+        void startFrame( const uint32_t frameNumber );
+-        EQ_EXPORT void recvNB( void* buffer, const uint64_t bytes );
++        void recvNB( void* buffer, const uint64_t bytes );
  
          /** 
-          * Signal the completion of a frame to the parent.
-          * 
-          * @param frameNumber the frame to end.
+          * Finish reading data from the connection.
+@@ -204,7 +204,7 @@
+          * @param bytes return value, the number of bytes read.
+          * @return true if all requested data has been read, false otherwise.
           */
--        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
-+        void releaseFrame( const uint32_t frameNumber );
+-        EQ_EXPORT bool recvSync( void** buffer, uint64_t* bytes );
++        bool recvSync( void** buffer, uint64_t* bytes );
  
-         /** 
-          * Release the local synchronization of the parent for a frame.
-          * 
-          * @param frameNumber the frame to release.
+         void getRecvData( void** buffer, uint64_t* bytes )
+             { *buffer = _aioBuffer; *bytes = _aioBytes; }
+@@ -253,7 +253,7 @@
+          * @return true if all data has been read, false if not.
+          * @sa lockSend(), unlockSend()
           */
--        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
-+        void releaseFrameLocal( const uint32_t frameNumber );
-         //@}
+-        EQ_EXPORT bool send( const void* buffer, const uint64_t bytes, 
++        bool send( const void* buffer, const uint64_t bytes, 
+                              const bool isLocked = false );
  
-         /**
-@@ -207,12 +207,12 @@
-          * 
-          * @param initID the init identifier.
+         /** Lock the connection, no other thread can send data. */
+@@ -307,7 +307,7 @@
+          * @param size the data size in bytes.
+          * @return true if all data has been read, false if not.
           */
--        EQ_EXPORT virtual bool configInit( const uint32_t initID );
-+        virtual bool configInit( const uint32_t initID );
+-        EQ_EXPORT bool send( Packet& packet, const void* data,
++        bool send( Packet& packet, const void* data,
+                              const uint64_t size );
  
          /** 
-          * Exit this node.
-          */
--        EQ_EXPORT virtual bool configExit();
-+        virtual bool configExit();
+Index: lib/net/connectionDescription.h
+===================================================================
+--- lib/net/connectionDescription.h	(revision 3295)
++++ lib/net/connectionDescription.h	(working copy)
+@@ -32,7 +32,7 @@
+      *
+      * @sa Node
+      */
+-    class ConnectionDescription : public base::Referenced
++    class EQ_EXPORT ConnectionDescription : public base::Referenced
+     {
+     public:
+         ConnectionDescription() 
+@@ -72,8 +72,8 @@
+         char launchCommandQuote;
+ 
+         /** @return this description as a string. */
+-        EQ_EXPORT std::string toString() const;
+-        EQ_EXPORT void serialize( std::ostream& os ) const;
++        std::string toString() const;
++        void serialize( std::ostream& os ) const;
+ 
+         /** 
+          * Reads the connection description from a string.
+@@ -84,23 +84,23 @@
+          * @return <code>true</code> if the information was read correctly, 
+          *         <code>false</code> if not.
+          */
+-        EQ_EXPORT bool fromString( std::string& data );
++        bool fromString( std::string& data );
+ 
+         /** @name Data Access
+          *
+          * std::strings are not public because of DLL allocation issues.
+          */
+         //@{
+-        EQ_EXPORT void setHostname( const std::string& hostname );
+-        EQ_EXPORT const std::string& getHostname() const;
+-        EQ_EXPORT void setLaunchCommand( const std::string& launchCommand );
+-        EQ_EXPORT const std::string& getLaunchCommand() const;
+-        EQ_EXPORT void setFilename( const std::string& filename );
+-        EQ_EXPORT const std::string& getFilename() const;
++        void setHostname( const std::string& hostname );
++        const std::string& getHostname() const;
++        void setLaunchCommand( const std::string& launchCommand );
++        const std::string& getLaunchCommand() const;
++        void setFilename( const std::string& filename );
++        const std::string& getFilename() const;
+         //@}
+ 
+     protected:
+-        EQ_EXPORT virtual ~ConnectionDescription() {}
++        virtual ~ConnectionDescription() {}
+ 
+     private:
+         /** 
+Index: lib/net/connectionSet.h
+===================================================================
+--- lib/net/connectionSet.h	(revision 3295)
++++ lib/net/connectionSet.h	(working copy)
+@@ -41,7 +41,7 @@
+      *
+      * From the set, a connection with pending events can be selected.
+      */
+-    class ConnectionSet : public ConnectionListener
++    class EQ_EXPORT ConnectionSet : public ConnectionListener
+     {
+     public:
+         enum Event
+@@ -58,12 +58,12 @@
+             EVENT_ALL
+         };
  
-         /**
-          * Start rendering a frame.
-@@ -226,7 +226,7 @@
-          * @param frameNumber the frame to start.
-          * @sa startFrame(), Config::beginFrame()
+-        EQ_EXPORT ConnectionSet();
+-        EQ_EXPORT ~ConnectionSet();
++        ConnectionSet();
++        ~ConnectionSet();
+ 
+-        EQ_EXPORT void addConnection( ConnectionPtr connection );
+-        EQ_EXPORT bool removeConnection( ConnectionPtr connection );
+-        EQ_EXPORT void clear();
++        void addConnection( ConnectionPtr connection );
++        bool removeConnection( ConnectionPtr connection );
++        void clear();
+         size_t size()  const { return _connections.size(); }
+         bool   empty() const { return _connections.empty(); }
+ 
+@@ -79,12 +79,12 @@
+          *                indefinitly.
+          * @return The event occured during selection.
           */
--        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
-+        virtual void frameStart( const uint32_t frameID, 
-                                            const uint32_t frameNumber );
+-        EQ_EXPORT Event select( const int timeout = -1 );
++        Event select( const int timeout = -1 );
  
          /**
-@@ -255,7 +255,7 @@
-          * @param frameNumber the frame finished with draw.
-          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
+          * Interrupt the current or next select call.
           */
--        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
-+        virtual void frameDrawFinish( const uint32_t frameID, 
-                                                 const uint32_t frameNumber );
+-        EQ_EXPORT void interrupt();
++        void interrupt();
  
-         /** 
-@@ -272,7 +272,7 @@
-          * @param frameNumber the frame finished with draw.
-          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
-          */
--        EQ_EXPORT virtual void frameTasksFinish( const uint32_t frameID, 
-+        virtual void frameTasksFinish( const uint32_t frameID, 
-                                                  const uint32_t frameNumber );
-         //@}
+         int           getError()     { return _error; }
+         ConnectionPtr getConnection(){ return _connection; }
+Index: lib/net/dataOStream.h
+===================================================================
+--- lib/net/dataOStream.h	(revision 3295)
++++ lib/net/dataOStream.h	(working copy)
+@@ -35,7 +35,7 @@
+      *
+      * Derived classes send the data using the appropriate command packets.
+      */
+-    class DataOStream
++    class EQ_EXPORT DataOStream
+     {
+     public:
+         /** @name Internal */
+@@ -95,10 +95,10 @@
+             }
  
-@@ -286,7 +286,7 @@
-          *
-          * @param message the error message.
-          */
--        EQ_EXPORT void setErrorMessage( const std::string& message );
-+        void setErrorMessage( const std::string& message );
+         /** Write a number of bytes from data into the stream. */
+-        EQ_EXPORT void write( const void* data, uint64_t size );
++        void write( const void* data, uint64_t size );
+ 
+         /** Write one block of data into the stream and close it immediately. */
+-        EQ_EXPORT void writeOnce( const void* data, uint64_t size );
++        void writeOnce( const void* data, uint64_t size );
          //@}
  
-     private:
-Index: server/channel.h
-===================================================================
---- server/channel.h	(revision 3280)
-+++ server/channel.h	(working copy)
-@@ -52,7 +52,7 @@
-     /**
-      * The channel.
+  
+Index: lib/net/dispatcher.h
+===================================================================
+--- lib/net/dispatcher.h	(revision 3295)
++++ lib/net/dispatcher.h	(working copy)
+@@ -40,12 +40,12 @@
+      * Provides packet dispatch through a command queue and command handler
+      * table. Returns the result of the invoked command handlers.
       */
--    class Channel : public net::Object
-+    class EQSERVER_EXPORT Channel : public net::Object
+-    class Dispatcher
++    class EQ_EXPORT Dispatcher
      {
      public:
-         enum State
-@@ -70,7 +70,7 @@
-         /** 
-          * Constructs a new Channel.
+-        EQ_EXPORT Dispatcher();
+-		EQ_EXPORT Dispatcher( const Dispatcher& from );
+-        EQ_EXPORT virtual ~Dispatcher();
++        Dispatcher();
++		Dispatcher( const Dispatcher& from );
++        virtual ~Dispatcher();
+ 
+         /** NOP assignment operator. */
+         const Dispatcher& operator = ( const Dispatcher& ) { return *this; }
+@@ -58,7 +58,7 @@
+          *         be dispatched again later)
+          * @sa registerCommand
           */
--        EQSERVER_EXPORT Channel();
-+        Channel();
+-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
++        virtual bool dispatchCommand( Command& command );
  
          /** 
-          * Constructs a new deep copy of a channel.
-@@ -92,8 +92,8 @@
-         Config* getConfig();
-         const Config* getConfig() const;
- 
--        EQSERVER_EXPORT Node* getNode();
--        EQSERVER_EXPORT const Node* getNode() const;
-+        Node* getNode();
-+        const Node* getNode() const;
- 
-         Pipe* getPipe();
-         const Pipe* getPipe() const;
-@@ -115,8 +115,8 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
+          * Handles a received command packet for this object by calling the
+@@ -68,7 +68,7 @@
+          * @return the result of the operation.
+          * @sa registerCommand
           */
--        EQSERVER_EXPORT VisitorResult accept( ChannelVisitor& visitor );
--        EQSERVER_EXPORT VisitorResult accept( ConstChannelVisitor& ) const;
-+        VisitorResult accept( ChannelVisitor& visitor );
-+        VisitorResult accept( ConstChannelVisitor& ) const;
+-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
++        virtual CommandResult invokeCommand( Command& command );
+  
+     protected:
+         /** 
+@@ -97,7 +97,7 @@
+         CommandResult _cmdUnknown( Command& command );
  
-         /** Increase channel activition count. */
-         void activate();
-Index: server/compound.h
-===================================================================
---- server/compound.h	(revision 3280)
-+++ server/compound.h	(working copy)
-@@ -52,13 +52,13 @@
+     private:
+-        EQ_EXPORT void _registerCommand( const uint32_t command, 
++        void _registerCommand( const uint32_t command, 
+                                          const CommandFunc< Dispatcher >& func,
+                                          CommandQueue* destinationQueue );
+ 
+Index: lib/net/namedPipeConnection.h
+===================================================================
+--- lib/net/namedPipeConnection.h	(revision 3295)
++++ lib/net/namedPipeConnection.h	(working copy)
+@@ -37,7 +37,7 @@
      /**
-      * The compound.
+      * A .
       */
--    class Compound
-+    class EQSERVER_EXPORT Compound
+-    class NamedPipeConnection
++    class EQ_EXPORT NamedPipeConnection
+ #ifdef WIN32
+         : public Connection
+ #else
+Index: lib/net/node.cpp
+===================================================================
+--- lib/net/node.cpp	(revision 3295)
++++ lib/net/node.cpp	(working copy)
+@@ -339,7 +339,7 @@
+ 
+     if( !connection->isClosed( ))
+         connection->close(); // cancels pending IO's
+-    delete reinterpret_cast< uint64_t* >( buffer );
++    //delete reinterpret_cast< uint64_t* >( buffer );
+ }
+ 
+ void Node::_cleanup()
+Index: lib/net/node.h
+===================================================================
+--- lib/net/node.h	(revision 3295)
++++ lib/net/node.h	(working copy)
+@@ -56,7 +56,7 @@
+      * sessions, that is, one or more Session can be mapped to a Node, in which
+      * case the node will dispatch packets to these sessions.
+      */
+-    class Node : public Dispatcher, public base::Referenced
++    class EQ_EXPORT Node : public Dispatcher, public base::Referenced
      {
      public:
-         /** 
-          * Constructs a new Compound.
-          */
--        EQSERVER_EXPORT Compound();
-+        Compound();
+         /** The state of the node. */
+@@ -69,7 +69,7 @@
+         };
  
-         /**
-          * Constructs a new, deep copy of the passed compound
-@@ -114,7 +114,7 @@
+         /** Construct a new Node. */
+-        EQ_EXPORT Node();
++        Node();
+ 
+         /** @name Data Access. */
+         //@{
+@@ -87,14 +87,14 @@
           * 
-          * @param child the child.
+          * @param name the program name to start this node.
           */
--        EQSERVER_EXPORT void addChild( Compound* child );
-+        void addChild( Compound* child );
+-        EQ_EXPORT void setProgramName( const std::string& name );
++        void setProgramName( const std::string& name );
  
          /** 
-          * Removes a child from this compound.
-@@ -163,7 +163,7 @@
+          * Set the working directory to start this node.
           * 
-          * @param channel the channel.
+          * @param name the working directory to start this node.
           */
--        EQSERVER_EXPORT void setChannel( Channel* channel );
-+        void setChannel( Channel* channel );
+-        EQ_EXPORT void setWorkDir( const std::string& name );
++        void setWorkDir( const std::string& name );
  
          /** 
-          * Return the channel of this compound.
-@@ -173,8 +173,8 @@
-          *
-          * @return the channel of this compound.
+          * Get a node by identifier.
+@@ -126,7 +126,7 @@
+          * @return <code>true</code> if the client was successfully initialized,
+          *         <code>false</code> otherwise.
           */
--        EQSERVER_EXPORT Channel* getChannel();
--        EQSERVER_EXPORT const Channel* getChannel() const;
-+        Channel* getChannel();
-+        const Channel* getChannel() const;
+-        EQ_EXPORT virtual bool initLocal( const int argc, char** argv );
++        virtual bool initLocal( const int argc, char** argv );
  
-         Window* getWindow();
-         const Window* getWindow() const;
-@@ -186,7 +186,7 @@
-         Frustum& getFrustum() { return _frustum; }
+         /** Exit a local, listening node. */
+         virtual bool exitLocal() { return stopListening(); }
+@@ -146,7 +146,7 @@
+          *         <code>false</code> if not.
+          * @sa connect
+          */
+-        EQ_EXPORT virtual bool listen();
++        virtual bool listen();
  
-         /** Attach a load balancer to this compound. */
--        EQSERVER_EXPORT void addEqualizer( Equalizer* equalizer );
-+        void addEqualizer( Equalizer* equalizer );
+         /** 
+          * Stop this node.
+@@ -157,7 +157,7 @@
+          * @return <code>true</code> if the node was stopped, <code>false</code>
+          *         if it was not stopped.
+          */
+-        EQ_EXPORT virtual bool stopListening();
++        virtual bool stopListening();
  
-         /** Get the attached load balancers. */
-         const EqualizerVector& getEqualizers() const
-@@ -283,7 +283,7 @@
-          *
-          * @param frame the input frame.
+         /** 
+          * Connect a node proxy to this node.
+@@ -185,7 +185,7 @@
+          *         <code>false</code> otherwise.
+          * @sa initConnect, syncConnect
           */
--        EQSERVER_EXPORT void addInputFrame( Frame* frame );
-+        void addInputFrame( Frame* frame );
+-        EQ_EXPORT bool connect( NodePtr node );
++        bool connect( NodePtr node );
  
-         /** @return the vector of input frames. */
-         const FrameVector& getInputFrames() const {return _inputFrames; }
-@@ -293,7 +293,7 @@
-          *
-          * @param frame the output frame.
+         /** 
+          * Start connecting and potentially launching a node using the
+@@ -199,7 +199,7 @@
+          *         <code>false</code> otherwise.
+          * @sa syncConnect
           */
--        EQSERVER_EXPORT void addOutputFrame( Frame* frame );
-+        void addOutputFrame( Frame* frame );
+-        EQ_EXPORT bool initConnect( NodePtr node );
++        bool initConnect( NodePtr node );
  
-         /** @return the vector of output frames. */
-         const FrameVector& getOutputFrames() const { return _outputFrames; }
-@@ -348,7 +348,7 @@
+         /** 
+          * Synchronize the connection initiated by initConnect().
+@@ -212,7 +212,7 @@
+          *         <code>false</code> otherwise.
+          * @sa initConnect
+          */
+-        EQ_EXPORT bool syncConnect( NodePtr node );
++        bool syncConnect( NodePtr node );
+ 
+         /** 
+          * Create and connect a node given by an identifier.
+@@ -230,7 +230,7 @@
+          * @return <code>true</code> if the node was disconnected correctly,
+          *         <code>false</code> otherwise.
+          */
+-        EQ_EXPORT bool disconnect( NodePtr node );
++        bool disconnect( NodePtr node );
+         //@}
+ 
+ 
+@@ -251,7 +251,7 @@
           * 
-          * @param wall the wall description.
+          * @param cd the connection description.
           */
--        EQSERVER_EXPORT void setWall( const eq::Wall& wall );
-+        void setWall( const eq::Wall& wall );
+-        EQ_EXPORT void addConnectionDescription( ConnectionDescriptionPtr cd );
++        void addConnectionDescription( ConnectionDescriptionPtr cd );
          
-         /** @return the last specified wall description. */
-         const eq::Wall& getWall() const { return _frustum.getWall(); }
-@@ -358,7 +358,7 @@
+         /** 
+          * Removes a connection description.
+@@ -265,7 +265,7 @@
           * 
-          * @param projection the projection description.
+          * @return the number of stored connection descriptions. 
           */
--        EQSERVER_EXPORT void setProjection( const eq::Projection& projection );
-+        void setProjection( const eq::Projection& projection );
+-        EQ_EXPORT const ConnectionDescriptionVector& getConnectionDescriptions()
++        const ConnectionDescriptionVector& getConnectionDescriptions()
+                             const;
+         /** 
+          * Returns the connection to this node.
+@@ -401,7 +401,7 @@
+          * @return <code>true</code> if the session was mapped,
+          *         <code>false</code> if not.
+          */
+-        EQ_EXPORT bool registerSession( Session* session );
++        bool registerSession( Session* session );
  
-         /** @return the last specified projection description. */
-         const eq::Projection& getProjection() const 
-@@ -404,10 +404,10 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
+         /** Deregister a (master) session. */
+         bool deregisterSession( Session* session )
+@@ -429,7 +429,7 @@
+          * @return <code>true</code> if the session was unmapped,
+          *         <code>false</code> if there was an error.
           */
--        EQSERVER_EXPORT VisitorResult accept( ConstCompoundVisitor& visitor )
-+        VisitorResult accept( ConstCompoundVisitor& visitor )
-                                           const;
-         /** Non-const version of accept(). */
--        EQSERVER_EXPORT VisitorResult accept( CompoundVisitor& visitor );
-+        VisitorResult accept( CompoundVisitor& visitor );
+-        EQ_EXPORT bool unmapSession( Session* session );
++        bool unmapSession( Session* session );
  
+         /** @return the mapped session with the given identifier, or 0. */
+         Session* getSession( const uint32_t id );
+@@ -443,7 +443,7 @@
+          * @param clientArgs the client arguments as specified by the server.
+          * @return the success value of the run.
+          */
+-        EQ_EXPORT virtual bool runClient( const std::string& clientArgs );
++        virtual bool runClient( const std::string& clientArgs );
  
-         /** Activate the compound tree. */
-Index: server/server.cpp
-===================================================================
---- server/server.cpp	(revision 3280)
-+++ server/server.cpp	(working copy)
-@@ -411,5 +411,10 @@
-     return os;
- }
+         /** Return the command queue to the command thread. */
+         CommandQueue* getCommandThreadQueue() 
+@@ -459,13 +459,13 @@
+         const NodeID& getNodeID() const { return _id; }
  
-+void clear( ServerPtr& server )
-+{
-+    server = 0;
-+}
-+
- }
- }
-Index: server/server.h
-===================================================================
---- server/server.h	(revision 3280)
-+++ server/server.h	(working copy)
-@@ -46,13 +46,13 @@
+         /** Serialize the node's information. */
+-        EQ_EXPORT std::string serialize() const;
++        std::string serialize() const;
+         /** Deserialize the node information, consumes given data. */
+-        EQ_EXPORT bool deserialize( std::string& data );
++        bool deserialize( std::string& data );
+ 
+     protected:
+         /** Destructs this node. */
+-        EQ_EXPORT virtual ~Node();
++        virtual ~Node();
+ 
+         /** 
+          * Dispatches a packet to the registered command queue.
+@@ -474,7 +474,7 @@
+          * @return the result of the operation.
+          * @sa invokeCommand
+          */
+-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
++        virtual bool dispatchCommand( Command& command );
+ 
+         /** 
+          * Invokes the command handler method for the packet.
+@@ -483,7 +483,7 @@
+          * @return the result of the operation.
+          * @sa Dispatcher::invokeCommand
+          */
+-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
++        virtual CommandResult invokeCommand( Command& command );
+ 
+         /** 
+          * The main loop for auto-launched clients. 
+@@ -502,7 +502,7 @@
+          * @return the node.
+          * @sa getType()
+          */
+-        EQ_EXPORT virtual NodePtr createNode( const uint32_t type );
++        virtual NodePtr createNode( const uint32_t type );
+ 
+         /** Registers request packets waiting for a return value. */
+         base::RequestHandler _requestHandler;
+@@ -595,7 +595,7 @@
+         bool _hasSendToken;
+ 
+         bool _connectSelf();
+-        EQ_EXPORT void _addConnection( ConnectionPtr connection );
++        void _addConnection( ConnectionPtr connection );
+         void _removeConnection( ConnectionPtr connection );
+         void _cleanup();
+ 
+Index: lib/net/objectDataIStream.h
+===================================================================
+--- lib/net/objectDataIStream.h	(revision 3295)
++++ lib/net/objectDataIStream.h	(working copy)
+@@ -33,7 +33,7 @@
      /**
-      * The Equalizer server.
+      * The DataIStream for object data.
       */
--    class Server : public net::Node
-+    class EQSERVER_EXPORT Server : public net::Node
+-    class ObjectDataIStream : public DataIStream
++    class EQ_EXPORT ObjectDataIStream : public DataIStream
      {
      public:
+         ObjectDataIStream();
+Index: lib/net/objectDataOStream.h
+===================================================================
+--- lib/net/objectDataOStream.h	(revision 3295)
++++ lib/net/objectDataOStream.h	(working copy)
+@@ -30,7 +30,7 @@
+     /**
+      * The DataOStream for object data.
+      */
+-    class ObjectDataOStream : public DataOStream
++    class EQ_EXPORT ObjectDataOStream : public DataOStream
+     {
+     public:
+         ObjectDataOStream( const Object* object )
+Index: lib/net/objectDeltaDataIStream.h
+===================================================================
+--- lib/net/objectDeltaDataIStream.h	(revision 3295)
++++ lib/net/objectDeltaDataIStream.h	(working copy)
+@@ -29,7 +29,7 @@
+     /**
+      * The DataIStream for object delta version data.
+      */
+-    class ObjectDeltaDataIStream : public ObjectDataIStream
++    class EQ_EXPORT ObjectDeltaDataIStream : public ObjectDataIStream
+     {
+     public:
+         ObjectDeltaDataIStream();
+Index: lib/net/objectDeltaDataOStream.h
+===================================================================
+--- lib/net/objectDeltaDataOStream.h	(revision 3295)
++++ lib/net/objectDeltaDataOStream.h	(working copy)
+@@ -29,7 +29,7 @@
+     /**
+      * The DataOStream for object delta version data.
+      */
+-    class ObjectDeltaDataOStream : public ObjectDataOStream
++    class EQ_EXPORT ObjectDeltaDataOStream : public ObjectDataOStream
+     {
+     public:
+         ObjectDeltaDataOStream( const Object* object );
+Index: lib/net/objectInstanceDataIStream.h
+===================================================================
+--- lib/net/objectInstanceDataIStream.h	(revision 3295)
++++ lib/net/objectInstanceDataIStream.h	(working copy)
+@@ -31,7 +31,7 @@
+     /**
+      * The DataIStream for object instance data.
+      */
+-    class ObjectInstanceDataIStream : public ObjectDataIStream
++    class EQ_EXPORT ObjectInstanceDataIStream : public ObjectDataIStream
+     {
+     public:
+         ObjectInstanceDataIStream();
+Index: lib/net/objectInstanceDataOStream.h
+===================================================================
+--- lib/net/objectInstanceDataOStream.h	(revision 3295)
++++ lib/net/objectInstanceDataOStream.h	(working copy)
+@@ -29,7 +29,7 @@
+     /**
+      * The DataOStream for object instance data.
+      */
+-    class ObjectInstanceDataOStream : public ObjectDataOStream
++    class EQ_EXPORT ObjectInstanceDataOStream : public ObjectDataOStream
+     {
+     public:
+         ObjectInstanceDataOStream( const Object* object );
+Index: lib/net/pairConnection.h
+===================================================================
+--- lib/net/pairConnection.h	(revision 3295)
++++ lib/net/pairConnection.h	(working copy)
+@@ -28,22 +28,22 @@
+      * A meta connection consisting of two (unidirectional) connections
+      * providing bidirectional communication.
+      */
+-    class PairConnection : public Connection
++    class EQ_EXPORT PairConnection : public Connection
+     {
+     public:
+-        EQ_EXPORT PairConnection( ConnectionPtr readConnection,
++        PairConnection( ConnectionPtr readConnection,
+                                   ConnectionPtr writeConnection );
+ 
+-        EQ_EXPORT ConnectionPtr getSibling();
++        ConnectionPtr getSibling();
+ 
+-        EQ_EXPORT virtual bool connect();
+-        EQ_EXPORT virtual void close();
++        virtual bool connect();
++        virtual void close();
+ 
+         virtual Notifier getNotifier() const
+             { return _readConnection->getNotifier(); }
+ 
+     protected:
+-        EQ_EXPORT virtual ~PairConnection();
++        virtual ~PairConnection();
+ 
+         virtual void readNB( void* buffer, const uint64_t bytes )
+             { _readConnection->readNB( buffer, bytes ); }
+Index: lib/net/pipeConnection.h
+===================================================================
+--- lib/net/pipeConnection.h	(revision 3295)
++++ lib/net/pipeConnection.h	(working copy)
+@@ -37,7 +37,7 @@
+      * therefore only be used between related threads. A PairConnection can be
+      * used to create a bi-directional communication using two pipe connections.
+      */
+-    class PipeConnection 
++    class EQ_EXPORT PipeConnection 
+ #ifdef WIN32
+         : public Connection
+ #else
+@@ -46,9 +46,9 @@
+     {
+     public:
+         /** Construct a new pipe connection. */
+-        EQ_EXPORT PipeConnection();
++        PipeConnection();
+         /** Destruct this pipe connection. */
+-        EQ_EXPORT virtual ~PipeConnection();
++        virtual ~PipeConnection();
+ 
+         virtual bool connect();
+         virtual void close();
+Index: lib/net/session.h
+===================================================================
+--- lib/net/session.h	(revision 3295)
++++ lib/net/session.h	(working copy)
+@@ -40,14 +40,14 @@
+      * A received SessionPacket is dispatched to the locally-mapped session of
+      * the same identifier.
+      */
+-    class Session : public Dispatcher
++    class EQ_EXPORT Session : public Dispatcher
+     {
+     public:
+         /** Construct a new session. */
+-        EQ_EXPORT Session();
++        Session();
+ 
+         /** Destruct this session. */
+-        EQ_EXPORT virtual ~Session();
++        virtual ~Session();
+ 
+         /** @name Data Access */
+         //@{
+@@ -64,7 +64,7 @@
+          * @return the queue to the command thread of the local node, or 0 if
+          *         the session is not mapped.
+          */
+-        EQ_EXPORT CommandQueue* getCommandThreadQueue();
++        CommandQueue* getCommandThreadQueue();
+ 
+         /** @return the server hosting this session, or 0 if the session is not
+          *          mapped.. */
+@@ -85,7 +85,7 @@
+          * @return true if the command was dispatched, false otherwise.
+          * @sa Dispatcher::dispatchCommand
+          */
+-        EQ_EXPORT virtual bool dispatchCommand( Command& packet );
++        virtual bool dispatchCommand( Command& packet );
+ 
          /** 
-          * Constructs a new Server.
+          * Invokes the registered handler method for a command packet.
+@@ -97,7 +97,7 @@
+          * @return the result of the operation.
+          * @sa Dispatcher::invokeCommand
           */
--        EQSERVER_EXPORT Server();
-+        Server();
+-        EQ_EXPORT virtual CommandResult invokeCommand( Command& packet );
++        virtual CommandResult invokeCommand( Command& packet );
+         //@}
  
+ 
+@@ -123,7 +123,7 @@
+          *         continous block of identifiers for the request is available.
+          * @sa base::IDPool
+          */
+-        EQ_EXPORT uint32_t genIDs( const uint32_t range );
++        uint32_t genIDs( const uint32_t range );
+ 
          /** 
-          * Runs the server.
-@@ -60,7 +60,7 @@
-          * @return <code>true</code> if the server did run successfully,
-          *         <code>false</code> if not.
+          * Free a continous block of unique identifiers.
+@@ -134,7 +134,7 @@
+          * @param start the first identifier in the block.
+          * @param range the size of the block.
           */
--        EQSERVER_EXPORT bool run();
-+        bool run();
+-        EQ_EXPORT void freeIDs( const uint32_t start, const uint32_t range );
++        void freeIDs( const uint32_t start, const uint32_t range );
  
-         void registerConfig( Config* config );
-         
-@@ -69,7 +69,7 @@
+         /** 
+          * Set the master node for an identifier.
+@@ -150,14 +150,14 @@
+          * @param id the identifier.
+          * @param master the master node for the block of identifiers.
+          */
+-        EQ_EXPORT void setIDMaster( const uint32_t id, const NodeID& master );
++        void setIDMaster( const uint32_t id, const NodeID& master );
+ 
+         /** 
+          * Delete the master node for an identifiers.
           * 
-          * @param config the config.
+          * @param id the identifier.
           */
--        EQSERVER_EXPORT void addConfig( Config* config );
-+        void addConfig( Config* config );
+-        EQ_EXPORT void unsetIDMaster( const uint32_t id );
++        void unsetIDMaster( const uint32_t id );
  
          /** 
-          * Remove a config from this config.
-@@ -93,8 +93,8 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
+          * Returns the master node id for an identifier.
+@@ -166,7 +166,7 @@
+          * @return the master node, or Node::ZERO if no master node is
+          *         set for the identifier.
           */
--        EQSERVER_EXPORT VisitorResult accept( ServerVisitor& visitor );
--        EQSERVER_EXPORT VisitorResult accept( ConstServerVisitor& ) const;
-+        VisitorResult accept( ServerVisitor& visitor );
-+        VisitorResult accept( ConstServerVisitor& ) const;
+-        EQ_EXPORT const NodeID& getIDMaster( const uint32_t id );
++        const NodeID& getIDMaster( const uint32_t id );
+         //@}
  
-     protected:
-         virtual ~Server();
-@@ -139,6 +139,7 @@
-         net::CommandResult _cmdShutdown( net::Command& command );
-     };
  
-+    EQSERVER_EXPORT void clear( ServerPtr& server );
-     EQSERVER_EXPORT std::ostream& operator << ( std::ostream&, const Server* );
- }
- }
-Index: server/window.h
-===================================================================
---- server/window.h	(revision 3280)
-+++ server/window.h	(working copy)
-@@ -48,7 +48,7 @@
-     /**
-      * The window.
-      */
--    class Window : public net::Object
-+    class EQSERVER_EXPORT Window : public net::Object
-     {
-     public:
-         enum State
-@@ -66,7 +66,7 @@
-         /** 
-          * Constructs a new Window.
+@@ -186,14 +186,14 @@
+          * @param object the object instance.
+          * @return true if the object was registered, false otherwise.
           */
--        EQSERVER_EXPORT Window();
-+        Window();
+-        EQ_EXPORT bool registerObject( Object* object );
++        bool registerObject( Object* object );
  
          /** 
-          * Constructs a new deep copy of a window.
-@@ -82,7 +82,7 @@
-          * 
-          * @param channel the channel.
+          * Deregister a distributed object.
+          *
+          * @param object the object instance.
           */
--        EQSERVER_EXPORT void addChannel( Channel* channel );
-+        void addChannel( Channel* channel );
+-        EQ_EXPORT void deregisterObject( Object* object );
++        void deregisterObject( Object* object );
  
          /** 
-          * Insert a new channel after the given channel.
-@@ -133,8 +133,8 @@
-          * @param visitor the visitor.
-          * @return the result of the visitor traversal.
+          * Map a distributed object.
+@@ -226,21 +226,21 @@
+          *         available.
+          * @sa registerObject
           */
--        EQSERVER_EXPORT VisitorResult accept( WindowVisitor& visitor );
--        EQSERVER_EXPORT VisitorResult accept( ConstWindowVisitor& ) const;
-+        VisitorResult accept( WindowVisitor& visitor );
-+        VisitorResult accept( ConstWindowVisitor& ) const;
+-        EQ_EXPORT bool mapObject( Object* object, const uint32_t id, 
++        bool mapObject( Object* object, const uint32_t id, 
+                         const uint32_t version = Object::VERSION_OLDEST );
  
-         /** Increase window activition count. */
-         void activate();
-@@ -159,7 +159,7 @@
+         /** Start mapping a distributed object. */
+-        EQ_EXPORT uint32_t mapObjectNB( Object* object, const uint32_t id, 
++        uint32_t mapObjectNB( Object* object, const uint32_t id, 
+                               const uint32_t version = Object::VERSION_OLDEST );
+         /** Finalize the mapping of a distributed object. */
+-        EQ_EXPORT bool mapObjectSync( const uint32_t requestID );
++        bool mapObjectSync( const uint32_t requestID );
+ 
+         /** 
+          * Unmap a mapped object.
           * 
-          * @param pvp the viewport in pixels.
+          * @param object the mapped object.
           */
--        EQSERVER_EXPORT void setPixelViewport( const eq::PixelViewport& pvp );
-+        void setPixelViewport( const eq::PixelViewport& pvp );
+-        EQ_EXPORT void unmapObject( Object* object );
++        void unmapObject( Object* object );
  
          /** 
-          * Return this window's pixel viewport.
-Index: VS2005/Equalizer Server Library.vcproj
-===================================================================
---- VS2005/Equalizer Server Library.vcproj	(revision 3280)
-+++ VS2005/Equalizer Server Library.vcproj	(working copy)
-@@ -1,800 +1,800 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Equalizer Server Library"
--	ProjectGUID="{D30F6301-35B9-4D22-A702-10DADC2731C8}"
--	RootNamespace="Equalizer Server Library"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/EqualizerServer.dll"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/EqualizerServer.pdb"
--				SubSystem="0"
--				LargeAddressAware="2"
--				ImportLibrary="$(OutDir)/EqualizerServer.lib"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/EqualizerServer.dll"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/EqualizerServer.pdb"
--				SubSystem="0"
--				ImportLibrary="$(OutDir)/EqualizerServer.lib"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/EqualizerServer.dll"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="0"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				ImportLibrary="$(OutDir)/EqualizerServer.lib"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--				Description=""
--				CommandLine=""
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/EqualizerServer.dll"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="0"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				ImportLibrary="$(OutDir)/EqualizerServer.lib"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
--			>
--			<File
--				RelativePath="..\server\canvas.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\channel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\channelUpdateVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compound.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundExitVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundInitVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateDataVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateInputVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateOutputVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\config.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\configSerializer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\configUpdateDataVisitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\connectionDescription.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\dfrEqualizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\equalizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frame.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frameData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\framerateEqualizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frustum.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frustumData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\global.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\layout.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\lexer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\loadEqualizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\loader.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\loader.l"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating lexer.cpp"
--						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
--						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
--						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating lexer.cpp"
--						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
--						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
--						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating lexer.cpp"
--						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
--						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
--						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating lexer.cpp"
--						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
--						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
--						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\server\loader.y"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating parser"
--						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating parser"
--						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating parser"
--						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="Creating parser"
--						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\monitorEqualizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\node.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\observer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\parser.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\pipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\segment.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\server.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\startLocalServer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\swapBarrier.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\view.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\viewEqualizer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\window.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
--			>
--			<File
--				RelativePath="..\server\base.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\canvas.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\canvasVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\channel.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\colorMask.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compound.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundExitVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundInitVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateDataVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateInputVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundUpdateOutputVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\compoundVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\config.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\configSerializer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\configUpdateDataVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\connectionDescription.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\constCompoundVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\dfrEqualizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\equalizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frame.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frameData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\framerateEqualizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frustum.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\frustumData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\global.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\layout.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\layoutVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\loadEqualizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\loader.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\log.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\monitorEqualizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\node.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\observer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\parser.hpp"
--				>
--			</File>
--			<File
--				RelativePath="..\server\paths.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\pipe.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\segment.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\segmentVisitor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\server.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\swapBarrier.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\types.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\view.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\equalizers\viewEqualizer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\server\window.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
--			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
--			>
--		</Filter>
--		<File
--			RelativePath="..\server\Makefile"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Equalizer Server Library"
-+	ProjectGUID="{D30F6301-35B9-4D22-A702-10DADC2731C8}"
-+	RootNamespace="Equalizer Server Library"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/EqualizerServer.dll"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/EqualizerServer.pdb"
-+				SubSystem="0"
-+				LargeAddressAware="2"
-+				ImportLibrary="$(OutDir)/EqualizerServer.lib"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/EqualizerServer.dll"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/EqualizerServer.pdb"
-+				SubSystem="0"
-+				ImportLibrary="$(OutDir)/EqualizerServer.lib"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/EqualizerServer.dll"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="0"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				ImportLibrary="$(OutDir)/EqualizerServer.lib"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+				Description=""
-+				CommandLine=""
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/EqualizerServer.dll"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="0"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				ImportLibrary="$(OutDir)/EqualizerServer.lib"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-+			>
-+			<File
-+				RelativePath="..\server\canvas.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\channel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\channelUpdateVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compound.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundExitVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundInitVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateDataVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateInputVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateOutputVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\config.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\configSerializer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\configUpdateDataVisitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\connectionDescription.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\dfrEqualizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\equalizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frame.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frameData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\framerateEqualizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frustum.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frustumData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\global.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\layout.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\lexer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\loadEqualizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\loader.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\loader.l"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating lexer.cpp"
-+						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
-+						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
-+						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating lexer.cpp"
-+						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
-+						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
-+						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating lexer.cpp"
-+						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
-+						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
-+						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating lexer.cpp"
-+						CommandLine="&quot;$(InputDir)../Windows/bin/flex&quot; &quot;-o$(InputDir)lexer.cpp&quot; &quot;$(InputPath)&quot;&#x0D;&#x0A;"
-+						AdditionalDependencies="&quot;$(InputDir)parser.cpp&quot;"
-+						Outputs="&quot;$(InputDir)lexer.cpp&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\server\loader.y"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating parser"
-+						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating parser"
-+						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating parser"
-+						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="Creating parser"
-+						CommandLine="cd &quot;$(InputDir)../Windows/bin&quot;&#x0D;&#x0A;&quot;$(InputDir)../Windows/bin/bison&quot; -l -p eqLoader_ -d &quot;$(InputPath)&quot; -o &quot;$(InputDir)/parser.cpp&quot;&#x0D;&#x0A;move  &quot;$(InputDir)/parser.cpp.h&quot;  &quot;$(InputDir)/parser.hpp&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(InputDir)parser.cpp&quot;;&quot;$(InputDir)parser.hpp&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\monitorEqualizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\node.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\observer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\parser.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\pipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\segment.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\server.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\startLocalServer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\swapBarrier.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\view.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\viewEqualizer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\window.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-+			>
-+			<File
-+				RelativePath="..\server\base.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\canvas.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\canvasVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\channel.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\colorMask.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compound.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundExitVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundInitVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateDataVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateInputVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundUpdateOutputVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\compoundVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\config.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\configSerializer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\configUpdateDataVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\connectionDescription.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\constCompoundVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\dfrEqualizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\equalizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frame.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frameData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\framerateEqualizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frustum.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\frustumData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\global.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\layout.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\layoutVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\loadEqualizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\loader.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\log.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\monitorEqualizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\node.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\observer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\parser.hpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\paths.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\pipe.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\segment.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\segmentVisitor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\server.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\swapBarrier.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\types.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\view.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\equalizers\viewEqualizer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\server\window.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
-+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
-+			>
-+		</Filter>
-+		<File
-+			RelativePath="..\server\Makefile"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/pixelBench.vcproj
-===================================================================
---- VS2005/pixelBench.vcproj	(revision 3280)
-+++ VS2005/pixelBench.vcproj	(working copy)
-@@ -1,414 +1,414 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="EqPixelBench Pixel Transfer Benchmark"
--	ProjectGUID="{791B47F2-0A50-4D42-A724-95886FA1F149}"
--	RootNamespace="EqPixelBench"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPixelBench.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqPixelBench.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPixelBench.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqPixelBench.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPixelBench.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPixelBench.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FE}"
--			>
--			<File
--				RelativePath="..\examples\eqPixelBench\channel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\config.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\configEvent.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\main.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\window.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFC}"
--			>
--			<File
--				RelativePath="..\examples\eqPixelBench\channel.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\config.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\configEvent.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPixelBench\window.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
--			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD02}"
--			>
--		</Filter>
--		<File
--			RelativePath="..\examples\eqPixelBench\Readme"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="EqPixelBench Pixel Transfer Benchmark"
-+	ProjectGUID="{791B47F2-0A50-4D42-A724-95886FA1F149}"
-+	RootNamespace="EqPixelBench"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPixelBench.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqPixelBench.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPixelBench.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqPixelBench.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPixelBench.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPixelBench/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPixelBench.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FE}"
-+			>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\channel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\config.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\configEvent.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\main.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\window.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFC}"
-+			>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\channel.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\config.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\configEvent.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPixelBench\window.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
-+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD02}"
-+			>
-+		</Filter>
-+		<File
-+			RelativePath="..\examples\eqPixelBench\Readme"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/image.vcproj
-===================================================================
---- VS2005/image.vcproj	(revision 3280)
-+++ VS2005/image.vcproj	(working copy)
-@@ -1,360 +1,360 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Image"
--	ProjectGUID="{BACC4953-5582-4CDB-A81D-5D090783966B}"
--	RootNamespace="Image"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/image.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/image.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/image.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/image.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/image.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/image.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tests\image\test.cpp"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Image"
-+	ProjectGUID="{BACC4953-5582-4CDB-A81D-5D090783966B}"
-+	RootNamespace="Image"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/image.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/image.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/image.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/image.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/image.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/image/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/image.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tests\image\test.cpp"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/Equalizer Server.vcproj
-===================================================================
---- VS2005/Equalizer Server.vcproj	(revision 3280)
-+++ VS2005/Equalizer Server.vcproj	(working copy)
-@@ -1,575 +1,575 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Equalizer Server"
--	ProjectGUID="{CAF58C91-AA89-44F5-BB9F-C12DB70E978C}"
--	RootNamespace="Equalizer Server"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/eqServer.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/Equalizer Server.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/eqServer.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/Equalizer Server.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/eqServer.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
--				OutputFile="$(OutDir)/eqServer.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
--			>
--			<File
--				RelativePath="..\server\eqServer.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
--			>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
--			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
--			>
--		</Filter>
--		<Filter
--			Name="Config Files"
--			Filter="eqc"
--			>
--			<File
--				RelativePath="..\examples\configs\1-pipe.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\1-pipe.stereo.anaglyph.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\1-pipe.stereo.quad.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\1-window.nonthreaded.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-channel.stereo.passive.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-node.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-pipe.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-pipe.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-pipe.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-pipe.EYE.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-pipe.stereo.passive.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-window.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-window.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\2-window.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-channel.cave.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-node.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-pipe.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-window.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\3-window.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-node.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-node.DB.bs.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-window.DB.bs.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\4-window.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\5-channel.cave.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\5-node.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\5-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\5-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\6-node.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\6-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\6-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\8-node.DB.bs.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\8-node.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\8-node.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\config.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\hactar.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\hactar.DB.ds.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\hactar.DB.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\hactar.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\hactar.rc.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\stress.2D.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\stress.eqc"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\configs\test.eqc"
--				>
--			</File>
--		</Filter>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Equalizer Server"
-+	ProjectGUID="{CAF58C91-AA89-44F5-BB9F-C12DB70E978C}"
-+	RootNamespace="Equalizer Server"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/eqServer.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/Equalizer Server.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/eqServer.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/Equalizer Server.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/eqServer.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/server/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib"
-+				OutputFile="$(OutDir)/eqServer.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-+			>
-+			<File
-+				RelativePath="..\server\eqServer.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-+			>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
-+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
-+			>
-+		</Filter>
-+		<Filter
-+			Name="Config Files"
-+			Filter="eqc"
-+			>
-+			<File
-+				RelativePath="..\examples\configs\1-pipe.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\1-pipe.stereo.anaglyph.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\1-pipe.stereo.quad.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\1-window.nonthreaded.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-channel.stereo.passive.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-node.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-pipe.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-pipe.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-pipe.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-pipe.EYE.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-pipe.stereo.passive.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-window.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-window.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\2-window.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-channel.cave.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-node.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-pipe.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-window.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\3-window.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-node.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-node.DB.bs.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-window.DB.bs.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\4-window.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\5-channel.cave.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\5-node.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\5-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\5-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\6-node.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\6-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\6-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\8-node.DB.bs.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\8-node.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\8-node.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\config.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\hactar.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\hactar.DB.ds.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\hactar.DB.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\hactar.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\hactar.rc.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\stress.2D.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\stress.eqc"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\configs\test.eqc"
-+				>
-+			</File>
-+		</Filter>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/netProxy.vcproj
-===================================================================
---- VS2005/netProxy.vcproj	(revision 3280)
-+++ VS2005/netProxy.vcproj	(working copy)
-@@ -1,7 +1,7 @@
- <?xml version="1.0" encoding="Windows-1252"?>
- <VisualStudioProject
- 	ProjectType="Visual C++"
--	Version="8.00"
-+	Version="8,00"
- 	Name="NetProxy"
- 	ProjectGUID="{BA9D9327-A284-419A-B5E3-A2EBCD84165E}"
- 	RootNamespace="NetProxy"
-@@ -48,7 +48,7 @@
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
- 				MinimalRebuild="true"
- 				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
-+				RuntimeLibrary="1"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -132,7 +132,7 @@
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
- 				MinimalRebuild="true"
- 				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
-+				RuntimeLibrary="1"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -211,7 +211,7 @@
- 				Name="VCCLCompilerTool"
- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
-+				RuntimeLibrary="0"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -293,7 +293,7 @@
- 				Name="VCCLCompilerTool"
- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
-+				RuntimeLibrary="0"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-Index: VS2005/eqHello.vcproj
-===================================================================
---- VS2005/eqHello.vcproj	(revision 3280)
-+++ VS2005/eqHello.vcproj	(working copy)
-@@ -1,382 +1,382 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="eqHello Hello, World! Example"
--	ProjectGUID="{BB3D4102-7367-484F-A663-3D417D01BF24}"
--	RootNamespace="eqHello Example"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqHello.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqHello Example.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqHello.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqHello Example.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqHello.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqHello.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{CF7DC0A4-A932-49DF-88DC-B38AC42B3FF2}"
--			>
--			<File
--				RelativePath="..\examples\eqHello\hello.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{A5353C60-C8C4-426D-B6B2-3A7F9ACCF8C8}"
--			>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
--			UniqueIdentifier="{6F7545A5-15AD-404E-8419-D934CDAF2520}"
--			>
--		</Filter>
--		<File
--			RelativePath="..\examples\eqHello\README"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="eqHello Hello, World! Example"
-+	ProjectGUID="{BB3D4102-7367-484F-A663-3D417D01BF24}"
-+	RootNamespace="eqHello Example"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqHello.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqHello Example.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqHello.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqHello Example.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqHello.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqHello/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqHello.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{CF7DC0A4-A932-49DF-88DC-B38AC42B3FF2}"
-+			>
-+			<File
-+				RelativePath="..\examples\eqHello\hello.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{A5353C60-C8C4-426D-B6B2-3A7F9ACCF8C8}"
-+			>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
-+			UniqueIdentifier="{6F7545A5-15AD-404E-8419-D934CDAF2520}"
-+			>
-+		</Filter>
-+		<File
-+			RelativePath="..\examples\eqHello\README"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/copyBuild.bat
-===================================================================
---- VS2005/copyBuild.bat	(revision 3280)
-+++ VS2005/copyBuild.bat	(working copy)
-@@ -1,38 +1,41 @@
--
--set base_dir=c:\<ChangeMe>
--
--set inc_dir=%base_dir%\include
--set bin_dir=%base_dir%\bin
--set dll_dir=%base_dir%\bin
--set lib_dir=%base_dir%\lib
--
--xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\eq %inc_dir%\eq
--xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\vmmlib %inc_dir%\vmmlib
--xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\GL %inc_dir%\GL
--
--copy ..\build\VS2005\Win32\Debug\eqServer.exe %bin_dir%\Win32\Debug
--copy ..\build\VS2005\Win32\Debug\affinityCheck.exe %bin_dir%\Win32\Debug
--copy ..\build\VS2005\Win32\Debug\*.pdb %dll_dir%\Win32\Debug
--copy ..\build\VS2005\Win32\Debug\*.dll %dll_dir%\Win32\Debug
--copy ..\build\VS2005\Win32\Debug\*.lib %lib_dir%\Win32\Debug
--
--copy ..\build\VS2005\Win32\Release\eqServer.exe %bin_dir%\Win32\Release
--copy ..\build\VS2005\Win32\Release\affinityCheck.exe %bin_dir%\Win32\Release
--copy ..\build\VS2005\Win32\Release\*.pdb %dll_dir%\Win32\Release
--copy ..\build\VS2005\Win32\Release\*.dll %dll_dir%\Win32\Release
--copy ..\build\VS2005\Win32\Release\*.lib %lib_dir%\Win32\Release
--
--copy ..\build\VS2005\x64\Debug\eqServer.exe %bin_dir%\x64\Debug
--copy ..\build\VS2005\x64\Debug\affinityCheck.exe %bin_dir%\x64\Debug
--copy ..\build\VS2005\x64\Debug\*.pdb %dll_dir%\x64\Debug
--copy ..\build\VS2005\x64\Debug\*.dll %dll_dir%\x64\Debug
--copy ..\build\VS2005\x64\Debug\*.lib %lib_dir%\x64\Debug
--
--copy ..\build\VS2005\x64\Release\eqServer.exe %bin_dir%\x64\Release
--copy ..\build\VS2005\x64\Release\affinityCheck.exe %bin_dir%\x64\Release
--copy ..\build\VS2005\x64\Release\*.pdb %dll_dir%\x64\Release
--copy ..\build\VS2005\x64\Release\*.dll %dll_dir%\x64\Release
--copy ..\build\VS2005\x64\Release\*.lib %lib_dir%\x64\Release
--
--"%ProgramFiles%\TortoiseSVN\bin\SubWCRev.exe" .. > %inc_dir%\eq\Version.txt
--pause
-+
-+set base_dir="D:\DEV\C++\RTTSOFTWARE_1_0\trunk"
-+
-+set inc_dir=%base_dir%\include
-+set bin_dir=%base_dir%\bin
-+set dll_dir=%base_dir%\bin
-+set lib_dir=%base_dir%\lib
-+
-+xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\eq %inc_dir%\eq
-+xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\vmmlib %inc_dir%\vmmlib
-+xcopy /s /y ..\build\VS2005\Win32\Debug\Headers\GL %inc_dir%\GL
-+
-+copy ..\build\VS2005\Win32\Debug\eqServer.exe %bin_dir%\Win32\Debug
-+copy ..\build\VS2005\Win32\Debug\affinityCheck.exe %bin_dir%\Win32\Debug
-+copy ..\build\VS2005\Win32\Debug\*.pdb %dll_dir%\Win32\Debug
-+copy ..\build\VS2005\Win32\Debug\*.dll %dll_dir%\Win32\Debug
-+copy ..\build\VS2005\Win32\Debug\*.lib %lib_dir%\Win32\Debug
-+
-+copy ..\build\VS2005\Win32\Release\eqServer.exe %bin_dir%\Win32\Release
-+copy ..\build\VS2005\Win32\Release\affinityCheck.exe %bin_dir%\Win32\Release
-+copy ..\build\VS2005\Win32\Release\*.pdb %dll_dir%\Win32\Release
-+copy ..\build\VS2005\Win32\Release\*.dll %dll_dir%\Win32\Release
-+copy ..\build\VS2005\Win32\Release\*.lib %lib_dir%\Win32\Release
-+
-+copy ..\build\VS2005\x64\Debug\eqServer.exe %bin_dir%\x64\Debug
-+copy ..\build\VS2005\x64\Debug\affinityCheck.exe %bin_dir%\x64\Debug
-+copy ..\build\VS2005\x64\Debug\*.pdb %dll_dir%\x64\Debug
-+copy ..\build\VS2005\x64\Debug\*.dll %dll_dir%\x64\Debug
-+copy ..\build\VS2005\x64\Debug\*.lib %lib_dir%\x64\Debug
-+
-+copy ..\build\VS2005\x64\Release\eqServer.exe %bin_dir%\x64\Release
-+copy ..\build\VS2005\x64\Release\affinityCheck.exe %bin_dir%\x64\Release
-+copy ..\build\VS2005\x64\Release\*.pdb %dll_dir%\x64\Release
-+copy ..\build\VS2005\x64\Release\*.dll %dll_dir%\x64\Release
-+copy ..\build\VS2005\x64\Release\*.lib %lib_dir%\x64\Release
-+
-+copy ..\server\*.h %inc_dir%\eq\server
-+copy ..\server\equalizers\*.h %inc_dir%\eq\server\equalizers
-+
-+"%ProgramFiles%\TortoiseSVN\bin\SubWCRev.exe" .. > %inc_dir%\eq\Version.txt
-+pause
-Index: VS2005/compositor.vcproj
-===================================================================
---- VS2005/compositor.vcproj	(revision 3280)
-+++ VS2005/compositor.vcproj	(working copy)
-@@ -1,624 +1,624 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Compositor"
--	ProjectGUID="{BACC9253-5582-4CDB-A81D-539D0783966B}"
--	RootNamespace="Compositor"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/compositor.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/compositor.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/compositor.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/compositor.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/compositor.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/compositor.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tests\compositor\Image_1_color.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\Image_1_depth.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\Image_2_color.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\Image_2_depth.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\Image_3_color.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\Image_3_depth.rgb"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="Copying $(InputFileName)"
--					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="$(TargetDir)$(InputFileName)"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\tests\compositor\test.cpp"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Compositor"
-+	ProjectGUID="{BACC9253-5582-4CDB-A81D-539D0783966B}"
-+	RootNamespace="Compositor"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/compositor.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/compositor.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/compositor.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/compositor.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/compositor.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/compositor/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/compositor.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tests\compositor\Image_1_color.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\Image_1_depth.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\Image_2_color.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\Image_2_depth.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\Image_3_color.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\Image_3_depth.rgb"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="Copying $(InputFileName)"
-+					CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="$(TargetDir)$(InputFileName)"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\tests\compositor\test.cpp"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/accept.vcproj
-===================================================================
---- VS2005/accept.vcproj	(revision 3280)
-+++ VS2005/accept.vcproj	(working copy)
-@@ -1,364 +1,364 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="accept"
--	ProjectGUID="{4A4754FE-A759-4D9E-9BDB-2A00EFBB70D7}"
--	RootNamespace="accept"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/accept.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/accept.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/accept.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/accept.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/accept.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/accept.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tests\accept\accept.cpp"
--			>
--		</File>
--		<File
--			RelativePath="..\tests\accept\Makefile"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="accept"
-+	ProjectGUID="{4A4754FE-A759-4D9E-9BDB-2A00EFBB70D7}"
-+	RootNamespace="accept"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/accept.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/accept.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/accept.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/accept.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/accept.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/accept/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/accept.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tests\accept\accept.cpp"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\tests\accept\Makefile"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/eVolve.vcproj
-===================================================================
---- VS2005/eVolve.vcproj	(revision 3280)
-+++ VS2005/eVolve.vcproj	(working copy)
-@@ -1,490 +1,490 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="eVolve Volume Rendering Example"
--	ProjectGUID="{791B47F2-0A50-4D42-A724-95886FA1F148}"
--	RootNamespace="eVolve Example"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eVolve.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eVolve Example.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eVolve.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eVolve Example.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eVolve.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eVolve.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{B2D77BB6-2F4D-4FDA-84E5-12C14E62B2C4}"
--			>
--			<File
--				RelativePath="..\examples\eVolve\channel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\config.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\eVolve.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\framesOrderer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\glslShaders.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\initData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\localInitData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\main.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\node.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\pipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\rawVolModel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\rawVolModelRenderer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\sliceClipping.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\window.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{33B45DF8-D6DE-4852-A282-D7458C156FCB}"
--			>
--			<File
--				RelativePath="..\examples\eVolve\channel.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\config.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\eVolve.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\framesOrderer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\glslShaders.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\initData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\localInitData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\main.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\node.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\pipe.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\rawVolModel.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\rawVolModelRenderer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\sliceClipping.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eVolve\window.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
--			UniqueIdentifier="{5D8EC5DD-2D14-4CCE-87B9-1CFD06C3F080}"
--			>
--		</Filter>
--		<File
--			RelativePath="..\examples\eVolve\Readme"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="eVolve Volume Rendering Example"
-+	ProjectGUID="{791B47F2-0A50-4D42-A724-95886FA1F148}"
-+	RootNamespace="eVolve Example"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eVolve.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eVolve Example.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eVolve.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eVolve Example.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eVolve.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eVolve/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eVolve.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{B2D77BB6-2F4D-4FDA-84E5-12C14E62B2C4}"
-+			>
-+			<File
-+				RelativePath="..\examples\eVolve\channel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\config.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\eVolve.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\framesOrderer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\glslShaders.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\initData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\localInitData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\main.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\node.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\pipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\rawVolModel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\rawVolModelRenderer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\sliceClipping.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\window.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{33B45DF8-D6DE-4852-A282-D7458C156FCB}"
-+			>
-+			<File
-+				RelativePath="..\examples\eVolve\channel.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\config.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\eVolve.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\framesOrderer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\glslShaders.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\initData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\localInitData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\main.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\node.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\pipe.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\rawVolModel.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\rawVolModelRenderer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\sliceClipping.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eVolve\window.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
-+			UniqueIdentifier="{5D8EC5DD-2D14-4CCE-87B9-1CFD06C3F080}"
-+			>
-+		</Filter>
-+		<File
-+			RelativePath="..\examples\eVolve\Readme"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/Equalizer.vcproj
-===================================================================
---- VS2005/Equalizer.vcproj	(revision 3280)
-+++ VS2005/Equalizer.vcproj	(working copy)
-@@ -1,9033 +1,9033 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Equalizer Client Library"
--	ProjectGUID="{21B10D06-2D20-4095-846C-C5F9EDADB6BD}"
--	RootNamespace="Equalizer Client Library"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				OpenMP="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
--				OutputFile="$(OutDir)/Equalizer.dll"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/Equalizer.pdb"
--				SubSystem="0"
--				LargeAddressAware="2"
--				ImportLibrary="$(OutDir)/Equalizer.lib"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				OpenMP="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
--				OutputFile="$(OutDir)/Equalizer.dll"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/Equalizer.pdb"
--				SubSystem="0"
--				ImportLibrary="$(OutDir)/Equalizer.lib"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--				Description=""
--				CommandLine=""
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				OpenMP="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
--				OutputFile="$(OutDir)/Equalizer.dll"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="0"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				ImportLibrary="$(OutDir)/Equalizer.lib"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="2"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--				Description=""
--				CommandLine=""
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				OpenMP="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="2"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
--				OutputFile="$(OutDir)/Equalizer.dll"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="0"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				ImportLibrary="$(OutDir)/Equalizer.lib"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="compressor"
--			>
--			<File
--				RelativePath="..\lib\compressor\compressor.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressor.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4B.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4B.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4BU.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4BU.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4HF.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLE4HF.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\compressor\compressorRLEU.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="plugins"
--			>
--			<File
--				RelativePath="..\lib\plugins\compressor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/plugins/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="base"
--			>
--			<File
--				RelativePath="..\lib\base\atomic.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\base.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\buffer.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\clock.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\compareAndSwap.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\debug.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\debug.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\definesWin32.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\dispatcher.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\dso.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\dso.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\executionListener.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\fileSearch.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\hash.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\idPool.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\idPool.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\init.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)2.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)2.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)2.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)2.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\init.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\launcher.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\launcher.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\lock.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\lock.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\log.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\log.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\memoryMap.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\memoryMap.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\monitor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\monitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\mtQueue.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\nonCopyable.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\omp.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\omp.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\perThread.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\perThreadRef.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\referenced.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\refPtr.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\uuid.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\uuid.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\requestHandler.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\requestHandler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\rng.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\scopedMutex.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\sleep.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\stdExt.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\thread.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\thread.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\timedLock.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\base\timedLock.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\base\types.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="net"
--			>
--			<File
--				RelativePath="..\lib\net\barrier.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\barrier.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\bufferConnection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\bufferConnection.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\command.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\command.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandCache.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandCache.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandFunc.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandQueue.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandQueue.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\commandResult.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\commands.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\connection.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connection.ipp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionDescription.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionDescription.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionListener.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionSet.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionSet.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\connectionType.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\dataIStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\dataIStream.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\dataOStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\dataOStream.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\deltaMasterCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\deltaMasterCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\dispatcher.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\fdConnection.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\fdConnection.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\fullMasterCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\fullMasterCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\fullSlaveCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\fullSlaveCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\global.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\global.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\init.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\init.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\log.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\namedPipeConnection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\namedPipeConnection.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\namedPipeConnectionPosix.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\namedPipeConnectionWin32.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\net.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\node.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\node.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\nodeType.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\nullCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\object.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\object.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectCM.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDataIStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDataIStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDataOStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDeltaDataIStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDeltaDataIStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDeltaDataOStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectDeltaDataOStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectInstanceDataIStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectInstanceDataIStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectInstanceDataOStream.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectInstanceDataOStream.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectVersion.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\objectVersion.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\packets.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\packets.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\pairConnection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\pairConnection.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\pipeConnection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\pipeConnection.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\pipeConnectionPosix.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\pipeConnectionWin32.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\session.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\session.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\socketConnection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\socketConnection.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\socketConnectionPosix.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\socketConnectionWin32.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\staticMasterCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\staticMasterCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\staticSlaveCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\staticSlaveCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\types.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\net\unbufferedMasterCM.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\net\unbufferedMasterCM.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\util\util.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="client"
--			>
--			<File
--				RelativePath="..\lib\client\aglEventHandler.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\aglEventHandler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\aglMessagePump.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\aglMessagePump.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\aglWindow.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\aglWindow.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\canvas.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\canvas.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\canvasVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\channel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\channel.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\channelStatistics.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\channelStatistics.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\channelVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\client.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\client.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\colorMask.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\colorMask.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\commandQueue.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\commandQueue.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\commands.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\compositor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\compositor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\compressor.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\compressor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\config.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\config.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\configDeserializer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\configDeserializer.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\configEvent.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\configEvent.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\configParams.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\configParams.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\configStatistics.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\configStatistics.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\configVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\event.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\event.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\statistic.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\statistic.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\eventHandler.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\eventHandler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\eye.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\eye.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\frame.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\frame.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameBufferObject.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameBufferObject.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameData.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\frustum.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\frustum.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\global.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\global.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\glXEventHandler.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\glXEventHandler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\glXWindow.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\glXWindow.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\image.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\image.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\init.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\init.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\layout.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\layout.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\layoutVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\log.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\messagePump.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\node.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\node.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\nodeFactory.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\nodeFactory.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameDataStatistics.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\frameDataStatistics.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\nodeType.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\nodeVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\object.cpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						ObjectFile="$(IntDir)/$(InputName)1.obj"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\object.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\objectManager.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\objectManager.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\observer.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\observer.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\observerVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\osPipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\osPipe.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\osWindow.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\osWindow.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\packets.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\pipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\pipe.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\pipeStatistics.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\pipeVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\pixel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\pixel.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\pixelViewport.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\pluginRegistry.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\pluginRegistry.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\projection.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\projection.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\range.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\range.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\renderContext.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\renderContext.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiEmptySpaceFinder.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiEmptySpaceFinder.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiFinder.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiFinder.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiTracker.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\roiTracker.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\segment.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\segment.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\segmentVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\server.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\server.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\task.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\texture.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\texture.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\types.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\version.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\version.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\view.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\view.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\viewport.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\viewport.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\viewVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\visitorResult.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\wall.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wall.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglEventHandler.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglEventHandler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglMessagePump.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglMessagePump.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglPipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglPipe.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglWindow.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglWindow.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\wglWindowEvent.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\window.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\window.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\windowStatistics.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\windowStatistics.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\statisticSampler.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\windowSystem.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\windowSystem.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\windowVisitor.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\lib\client\X11Connection.h"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\zoom.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\client\zoom.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="vmmlib"
--			>
--			<File
--				RelativePath="..\externals\vmmlib\enable_if.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\exception.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\frustum.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\frustum_culler.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\jacobi_solver.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\lapack.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\lapack_includes.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\lapack_linear_least_squares.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\lapack_svd.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\lapack_types.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\linear_least_squares.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\math.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\matrix.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\matrix_functors.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\qr_decomposition.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\quaternion.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\svd.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\vector.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\visibility.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\vmmlib.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\vmmlib\vmmlib_config.hpp"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="glew"
--			>
--			<File
--				RelativePath="..\lib\glew\glew.c"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCLCompilerTool"
--						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\GL\glew.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\externals\gl\wglew.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="util"
--			>
--			<File
--				RelativePath="..\lib\util\bitmapFont.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\lib\util\bitmapFont.h"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying $(InputFileName)"
--						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<Filter
--			Name="Libraries"
--			Filter="dll;lib"
--			>
--			<File
--				RelativePath="..\Windows\pthreads\lib\pthreadVC2.dll"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (win32)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description=""
--						CommandLine=""
--						Outputs=""
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (win32)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description=""
--						CommandLine=""
--						Outputs=""
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (x64)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (x64)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\Windows\pthreads\lib\pthreadVC2.lib"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (win32)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description=""
--						CommandLine=""
--						Outputs=""
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (win32)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description=""
--						CommandLine=""
--						Outputs=""
--					/>
--				</FileConfiguration>
--			</File>
--			<File
--				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
--				>
--				<FileConfiguration
--					Name="Debug|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Debug|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (x64)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|Win32"
--					ExcludedFromBuild="true"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--					/>
--				</FileConfiguration>
--				<FileConfiguration
--					Name="Release|x64"
--					>
--					<Tool
--						Name="VCCustomBuildTool"
--						Description="copying library (x64)"
--						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
--						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
--					/>
--				</FileConfiguration>
--			</File>
--		</Filter>
--		<File
--			RelativePath="..\AUTHORS"
--			>
--		</File>
--		<File
--			RelativePath="..\Doxyfile"
--			>
--		</File>
--		<File
--			RelativePath="..\lib\eq.h"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="copying $(InputFileName)"
--					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="copying $(InputFileName)"
--					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="copying $(InputFileName)"
--					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCustomBuildTool"
--					Description="copying $(InputFileName)"
--					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
--					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
--				/>
--			</FileConfiguration>
--		</File>
--		<File
--			RelativePath="..\FAQ"
--			>
--		</File>
--		<File
--			RelativePath="..\LGPL"
--			>
--		</File>
--		<File
--			RelativePath="..\LICENSE"
--			>
--		</File>
--		<File
--			RelativePath="..\Makefile"
--			>
--		</File>
--		<File
--			RelativePath="..\lib\Makefile"
--			>
--		</File>
--		<File
--			RelativePath="..\PLATFORMS"
--			>
--		</File>
--		<File
--			RelativePath="..\README"
--			>
--		</File>
--		<File
--			RelativePath="..\README.Darwin"
--			>
--		</File>
--		<File
--			RelativePath="..\README.Win32"
--			>
--		</File>
--		<File
--			RelativePath="..\RELNOTES"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Equalizer Client Library"
-+	ProjectGUID="{21B10D06-2D20-4095-846C-C5F9EDADB6BD}"
-+	RootNamespace="Equalizer Client Library"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				OpenMP="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
-+				OutputFile="$(OutDir)/Equalizer.dll"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/Equalizer.pdb"
-+				SubSystem="0"
-+				LargeAddressAware="2"
-+				ImportLibrary="$(OutDir)/Equalizer.lib"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				OpenMP="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
-+				OutputFile="$(OutDir)/Equalizer.dll"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/Equalizer.pdb"
-+				SubSystem="0"
-+				ImportLibrary="$(OutDir)/Equalizer.lib"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+				Description=""
-+				CommandLine=""
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				OpenMP="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
-+				OutputFile="$(OutDir)/Equalizer.dll"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="0"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				ImportLibrary="$(OutDir)/Equalizer.lib"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/lib/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="2"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+				Description=""
-+				CommandLine=""
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				OpenMP="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="2"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib ws2_32.lib opengl32.lib mswsock.lib"
-+				OutputFile="$(OutDir)/Equalizer.dll"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="0"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				ImportLibrary="$(OutDir)/Equalizer.lib"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="compressor"
-+			>
-+			<File
-+				RelativePath="..\lib\compressor\compressor.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressor.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4B.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4B.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4BU.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4BU.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4HF.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLE4HF.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\compressor\compressorRLEU.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="plugins"
-+			>
-+			<File
-+				RelativePath="..\lib\plugins\compressor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/plugins/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/plugins\&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/plugins\/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="base"
-+			>
-+			<File
-+				RelativePath="..\lib\base\atomic.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\base.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\buffer.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\clock.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\compareAndSwap.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\debug.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\debug.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\definesWin32.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/defines.h&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/defines.h&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dispatcher.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\dso.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\dso.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\executionListener.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\fileSearch.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\hash.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\idPool.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\idPool.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\init.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)2.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)2.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)2.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)2.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\init.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\launcher.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\launcher.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\lock.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\lock.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\log.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\log.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\memoryMap.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\memoryMap.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\monitor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\monitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\mtQueue.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\nonCopyable.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\omp.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\omp.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\perThread.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\perThreadRef.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\referenced.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\refPtr.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\uuid.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\uuid.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\requestHandler.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\requestHandler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\rng.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\scopedMutex.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\sleep.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\stdExt.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\thread.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\thread.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\timedLock.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\timedLock.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\base\types.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/base&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/base/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="net"
-+			>
-+			<File
-+				RelativePath="..\lib\net\barrier.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\barrier.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\bufferConnection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\bufferConnection.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\command.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\command.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandCache.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandCache.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandFunc.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandQueue.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandQueue.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commandResult.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\commands.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connection.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connection.ipp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionDescription.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionDescription.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionListener.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionSet.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionSet.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\connectionType.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dataIStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dataIStream.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dataOStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dataOStream.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\deltaMasterCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\deltaMasterCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\dispatcher.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fdConnection.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fdConnection.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fullMasterCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fullMasterCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fullSlaveCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\fullSlaveCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\global.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\global.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\init.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\init.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\log.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\namedPipeConnection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\namedPipeConnection.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\namedPipeConnectionPosix.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\namedPipeConnectionWin32.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\net.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\node.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\node.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\nodeType.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\nullCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\object.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\object.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectCM.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDataIStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDataIStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDataOStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDeltaDataIStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDeltaDataIStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDeltaDataOStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectDeltaDataOStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectInstanceDataIStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectInstanceDataIStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectInstanceDataOStream.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectInstanceDataOStream.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectVersion.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\objectVersion.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\packets.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\packets.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pairConnection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pairConnection.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pipeConnection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pipeConnection.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pipeConnectionPosix.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\pipeConnectionWin32.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\session.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\session.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\socketConnection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\socketConnection.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\socketConnectionPosix.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\socketConnectionWin32.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\staticMasterCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\staticMasterCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\staticSlaveCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\staticSlaveCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\types.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/net&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/net/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\unbufferedMasterCM.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\net\unbufferedMasterCM.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\util\util.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="client"
-+			>
-+			<File
-+				RelativePath="..\lib\client\aglEventHandler.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\aglEventHandler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\aglMessagePump.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\aglMessagePump.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\aglWindow.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\aglWindow.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\canvas.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\canvas.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\canvasVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\channel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\channel.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\channelStatistics.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\channelStatistics.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\channelVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\client.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\client.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\colorMask.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\colorMask.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\commandQueue.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\commandQueue.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\commands.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\compositor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\compositor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\compressor.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\compressor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\config.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\config.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configDeserializer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configDeserializer.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configEvent.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configEvent.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configParams.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configParams.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configStatistics.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configStatistics.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\configVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\event.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\event.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\statistic.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\statistic.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\eventHandler.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\eventHandler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\eye.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\eye.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frame.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frame.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameBufferObject.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameBufferObject.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameData.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frustum.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frustum.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\global.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\global.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\glXEventHandler.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\glXEventHandler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\glXWindow.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\glXWindow.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\image.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\image.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\init.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\init.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\layout.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\layout.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\layoutVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\log.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\messagePump.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\node.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\node.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\nodeFactory.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\nodeFactory.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameDataStatistics.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\frameDataStatistics.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\nodeType.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\nodeVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\object.cpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						ObjectFile="$(IntDir)/$(InputName)1.obj"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\object.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\objectManager.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\objectManager.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\observer.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\observer.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\observerVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\osPipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\osPipe.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\osWindow.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\osWindow.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\packets.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pipe.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pipeStatistics.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pipeVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pixel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pixel.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pixelViewport.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pluginRegistry.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\pluginRegistry.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\projection.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\projection.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\range.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\range.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\renderContext.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\renderContext.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiEmptySpaceFinder.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiEmptySpaceFinder.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiFinder.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiFinder.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiTracker.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\roiTracker.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\segment.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\segment.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\segmentVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\server.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\server.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\task.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\texture.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\texture.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\types.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\version.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\version.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\view.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\view.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\viewport.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\viewport.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\viewVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\visitorResult.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wall.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wall.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglEventHandler.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglEventHandler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglMessagePump.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglMessagePump.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglPipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglPipe.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglWindow.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglWindow.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\wglWindowEvent.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\window.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\window.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\windowStatistics.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\windowStatistics.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\statisticSampler.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\windowSystem.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\windowSystem.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\windowVisitor.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\X11Connection.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\zoom.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\client\zoom.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="vmmlib"
-+			>
-+			<File
-+				RelativePath="..\externals\vmmlib\enable_if.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\exception.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\frustum.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\frustum_culler.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\jacobi_solver.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\lapack.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\lapack_includes.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\lapack_linear_least_squares.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\lapack_svd.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\lapack_types.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\linear_least_squares.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\math.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\matrix.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\matrix_functors.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\qr_decomposition.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\quaternion.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\svd.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\vector.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\visibility.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\vmmlib.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\vmmlib\vmmlib_config.hpp"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/vmmlib&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/vmmlib/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="glew"
-+			>
-+			<File
-+				RelativePath="..\lib\glew\glew.c"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCLCompilerTool"
-+						PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\GL\glew.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\externals\gl\wglew.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/GL&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/GL/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="util"
-+			>
-+			<File
-+				RelativePath="..\lib\util\bitmapFont.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\lib\util\bitmapFont.h"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying $(InputFileName)"
-+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/util&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)Headers/eq/util/$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Libraries"
-+			Filter="dll;lib"
-+			>
-+			<File
-+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (x64)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (x64)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\Windows\pthreads\lib\pthreadVC2.dll"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (win32)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description=""
-+						CommandLine=""
-+						Outputs=""
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (win32)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description=""
-+						CommandLine=""
-+						Outputs=""
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (x64)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (x64)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+			</File>
-+			<File
-+				RelativePath="..\Windows\pthreads\lib\pthreadVC2.lib"
-+				>
-+				<FileConfiguration
-+					Name="Debug|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (win32)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Debug|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description=""
-+						CommandLine=""
-+						Outputs=""
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|Win32"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description="copying library (win32)"
-+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-+					/>
-+				</FileConfiguration>
-+				<FileConfiguration
-+					Name="Release|x64"
-+					ExcludedFromBuild="true"
-+					>
-+					<Tool
-+						Name="VCCustomBuildTool"
-+						Description=""
-+						CommandLine=""
-+						Outputs=""
-+					/>
-+				</FileConfiguration>
-+			</File>
-+		</Filter>
-+		<File
-+			RelativePath="..\AUTHORS"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\Doxyfile"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\lib\eq.h"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="copying $(InputFileName)"
-+					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="copying $(InputFileName)"
-+					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="copying $(InputFileName)"
-+					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCustomBuildTool"
-+					Description="copying $(InputFileName)"
-+					CommandLine="mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
-+					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+		<File
-+			RelativePath="..\FAQ"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\LGPL"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\LICENSE"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\Makefile"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\lib\Makefile"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\PLATFORMS"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\README"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\README.Darwin"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\README.Win32"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\RELNOTES"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/netPerf.vcproj
-===================================================================
---- VS2005/netPerf.vcproj	(revision 3280)
-+++ VS2005/netPerf.vcproj	(working copy)
-@@ -1,7 +1,7 @@
- <?xml version="1.0" encoding="Windows-1252"?>
- <VisualStudioProject
- 	ProjectType="Visual C++"
--	Version="8.00"
-+	Version="8,00"
- 	Name="NetPerf"
- 	ProjectGUID="{891B47F2-0A50-4D42-A724-95886FA1F149}"
- 	RootNamespace="NetPerf"
-@@ -48,7 +48,7 @@
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
- 				MinimalRebuild="true"
- 				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
-+				RuntimeLibrary="1"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -132,7 +132,7 @@
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
- 				MinimalRebuild="true"
- 				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
-+				RuntimeLibrary="1"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -211,7 +211,7 @@
- 				Name="VCCLCompilerTool"
- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
-+				RuntimeLibrary="0"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-@@ -293,7 +293,7 @@
- 				Name="VCCLCompilerTool"
- 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
- 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
-+				RuntimeLibrary="0"
- 				RuntimeTypeInfo="true"
- 				UsePrecompiledHeader="0"
- 				WarningLevel="1"
-Index: VS2005/ConfigTool.vcproj
-===================================================================
---- VS2005/ConfigTool.vcproj	(revision 3280)
-+++ VS2005/ConfigTool.vcproj	(working copy)
-@@ -1,382 +1,382 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="ConfigTool"
--	ProjectGUID="{FBA57966-235F-49FB-B44A-16B95F837A9F}"
--	RootNamespace="ConfigTool"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				OutputFile="$(OutDir)/configTool.exe"
--				LinkIncremental="2"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/configTool.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				OutputFile="$(OutDir)/configTool.exe"
--				LinkIncremental="2"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/configTool.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				OutputFile="$(OutDir)/configTool.exe"
--				LinkIncremental="1"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				OutputFile="$(OutDir)/configTool.exe"
--				LinkIncremental="1"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
--			>
--			<File
--				RelativePath="..\tools\configTool\configTool.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\tools\configTool\writeFromFile.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
--			>
--			<File
--				RelativePath="..\tools\configTool\configTool.h"
--				>
--			</File>
--			<File
--				RelativePath="..\tools\configTool\frame.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
--			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
--			>
--		</Filter>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="ConfigTool"
-+	ProjectGUID="{FBA57966-235F-49FB-B44A-16B95F837A9F}"
-+	RootNamespace="ConfigTool"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				OutputFile="$(OutDir)/configTool.exe"
-+				LinkIncremental="2"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/configTool.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				OutputFile="$(OutDir)/configTool.exe"
-+				LinkIncremental="2"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/configTool.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				OutputFile="$(OutDir)/configTool.exe"
-+				LinkIncremental="1"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/configTool/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				OutputFile="$(OutDir)/configTool.exe"
-+				LinkIncremental="1"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-+			>
-+			<File
-+				RelativePath="..\tools\configTool\configTool.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\tools\configTool\writeFromFile.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-+			>
-+			<File
-+				RelativePath="..\tools\configTool\configTool.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\tools\configTool\frame.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
-+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
-+			>
-+		</Filter>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/frustumTest.vcproj
-===================================================================
---- VS2005/frustumTest.vcproj	(revision 3280)
-+++ VS2005/frustumTest.vcproj	(working copy)
-@@ -1,360 +1,360 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="Frustum"
--	ProjectGUID="{7BFEE945-DA05-4465-BDA8-A22828585FFF}"
--	RootNamespace="Frustum"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/convert.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/convert.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/convert.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/frustum.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/frustum.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/convert.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tests\frustum\convert.cpp"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="Frustum"
-+	ProjectGUID="{7BFEE945-DA05-4465-BDA8-A22828585FFF}"
-+	RootNamespace="Frustum"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/convert.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/convert.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/convert.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/frustum.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/frustum.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/frustum/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/convert.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tests\frustum\convert.cpp"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/eqPly Example.vcproj
-===================================================================
---- VS2005/eqPly Example.vcproj	(revision 3280)
-+++ VS2005/eqPly Example.vcproj	(working copy)
-@@ -1,546 +1,546 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="eqPly Polygon Rendering Example"
--	ProjectGUID="{2FD1A5A9-6EA4-4D0B-B00B-5D10405644DD}"
--	RootNamespace="eqPly Example"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPly.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqPly Example.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPly.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/eqPly Example.pdb"
--				SubSystem="0"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPly.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/eqPly.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<Filter
--			Name="Source Files"
--			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
--			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
--			>
--			<File
--				RelativePath="..\examples\eqPly\cameraAnimation.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\channel.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\config.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\eqPly.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\frameData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\initData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\localInitData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\main.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\node.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\pipe.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\plyfile.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\tracker.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferBase.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferDist.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferLeaf.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferNode.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferRoot.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexData.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\view.cpp"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\window.cpp"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Header Files"
--			Filter="h;hpp;hxx;hm;inl;inc;xsd"
--			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
--			>
--			<File
--				RelativePath="..\examples\eqPly\cameraAnimation.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\channel.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\config.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\eqPly.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\frameData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\initData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\localInitData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\node.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\pipe.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\ply.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\tracker.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\typedefs.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferBase.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferDist.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferLeaf.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferNode.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferRoot.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexBufferState.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\vertexData.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\view.h"
--				>
--			</File>
--			<File
--				RelativePath="..\examples\eqPly\window.h"
--				>
--			</File>
--		</Filter>
--		<Filter
--			Name="Resource Files"
--			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
--			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
--			>
--		</Filter>
--		<File
--			RelativePath="..\examples\eqPly\README"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="eqPly Polygon Rendering Example"
-+	ProjectGUID="{2FD1A5A9-6EA4-4D0B-B00B-5D10405644DD}"
-+	RootNamespace="eqPly Example"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPly.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqPly Example.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPly.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/eqPly Example.pdb"
-+				SubSystem="0"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPly.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/eqPly/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/eqPly.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<Filter
-+			Name="Source Files"
-+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
-+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
-+			>
-+			<File
-+				RelativePath="..\examples\eqPly\cameraAnimation.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\channel.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\config.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\eqPly.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\frameData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\initData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\localInitData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\main.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\node.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\pipe.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\plyfile.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\tracker.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferBase.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferDist.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferLeaf.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferNode.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferRoot.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexData.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\view.cpp"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\window.cpp"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Header Files"
-+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
-+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
-+			>
-+			<File
-+				RelativePath="..\examples\eqPly\cameraAnimation.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\channel.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\config.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\eqPly.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\frameData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\initData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\localInitData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\node.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\pipe.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\ply.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\tracker.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\typedefs.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferBase.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferDist.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferLeaf.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferNode.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferRoot.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexBufferState.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\vertexData.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\view.h"
-+				>
-+			</File>
-+			<File
-+				RelativePath="..\examples\eqPly\window.h"
-+				>
-+			</File>
-+		</Filter>
-+		<Filter
-+			Name="Resource Files"
-+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
-+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
-+			>
-+		</Filter>
-+		<File
-+			RelativePath="..\examples\eqPly\README"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/affinityCheck.vcproj
-===================================================================
---- VS2005/affinityCheck.vcproj	(revision 3280)
-+++ VS2005/affinityCheck.vcproj	(working copy)
-@@ -1,400 +1,400 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="GPU Affinity Checker"
--	ProjectGUID="{1A7E5106-F51D-4D8D-BE5D-0FCAF0B9E1EA}"
--	RootNamespace="affinityCheck"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="opengl32.lib"
--				OutputFile="$(OutDir)/affinityCheck.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/affinityCheck.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="opengl32.lib"
--				OutputFile="$(OutDir)/affinityCheck.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/affinityCheck.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="opengl32.lib"
--				OutputFile="$(OutDir)/affinityCheck.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="opengl32.lib"
--				OutputFile="$(OutDir)/affinityCheck.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tools\affinityCheck\affinityCheck.cpp"
--			>
--		</File>
--		<File
--			RelativePath="..\lib\glew\glew.c"
--			>
--			<FileConfiguration
--				Name="Debug|Win32"
--				>
--				<Tool
--					Name="VCCLCompilerTool"
--					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					ObjectFile="$(IntDir)/$(InputName)1.obj"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Debug|x64"
--				>
--				<Tool
--					Name="VCCLCompilerTool"
--					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					ObjectFile="$(IntDir)/$(InputName)1.obj"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|Win32"
--				>
--				<Tool
--					Name="VCCLCompilerTool"
--					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					ObjectFile="$(IntDir)/$(InputName)1.obj"
--				/>
--			</FileConfiguration>
--			<FileConfiguration
--				Name="Release|x64"
--				>
--				<Tool
--					Name="VCCLCompilerTool"
--					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
--					ObjectFile="$(IntDir)/$(InputName)1.obj"
--				/>
--			</FileConfiguration>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="GPU Affinity Checker"
-+	ProjectGUID="{1A7E5106-F51D-4D8D-BE5D-0FCAF0B9E1EA}"
-+	RootNamespace="affinityCheck"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="opengl32.lib"
-+				OutputFile="$(OutDir)/affinityCheck.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/affinityCheck.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="opengl32.lib"
-+				OutputFile="$(OutDir)/affinityCheck.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/affinityCheck.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="opengl32.lib"
-+				OutputFile="$(OutDir)/affinityCheck.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/affinityCheck/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="opengl32.lib"
-+				OutputFile="$(OutDir)/affinityCheck.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tools\affinityCheck\affinityCheck.cpp"
-+			>
-+		</File>
-+		<File
-+			RelativePath="..\lib\glew\glew.c"
-+			>
-+			<FileConfiguration
-+				Name="Debug|Win32"
-+				>
-+				<Tool
-+					Name="VCCLCompilerTool"
-+					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					ObjectFile="$(IntDir)/$(InputName)1.obj"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Debug|x64"
-+				>
-+				<Tool
-+					Name="VCCLCompilerTool"
-+					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					ObjectFile="$(IntDir)/$(InputName)1.obj"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|Win32"
-+				>
-+				<Tool
-+					Name="VCCLCompilerTool"
-+					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					ObjectFile="$(IntDir)/$(InputName)1.obj"
-+				/>
-+			</FileConfiguration>
-+			<FileConfiguration
-+				Name="Release|x64"
-+				>
-+				<Tool
-+					Name="VCCLCompilerTool"
-+					PreprocessorDefinitions="GLEW_MX;GLEW_BUILD"
-+					ObjectFile="$(IntDir)/$(InputName)1.obj"
-+				/>
-+			</FileConfiguration>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/base/refPtr.vcproj
-===================================================================
---- VS2005/base/refPtr.vcproj	(revision 3280)
-+++ VS2005/base/refPtr.vcproj	(working copy)
-@@ -1,360 +1,360 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="RefPtr"
--	ProjectGUID="{891B47F2-0A50-4D42-83E2-95886FA1F149}"
--	RootNamespace="RefPtr"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/refPtr.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/refPtr.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/refPtr.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/refPtr.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/refPtr.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/refPtr.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\..\tests\base\refPtr.cpp"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="RefPtr"
-+	ProjectGUID="{891B47F2-0A50-4D42-83E2-95886FA1F149}"
-+	RootNamespace="RefPtr"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/refPtr.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/refPtr.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/refPtr.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/refPtr.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/refPtr.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../../obj/VS2005/refPtr/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/refPtr.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\..\tests\base\refPtr.cpp"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: VS2005/pipePerf.vcproj
-===================================================================
---- VS2005/pipePerf.vcproj	(revision 3280)
-+++ VS2005/pipePerf.vcproj	(working copy)
-@@ -1,360 +1,360 @@
--<?xml version="1.0" encoding="Windows-1252"?>
--<VisualStudioProject
--	ProjectType="Visual C++"
--	Version="8,00"
--	Name="PipePerf"
--	ProjectGUID="{991B47F2-0A50-4D42-A724-95886FA1F149}"
--	RootNamespace="PipePerf"
--	Keyword="Win32Proj"
--	>
--	<Platforms>
--		<Platform
--			Name="Win32"
--		/>
--		<Platform
--			Name="x64"
--		/>
--	</Platforms>
--	<ToolFiles>
--	</ToolFiles>
--	<Configurations>
--		<Configuration
--			Name="Debug|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="4"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/pipePerf.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/pipePerf.pdb"
--				SubSystem="1"
--				LargeAddressAware="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Debug|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				Optimization="0"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
--				MinimalRebuild="true"
--				BasicRuntimeChecks="3"
--				RuntimeLibrary="3"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/pipePerf.exe"
--				LinkIncremental="2"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				ProgramDatabaseFile="$(OutDir)/pipePerf.pdb"
--				SubSystem="1"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|Win32"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/pipePerf.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				LargeAddressAware="2"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="1"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--		<Configuration
--			Name="Release|x64"
--			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
--			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
--			ConfigurationType="1"
--			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
--			CharacterSet="2"
--			>
--			<Tool
--				Name="VCPreBuildEventTool"
--			/>
--			<Tool
--				Name="VCCustomBuildTool"
--			/>
--			<Tool
--				Name="VCXMLDataGeneratorTool"
--			/>
--			<Tool
--				Name="VCWebServiceProxyGeneratorTool"
--			/>
--			<Tool
--				Name="VCMIDLTool"
--				TargetEnvironment="3"
--			/>
--			<Tool
--				Name="VCCLCompilerTool"
--				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
--				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
--				RuntimeLibrary="2"
--				RuntimeTypeInfo="true"
--				UsePrecompiledHeader="0"
--				WarningLevel="1"
--				Detect64BitPortabilityProblems="true"
--				DebugInformationFormat="3"
--			/>
--			<Tool
--				Name="VCManagedResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCResourceCompilerTool"
--			/>
--			<Tool
--				Name="VCPreLinkEventTool"
--			/>
--			<Tool
--				Name="VCLinkerTool"
--				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
--				OutputFile="$(OutDir)/pipePerf.exe"
--				LinkIncremental="1"
--				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
--				GenerateDebugInformation="true"
--				SubSystem="1"
--				OptimizeReferences="2"
--				EnableCOMDATFolding="2"
--				TargetMachine="17"
--			/>
--			<Tool
--				Name="VCALinkTool"
--			/>
--			<Tool
--				Name="VCManifestTool"
--			/>
--			<Tool
--				Name="VCXDCMakeTool"
--			/>
--			<Tool
--				Name="VCBscMakeTool"
--			/>
--			<Tool
--				Name="VCFxCopTool"
--			/>
--			<Tool
--				Name="VCAppVerifierTool"
--			/>
--			<Tool
--				Name="VCWebDeploymentTool"
--			/>
--			<Tool
--				Name="VCPostBuildEventTool"
--			/>
--		</Configuration>
--	</Configurations>
--	<References>
--	</References>
--	<Files>
--		<File
--			RelativePath="..\tests\pipePerf\pipePerf.cpp"
--			>
--		</File>
--	</Files>
--	<Globals>
--	</Globals>
--</VisualStudioProject>
-+<?xml version="1.0" encoding="Windows-1252"?>
-+<VisualStudioProject
-+	ProjectType="Visual C++"
-+	Version="8,00"
-+	Name="PipePerf"
-+	ProjectGUID="{991B47F2-0A50-4D42-A724-95886FA1F149}"
-+	RootNamespace="PipePerf"
-+	Keyword="Win32Proj"
-+	>
-+	<Platforms>
-+		<Platform
-+			Name="Win32"
-+		/>
-+		<Platform
-+			Name="x64"
-+		/>
-+	</Platforms>
-+	<ToolFiles>
-+	</ToolFiles>
-+	<Configurations>
-+		<Configuration
-+			Name="Debug|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="4"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/pipePerf.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/pipePerf.pdb"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Debug|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				Optimization="0"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
-+				MinimalRebuild="true"
-+				BasicRuntimeChecks="3"
-+				RuntimeLibrary="1"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/pipePerf.exe"
-+				LinkIncremental="2"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				ProgramDatabaseFile="$(OutDir)/pipePerf.pdb"
-+				SubSystem="1"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|Win32"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/pipePerf.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				LargeAddressAware="2"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="1"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+		<Configuration
-+			Name="Release|x64"
-+			OutputDirectory="../build/VS2005/$(PlatformName)/$(ConfigurationName)"
-+			IntermediateDirectory="../obj/VS2005/pipePerf/$(PlatformName)/$(ConfigurationName)"
-+			ConfigurationType="1"
-+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
-+			CharacterSet="2"
-+			>
-+			<Tool
-+				Name="VCPreBuildEventTool"
-+			/>
-+			<Tool
-+				Name="VCCustomBuildTool"
-+			/>
-+			<Tool
-+				Name="VCXMLDataGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCWebServiceProxyGeneratorTool"
-+			/>
-+			<Tool
-+				Name="VCMIDLTool"
-+				TargetEnvironment="3"
-+			/>
-+			<Tool
-+				Name="VCCLCompilerTool"
-+				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
-+				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-+				RuntimeLibrary="0"
-+				RuntimeTypeInfo="true"
-+				UsePrecompiledHeader="0"
-+				WarningLevel="1"
-+				Detect64BitPortabilityProblems="true"
-+				DebugInformationFormat="3"
-+			/>
-+			<Tool
-+				Name="VCManagedResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCResourceCompilerTool"
-+			/>
-+			<Tool
-+				Name="VCPreLinkEventTool"
-+			/>
-+			<Tool
-+				Name="VCLinkerTool"
-+				AdditionalDependencies="pthreadVC2.lib rpcrt4.lib opengl32.lib"
-+				OutputFile="$(OutDir)/pipePerf.exe"
-+				LinkIncremental="1"
-+				AdditionalLibraryDirectories="&quot;$(OutDir)&quot;"
-+				GenerateDebugInformation="true"
-+				SubSystem="1"
-+				OptimizeReferences="2"
-+				EnableCOMDATFolding="2"
-+				TargetMachine="17"
-+			/>
-+			<Tool
-+				Name="VCALinkTool"
-+			/>
-+			<Tool
-+				Name="VCManifestTool"
-+			/>
-+			<Tool
-+				Name="VCXDCMakeTool"
-+			/>
-+			<Tool
-+				Name="VCBscMakeTool"
-+			/>
-+			<Tool
-+				Name="VCFxCopTool"
-+			/>
-+			<Tool
-+				Name="VCAppVerifierTool"
-+			/>
-+			<Tool
-+				Name="VCWebDeploymentTool"
-+			/>
-+			<Tool
-+				Name="VCPostBuildEventTool"
-+			/>
-+		</Configuration>
-+	</Configurations>
-+	<References>
-+	</References>
-+	<Files>
-+		<File
-+			RelativePath="..\tests\pipePerf\pipePerf.cpp"
-+			>
-+		</File>
-+	</Files>
-+	<Globals>
-+	</Globals>
-+</VisualStudioProject>
-Index: examples/eqPixelBench/channel.cpp
-===================================================================
---- examples/eqPixelBench/channel.cpp	(revision 3280)
-+++ examples/eqPixelBench/channel.cpp	(working copy)
-@@ -227,6 +227,7 @@
+          * Attach an object to an identifier.
+@@ -254,7 +254,7 @@
+          * @param instanceID the node-local instance identifier, or
+          *                   EQ_ID_INVALID if this method should generate one.
+          */
+-        EQ_EXPORT void attachObject( Object* object, const uint32_t id, 
++        void attachObject( Object* object, const uint32_t id, 
+                            const uint32_t instanceID );
  
-         clock.reset();
-         eq::Compositor::assembleImage( image, op );
-+        getWindow()->getOSWindow()->makeCurrent();
-         event.msec = clock.getTimef();
+         /** 
+@@ -262,7 +262,7 @@
+          * 
+          * @param object the attached object.
+          */
+-        EQ_EXPORT void detachObject( Object* object );
++        void detachObject( Object* object );
+         //@}
  
-         error = glGetError();
-@@ -402,6 +403,7 @@
-         for( unsigned j = 0; j <= tiles; ++j )
-             eq::Compositor::assembleImage( images[j], op );
  
-+        getWindow()->getOSWindow()->makeCurrent();
-         event.msec = clock.getTimef();
-         config->sendEvent( event );
+@@ -276,7 +276,7 @@
+          *
+          * @param node the node to which the session has been mapped.
+          */
+-        EQ_EXPORT virtual void notifyMapped( NodePtr node );
++        virtual void notifyMapped( NodePtr node );
+         //@}
  
-@@ -414,6 +416,7 @@
- 
-         clock.reset();
-         eq::Compositor::assembleFramesCPU( frames, this );
-+        getWindow()->getOSWindow()->makeCurrent();
-         event.msec = clock.getTimef();
-         config->sendEvent( event );            
-     }
+     protected:
+Index: lib/net/socketConnection.h
+===================================================================
+--- lib/net/socketConnection.h	(revision 3295)
++++ lib/net/socketConnection.h	(working copy)
+@@ -34,7 +34,7 @@
+ namespace net
+ {
+     /** A socket connection (TCPIP or SDP). */
+-    class SocketConnection
++    class EQ_EXPORT SocketConnection
+ #ifdef WIN32
+         : public Connection
+ #else
Index: server/channel.h
===================================================================
--- server/channel.h	(revision 3295)
+++ server/channel.h	(working copy)
@@ -52,7 +52,7 @@
     /**
      * The channel.
      */
-    class Channel : public net::Object
+    class EQSERVER_EXPORT Channel : public net::Object
     {
     public:
         enum State
@@ -70,7 +70,7 @@
         /** 
          * Constructs a new Channel.
          */
-        EQSERVER_EXPORT Channel();
+        Channel();
 
         /** 
          * Constructs a new deep copy of a channel.
@@ -92,8 +92,8 @@
         Config* getConfig();
         const Config* getConfig() const;
 
-        EQSERVER_EXPORT Node* getNode();
-        EQSERVER_EXPORT const Node* getNode() const;
+        Node* getNode();
+        const Node* getNode() const;
 
         Pipe* getPipe();
         const Pipe* getPipe() const;
@@ -115,8 +115,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ChannelVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstChannelVisitor& ) const;
+        VisitorResult accept( ChannelVisitor& visitor );
+        VisitorResult accept( ConstChannelVisitor& ) const;
 
         /** Increase channel activition count. */
         void activate();
Index: server/compound.h
===================================================================
--- server/compound.h	(revision 3295)
+++ server/compound.h	(working copy)
@@ -52,13 +52,13 @@
     /**
      * The compound.
      */
-    class Compound
+    class EQSERVER_EXPORT Compound
     {
     public:
         /** 
          * Constructs a new Compound.
          */
-        EQSERVER_EXPORT Compound();
+        Compound();
 
         /**
          * Constructs a new, deep copy of the passed compound
@@ -114,7 +114,7 @@
          * 
          * @param child the child.
          */
-        EQSERVER_EXPORT void addChild( Compound* child );
+        void addChild( Compound* child );
 
         /** 
          * Removes a child from this compound.
@@ -163,7 +163,7 @@
          * 
          * @param channel the channel.
          */
-        EQSERVER_EXPORT void setChannel( Channel* channel );
+        void setChannel( Channel* channel );
 
         /** 
          * Return the channel of this compound.
@@ -173,8 +173,8 @@
          *
          * @return the channel of this compound.
          */
-        EQSERVER_EXPORT Channel* getChannel();
-        EQSERVER_EXPORT const Channel* getChannel() const;
+        Channel* getChannel();
+        const Channel* getChannel() const;
 
         Window* getWindow();
         const Window* getWindow() const;
@@ -186,7 +186,7 @@
         Frustum& getFrustum() { return _frustum; }
 
         /** Attach a load balancer to this compound. */
-        EQSERVER_EXPORT void addEqualizer( Equalizer* equalizer );
+        void addEqualizer( Equalizer* equalizer );
 
         /** Get the attached load balancers. */
         const EqualizerVector& getEqualizers() const
@@ -283,7 +283,7 @@
          *
          * @param frame the input frame.
          */
-        EQSERVER_EXPORT void addInputFrame( Frame* frame );
+        void addInputFrame( Frame* frame );
 
         /** @return the vector of input frames. */
         const FrameVector& getInputFrames() const {return _inputFrames; }
@@ -293,7 +293,7 @@
          *
          * @param frame the output frame.
          */
-        EQSERVER_EXPORT void addOutputFrame( Frame* frame );
+        void addOutputFrame( Frame* frame );
 
         /** @return the vector of output frames. */
         const FrameVector& getOutputFrames() const { return _outputFrames; }
@@ -348,7 +348,7 @@
          * 
          * @param wall the wall description.
          */
-        EQSERVER_EXPORT void setWall( const eq::Wall& wall );
+        void setWall( const eq::Wall& wall );
         
         /** @return the last specified wall description. */
         const eq::Wall& getWall() const { return _frustum.getWall(); }
@@ -358,7 +358,7 @@
          * 
          * @param projection the projection description.
          */
-        EQSERVER_EXPORT void setProjection( const eq::Projection& projection );
+        void setProjection( const eq::Projection& projection );
 
         /** @return the last specified projection description. */
         const eq::Projection& getProjection() const 
@@ -404,10 +404,10 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ConstCompoundVisitor& visitor )
+        VisitorResult accept( ConstCompoundVisitor& visitor )
                                           const;
         /** Non-const version of accept(). */
-        EQSERVER_EXPORT VisitorResult accept( CompoundVisitor& visitor );
+        VisitorResult accept( CompoundVisitor& visitor );
 
 
         /** Activate the compound tree. */
Index: server/server.h
===================================================================
--- server/server.h	(revision 3295)
+++ server/server.h	(working copy)
@@ -46,13 +46,13 @@
     /**
      * The Equalizer server.
      */
-    class Server : public net::Node
+    class EQSERVER_EXPORT Server : public net::Node
     {
     public:
         /** 
          * Constructs a new Server.
          */
-        EQSERVER_EXPORT Server();
+        Server();
 
         /** 
          * Runs the server.
@@ -60,7 +60,7 @@
          * @return <code>true</code> if the server did run successfully,
          *         <code>false</code> if not.
          */
-        EQSERVER_EXPORT bool run();
+        bool run();
 
         void registerConfig( Config* config );
         
@@ -69,7 +69,7 @@
          * 
          * @param config the config.
          */
-        EQSERVER_EXPORT void addConfig( Config* config );
+        void addConfig( Config* config );
 
         /** 
          * Remove a config from this config.
@@ -93,8 +93,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ServerVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstServerVisitor& ) const;
+        VisitorResult accept( ServerVisitor& visitor );
+        VisitorResult accept( ConstServerVisitor& ) const;
 
     protected:
         virtual ~Server();
Index: server/window.h
===================================================================
--- server/window.h	(revision 3295)
+++ server/window.h	(working copy)
@@ -48,7 +48,7 @@
     /**
      * The window.
      */
-    class Window : public net::Object
+    class EQSERVER_EXPORT Window : public net::Object
     {
     public:
         enum State
@@ -66,7 +66,7 @@
         /** 
          * Constructs a new Window.
          */
-        EQSERVER_EXPORT Window();
+        Window();
 
         /** 
          * Constructs a new deep copy of a window.
@@ -82,7 +82,7 @@
          * 
          * @param channel the channel.
          */
-        EQSERVER_EXPORT void addChannel( Channel* channel );
+        void addChannel( Channel* channel );
 
         /** 
          * Insert a new channel after the given channel.
@@ -133,8 +133,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( WindowVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstWindowVisitor& ) const;
+        VisitorResult accept( WindowVisitor& visitor );
+        VisitorResult accept( ConstWindowVisitor& ) const;
 
         /** Increase window activition count. */
         void activate();
@@ -159,7 +159,7 @@
          * 
          * @param pvp the viewport in pixels.
          */
-        EQSERVER_EXPORT void setPixelViewport( const eq::PixelViewport& pvp );
+        void setPixelViewport( const eq::PixelViewport& pvp );
 
         /** 
          * Return this window's pixel viewport.
Index: VS2005/accept.vcproj
===================================================================
--- VS2005/accept.vcproj	(revision 3295)
+++ VS2005/accept.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/affinityCheck.vcproj
===================================================================
--- VS2005/affinityCheck.vcproj	(revision 3295)
+++ VS2005/affinityCheck.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/base/refPtr.vcproj
===================================================================
--- VS2005/base/refPtr.vcproj	(revision 3295)
+++ VS2005/base/refPtr.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/compositor.vcproj
===================================================================
--- VS2005/compositor.vcproj	(revision 3295)
+++ VS2005/compositor.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/ConfigTool.vcproj
===================================================================
--- VS2005/ConfigTool.vcproj	(revision 3295)
+++ VS2005/ConfigTool.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -130,7 +130,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -207,7 +207,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -287,7 +287,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/eqHello.vcproj
===================================================================
--- VS2005/eqHello.vcproj	(revision 3295)
+++ VS2005/eqHello.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/eqPly Example.vcproj
===================================================================
--- VS2005/eqPly Example.vcproj	(revision 3295)
+++ VS2005/eqPly Example.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/Equalizer Server Library.vcproj
===================================================================
--- VS2005/Equalizer Server Library.vcproj	(revision 3295)
+++ VS2005/Equalizer Server Library.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -133,7 +133,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -213,7 +213,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -298,7 +298,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
Index: VS2005/Equalizer Server.vcproj
===================================================================
--- VS2005/Equalizer Server.vcproj	(revision 3295)
+++ VS2005/Equalizer Server.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/Equalizer.vcproj
===================================================================
--- VS2005/Equalizer.vcproj	(revision 3295)
+++ VS2005/Equalizer.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -134,7 +134,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -217,7 +217,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -303,7 +303,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -1666,11 +1666,11 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\uuid.cpp"
+				RelativePath="..\lib\base\requestHandler.cpp"
 				>
 			</File>
 			<File
-				RelativePath="..\lib\base\uuid.h"
+				RelativePath="..\lib\base\requestHandler.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -1714,12 +1714,8 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\requestHandler.cpp"
+				RelativePath="..\lib\base\rng.h"
 				>
-			</File>
-			<File
-				RelativePath="..\lib\base\requestHandler.h"
-				>
 				<FileConfiguration
 					Name="Debug|Win32"
 					>
@@ -1762,7 +1758,7 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\rng.h"
+				RelativePath="..\lib\base\scopedMutex.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -1806,7 +1802,7 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\scopedMutex.h"
+				RelativePath="..\lib\base\sleep.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -1850,7 +1846,7 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\sleep.h"
+				RelativePath="..\lib\base\stdExt.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -1894,8 +1890,12 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\stdExt.h"
+				RelativePath="..\lib\base\thread.cpp"
 				>
+			</File>
+			<File
+				RelativePath="..\lib\base\thread.h"
+				>
 				<FileConfiguration
 					Name="Debug|Win32"
 					>
@@ -1938,11 +1938,11 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\thread.cpp"
+				RelativePath="..\lib\base\timedLock.cpp"
 				>
 			</File>
 			<File
-				RelativePath="..\lib\base\thread.h"
+				RelativePath="..\lib\base\timedLock.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -1986,12 +1986,8 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\timedLock.cpp"
+				RelativePath="..\lib\base\types.h"
 				>
-			</File>
-			<File
-				RelativePath="..\lib\base\timedLock.h"
-				>
 				<FileConfiguration
 					Name="Debug|Win32"
 					>
@@ -2034,8 +2030,12 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\base\types.h"
+				RelativePath="..\lib\base\uuid.cpp"
 				>
+			</File>
+			<File
+				RelativePath="..\lib\base\uuid.h"
+				>
 				<FileConfiguration
 					Name="Debug|Win32"
 					>
@@ -4922,50 +4922,6 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\client\statistic.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\lib\client\statistic.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
 				RelativePath="..\lib\client\eventHandler.cpp"
 				>
 			</File>
@@ -5186,6 +5142,14 @@
 				</FileConfiguration>
 			</File>
 			<File
+				RelativePath="..\lib\client\frameDataStatistics.cpp"
+				>
+			</File>
+			<File
+				RelativePath="..\lib\client\frameDataStatistics.h"
+				>
+			</File>
+			<File
 				RelativePath="..\lib\client\frustum.cpp"
 				>
 			</File>
@@ -5866,14 +5830,6 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\client\frameDataStatistics.cpp"
-				>
-			</File>
-			<File
-				RelativePath="..\lib\client\frameDataStatistics.h"
-				>
-			</File>
-			<File
 				RelativePath="..\lib\client\nodeType.h"
 				>
 				<FileConfiguration
@@ -6806,6 +6762,90 @@
 				</FileConfiguration>
 			</File>
 			<File
+				RelativePath="..\lib\client\statistic.cpp"
+				>
+			</File>
+			<File
+				RelativePath="..\lib\client\statistic.h"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Debug|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\lib\client\statisticSampler.h"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Debug|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
 				RelativePath="..\lib\client\task.h"
 				>
 				<FileConfiguration
@@ -7482,46 +7522,6 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\lib\client\statisticSampler.h"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						CommandLine="mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
 				RelativePath="..\lib\client\windowSystem.cpp"
 				>
 			</File>
Index: VS2005/eVolve.vcproj
===================================================================
--- VS2005/eVolve.vcproj	(revision 3295)
+++ VS2005/eVolve.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/frustumTest.vcproj
===================================================================
--- VS2005/frustumTest.vcproj	(revision 3295)
+++ VS2005/frustumTest.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/image.vcproj
===================================================================
--- VS2005/image.vcproj	(revision 3295)
+++ VS2005/image.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/netPerf.vcproj
===================================================================
--- VS2005/netPerf.vcproj	(revision 3295)
+++ VS2005/netPerf.vcproj	(working copy)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="Windows-1252"?>
 <VisualStudioProject
 	ProjectType="Visual C++"
-	Version="8.00"
+	Version="8,00"
 	Name="NetPerf"
 	ProjectGUID="{891B47F2-0A50-4D42-A724-95886FA1F149}"
 	RootNamespace="NetPerf"
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/netProxy.vcproj
===================================================================
--- VS2005/netProxy.vcproj	(revision 3295)
+++ VS2005/netProxy.vcproj	(working copy)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="Windows-1252"?>
 <VisualStudioProject
 	ProjectType="Visual C++"
-	Version="8.00"
+	Version="8,00"
 	Name="NetProxy"
 	ProjectGUID="{BA9D9327-A284-419A-B5E3-A2EBCD84165E}"
 	RootNamespace="NetProxy"
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/pipePerf.vcproj
===================================================================
--- VS2005/pipePerf.vcproj	(revision 3295)
+++ VS2005/pipePerf.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/pixelBench.vcproj
===================================================================
--- VS2005/pixelBench.vcproj	(revision 3295)
+++ VS2005/pixelBench.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
