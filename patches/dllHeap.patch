Index: lib/base/clock.h
===================================================================
--- lib/base/clock.h	(revision 3828)
+++ lib/base/clock.h	(working copy)
@@ -37,7 +37,7 @@
 namespace base
 {
     /** A class for time measurements. */
-    class Clock
+    class EQ_EXPORT Clock
     {
     public :
         /** Construct a new clock. @version 1.0 */
Index: lib/base/dso.h
===================================================================
--- lib/base/dso.h	(revision 3828)
+++ lib/base/dso.h	(working copy)
@@ -30,11 +30,11 @@
 {
 
     /** Helper to access dynamic shared objects (DSO) */
-    class DSO : public NonCopyable
+    class EQ_EXPORT DSO : public NonCopyable
     {
     public:
         /** Construct a new dynamic shared object. @version 1.0 */
-        EQ_EXPORT DSO() : _dso( 0 ) {}
+        DSO() : _dso( 0 ) {}
 
         /** 
          * Open a dynamic shared object.
@@ -43,20 +43,20 @@
          * @return true if the DSO was opened, false upon error.
          * @version 1.0
          */
-        EQ_EXPORT bool open( const std::string& fileName );
+        bool open( const std::string& fileName );
 
         /** 
          *Close the DSO, invalidates retrieved function pointers.
          * @version 1.0
          */
-        EQ_EXPORT void close();
+        void close();
     
         /**
          * @return a function pointer in the DSO, or 0 if the function is not
          *         exported by the DSO.
          * @version 1.0
          */
-        EQ_EXPORT void* getFunctionPointer( const std::string& functionName );
+        void* getFunctionPointer( const std::string& functionName );
 
     private:
 #ifdef WIN32_VC
Index: lib/base/lock.h
===================================================================
--- lib/base/lock.h	(revision 3828)
+++ lib/base/lock.h	(working copy)
@@ -31,20 +31,20 @@
      * A lock (mutex) primitive.
      * @sa ScopedMutex
      */
-    class Lock : public NonCopyable
+    class EQ_EXPORT Lock : public NonCopyable
     {
     public:
         /** Construct a new lock. @version 1.0 */
-        EQ_EXPORT Lock();
+        Lock();
 
         /** Destruct the lock. @version 1.0 */
-        EQ_EXPORT ~Lock();
+        ~Lock();
 
         /** Acquire the lock. @version 1.0 */
-        EQ_EXPORT void set();
+        void set();
 
         /** Release the lock. @version 1.0 */
-        EQ_EXPORT void unset();
+        void unset();
 
         /** 
          * Attempt to acquire the lock.
@@ -55,7 +55,7 @@
          *         it was not set.
          * @version 1.0
          */
-        EQ_EXPORT bool trySet();
+        bool trySet();
 
         /** 
          * Test if the lock is set.
@@ -64,7 +64,7 @@
          *         it is not set.
          * @version 1.0
          */
-        EQ_EXPORT bool isSet(); 
+        bool isSet(); 
 
     private:
         LockPrivate* _data;
Index: lib/base/memoryMap.h
===================================================================
--- lib/base/memoryMap.h	(revision 3828)
+++ lib/base/memoryMap.h	(working copy)
@@ -28,11 +28,11 @@
 namespace base
 {
     /** Helper to map a file to a memory address (mmap) */
-    class MemoryMap : public NonCopyable
+    class EQ_EXPORT MemoryMap : public NonCopyable
     {
     public:
         /** Construct a new memory map. @version 1.0 */
-        EQ_EXPORT MemoryMap();
+        MemoryMap();
 
         /** 
          * Destruct the memory map.
@@ -41,7 +41,7 @@
          * @sa unmap()
          * @version 1.0
          */
-        EQ_EXPORT ~MemoryMap();
+        ~MemoryMap();
 
         /** 
          * Map a file to a memory address.
@@ -53,10 +53,10 @@
          * @return the pointer to the mapped file, or 0 upon error.
          * @version 1.0
          */
-        EQ_EXPORT const void* map( const std::string& fileName );
+        const void* map( const std::string& fileName );
 
         /** Unmap the file. @version 1.0 */
-        EQ_EXPORT void unmap();
+        void unmap();
 
         /** @return the pointer to the memory map. @version 1.0 */
         const void* getAddress() const { return _ptr; }
Index: lib/base/omp.h
===================================================================
--- lib/base/omp.h	(revision 3828)
+++ lib/base/omp.h	(working copy)
@@ -29,14 +29,14 @@
 namespace base
 {
     /** Base class for OpenMP functionality */
-    class OMP 
+    class EQ_EXPORT OMP 
     {
     public:
         /** 
          * @return the number of threads used in a parallel region.
          * @version 1.0
          */
-        EQ_EXPORT static int getNThreads() { return _nThreads; }
+        static int getNThreads() { return _nThreads; }
 
     private:
         static int _nThreads;
Index: lib/base/referenced.h
===================================================================
--- lib/base/referenced.h	(revision 3828)
+++ lib/base/referenced.h	(working copy)
@@ -36,7 +36,7 @@
      *
      * @sa RefPtr
      */
-    class Referenced 
+    class EQ_EXPORT Referenced 
     {
     public:
         /** Increase the reference count. @version 1.0 .*/
@@ -97,7 +97,7 @@
             }
 
     protected:
-        EQ_EXPORT void deleteReferenced( Referenced* object );
+        void deleteReferenced( Referenced* object );
 
     private:
         a_int32_t _refCount;
Index: lib/base/requestHandler.h
===================================================================
--- lib/base/requestHandler.h	(revision 3828)
+++ lib/base/requestHandler.h	(working copy)
@@ -44,7 +44,7 @@
      * serveRequest() and deleteRequest() are supposed to be called only from
      * one 'serving' thread.
      */
-    class RequestHandler : public NonCopyable
+    class EQ_EXPORT RequestHandler : public NonCopyable
     {
     public:
         /** 
@@ -55,10 +55,10 @@
          *                   threads.
          * @version 1.0
          */
-        EQ_EXPORT RequestHandler( const bool threadSafe = false );
+        RequestHandler( const bool threadSafe = false );
 
         /** Destruct the request handler. */
-        EQ_EXPORT ~RequestHandler();
+        ~RequestHandler();
 
         /** 
          * Register a new request.
@@ -68,7 +68,7 @@
          * @return the request identifier.
          * @version 1.0
          */
-        EQ_EXPORT uint32_t registerRequest( void* data = 0 );
+        uint32_t registerRequest( void* data = 0 );
 
         /** 
          * Unregister a request.
@@ -80,7 +80,7 @@
          * @param requestID the request identifier.
          * @version 1.0
          */
-        EQ_EXPORT void unregisterRequest( const uint32_t requestID );
+        void unregisterRequest( const uint32_t requestID );
 
         /** 
          * Wait a given time for the completion of a request.
@@ -96,17 +96,17 @@
          * @return true if the request was served, false if not.
          * @version 1.0
          */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, void*& result,
+        bool waitRequest( const uint32_t requestID, void*& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
 
         /** Wait for a request with a uint32_t result. @version 1.0 */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, uint32_t& result,
+        bool waitRequest( const uint32_t requestID, uint32_t& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
         /** Wait for a request with a bool result. @version 1.0 */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID, bool& result,
+        bool waitRequest( const uint32_t requestID, bool& result,
                                const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
         /** Wait for a request without a result. @version 1.0 */
-        EQ_EXPORT bool waitRequest( const uint32_t requestID );
+        bool waitRequest( const uint32_t requestID );
 
         /** 
          * Poll for the completion of a request.
@@ -117,7 +117,7 @@
          * @return true if the request has been served, false if it is pending.
          * @version 1.0
          */
-        EQ_EXPORT bool isServed( const uint32_t requestID ) const;
+        bool isServed( const uint32_t requestID ) const;
 
         /** 
          * Retrieve the user-specific data for a request.
@@ -126,7 +126,7 @@
          * @return the user-specific data for the request.
          * @version 1.0
          */
-        EQ_EXPORT void* getRequestData( const uint32_t requestID );
+        void* getRequestData( const uint32_t requestID );
 
         /** 
          * Serve a request with a void* result.
@@ -135,11 +135,11 @@
          * @param result the result of the request.
          * @version 1.0
          */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, void* result=0 );
+        void serveRequest( const uint32_t requestID, void* result=0 );
         /** Serve a request with a uint32_t result. @version 1.0 */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, uint32_t result);
+        void serveRequest( const uint32_t requestID, uint32_t result);
         /** Serve a request with a bool result. @version 1.0 */
-        EQ_EXPORT void serveRequest( const uint32_t requestID, bool result );
+        void serveRequest( const uint32_t requestID, bool result );
 
         /**
          * @return true if this request handler was created thread-safe.
Index: lib/base/rng.h
===================================================================
--- lib/base/rng.h	(revision 3828)
+++ lib/base/rng.h	(working copy)
@@ -35,7 +35,7 @@
      * Generates a set of random, or if not supported by the operating system,
      * pseudo-random numbers. Each instance creates its own series of numbers.
      */
-    class RNG : public NonCopyable
+    class EQ_EXPORT RNG : public NonCopyable
     {
     public:
         /** Construct a new random number generator. @version 1.0 */
Index: lib/base/thread.h
===================================================================
--- lib/base/thread.h	(revision 3828)
+++ lib/base/thread.h	(working copy)
@@ -40,14 +40,14 @@
     class ThreadPrivate;
 
     /** An utility class to execute code in a separate execution thread. */
-    class Thread 
+    class EQ_EXPORT Thread 
     {
     public:
         /** Construct a new thread. @version 1.0 */
-        EQ_EXPORT Thread();
+        Thread();
 
         /** Destruct the thread. @version 1.0 */
-        EQ_EXPORT virtual ~Thread();
+        virtual ~Thread();
 
         /** 
          * Start the thread.
@@ -60,7 +60,7 @@
          * @sa init(), run(), addListener()
          * @version 1.0
          */
-        EQ_EXPORT bool start();
+        bool start();
 
         /** 
          * The init function for the child thread.
@@ -95,7 +95,7 @@
          * @param retVal the return value of the thread.
          * @version 1.0
          */
-        EQ_EXPORT virtual void exit( void* retVal = 0 );
+        virtual void exit( void* retVal = 0 );
 
         /** 
          * Cancel (stop) the child thread.
@@ -103,7 +103,7 @@
          * This function is not to be called from the child thread.
          * @version 1.0
          */
-        EQ_EXPORT void cancel();
+        void cancel();
 
         /** 
          * Wait for the exit of the child thread.
@@ -113,7 +113,7 @@
          * @return true if the thread was joined, false otherwise.
          * @version 1.0
          */
-        EQ_EXPORT bool join( void** retVal=0 );
+        bool join( void** retVal=0 );
 
         /** 
          * Return if the thread is stopped.
@@ -144,7 +144,7 @@
          *         thread, false if not.
          * @version 1.0
          */
-        EQ_EXPORT bool isCurrent() const;
+        bool isCurrent() const;
 
         /** 
          * Add a new thread state listener.
@@ -152,7 +152,7 @@
          * @param listener the listener.
          * @version 1.0
          */
-        EQ_EXPORT static void addListener( ExecutionListener* listener );
+        static void addListener( ExecutionListener* listener );
 
         /** 
          * Remove a thread state listener.
@@ -160,13 +160,13 @@
          * @param listener the listener.
          * @version 1.0
          */
-        EQ_EXPORT static bool removeListener( ExecutionListener* listener );
+        static bool removeListener( ExecutionListener* listener );
 
         /** Remove all registered listeners, used at exit. @version 1.0 */
-        EQ_EXPORT static void removeAllListeners();
+        static void removeAllListeners();
 
         /** @return a unique identifier for the calling thread. @version 1.0 */
-        EQ_EXPORT static size_t getSelfThreadID();
+        static size_t getSelfThreadID();
 
         /** @internal */
         static void pinCurrentThread();
Index: lib/base/timedLock.h
===================================================================
--- lib/base/timedLock.h	(revision 3828)
+++ lib/base/timedLock.h	(working copy)
@@ -28,14 +28,14 @@
     class TimedLockPrivate;
 
     /** A mutex with timeout capabilities. */
-    class TimedLock : public NonCopyable
+    class EQ_EXPORT TimedLock : public NonCopyable
     {
     public:
         /** Construct a new timed lock. @version 1.0 */
-        EQ_EXPORT TimedLock();
+        TimedLock();
 
         /** Destruct the lock. @version 1.0 */
-        EQ_EXPORT ~TimedLock();
+        ~TimedLock();
 
         /** 
          * Set the lock. 
@@ -46,10 +46,10 @@
          * @return true if the lock was acquired, false if not.
          * @version 1.0
          */
-        EQ_EXPORT bool set( const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
+        bool set( const uint32_t timeout = EQ_TIMEOUT_INDEFINITE );
 
         /** Release the lock. @version 1.0 */
-        EQ_EXPORT void unset();
+        void unset();
 
         /** 
          * Attempt to set the lock.
@@ -57,7 +57,7 @@
          * @return true if the lock was acquired, false if not.
          * @version 1.0
          */
-        EQ_EXPORT bool trySet();
+        bool trySet();
 
         /** 
          * Test if the lock is set.
@@ -65,7 +65,7 @@
          * @return true if the lock is set, false if it is not set.
          * @version 1.0
          */
-        EQ_EXPORT bool isSet(); 
+        bool isSet(); 
 
     private:
         TimedLockPrivate* _data;
Index: lib/client/canvas.h
===================================================================
--- lib/client/canvas.h	(revision 3828)
+++ lib/client/canvas.h	(working copy)
@@ -53,14 +53,14 @@
      * render on the canvas. The layout can be switched at runtime. A canvas
      * with a NULL layout does not render anything, i.e., it is not active.
      */
-    class Canvas : public Frustum
+    class EQ_EXPORT Canvas : public Frustum
     {
     public:
         /** Construct a new Canvas. */
-        EQ_EXPORT Canvas();
+        Canvas();
 
         /** Destruct this canvas. */
-        EQ_EXPORT virtual ~Canvas();
+        virtual ~Canvas();
 
         /** @name Data Access */
         //@{
@@ -73,7 +73,7 @@
         uint32_t getActiveLayoutIndex() const { return _activeLayout; }
 
         /** @return the active layout. */
-        EQ_EXPORT const Layout* getActiveLayout() const;
+        const Layout* getActiveLayout() const;
 
         /** @return the vector of child segments. */
         const SegmentVector& getSegments() const { return _segments; }        
@@ -85,7 +85,7 @@
         /** @name Operations */
         //@{
         /** Activate the given layout on this canvas. */
-        EQ_EXPORT virtual void useLayout( const uint32_t index );
+        virtual void useLayout( const uint32_t index );
 
         /** 
          * Traverse this canvas and all children using a canvas visitor.
@@ -93,7 +93,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( CanvasVisitor& visitor );
+        VisitorResult accept( CanvasVisitor& visitor );
 
         /** @return true if the layout has changed. @internal */
         bool hasDirtyLayout() const { return getDirty() & DIRTY_LAYOUT; }
@@ -101,11 +101,11 @@
 
     protected:
         /** @sa Frustum::serialize */
-        EQ_EXPORT void serialize( net::DataOStream& os, 
+        void serialize( net::DataOStream& os, 
                                   const uint64_t dirtyBits );
 
         /** @sa Frustum::deserialize */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
         enum DirtyBits
         {
Index: lib/client/canvasVisitor.h
===================================================================
--- lib/client/canvasVisitor.h	(revision 3828)
+++ lib/client/canvasVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const canvases and children.
      */
-    class CanvasVisitor : public SegmentVisitor
+    class EQ_EXPORT CanvasVisitor : public SegmentVisitor
     {
     public:
         /** Constructs a new CanvasVisitor. */
Index: lib/client/channel.h
===================================================================
--- lib/client/channel.h	(revision 3828)
+++ lib/client/channel.h	(working copy)
@@ -48,7 +48,7 @@
      * RenderContext, which is computed by the server based on the rendering
      * description of the current configuration.
      */
-    class Channel : public net::Object
+    class EQ_EXPORT Channel : public net::Object
     {
     public:
     
@@ -67,10 +67,10 @@
         };
         
         /** Construct a new channel. */
-        EQ_EXPORT Channel( Window* parent );
+        Channel( Window* parent );
 
         /** Destruct the channel. */
-        EQ_EXPORT virtual ~Channel();
+        virtual ~Channel();
 
         /**
          * @name Data Access
@@ -83,25 +83,25 @@
         const Window* getWindow() const { return _window; }
 
         /** @return the parent pipe. */
-        EQ_EXPORT Pipe*       getPipe();
+        Pipe*       getPipe();
 
         /** @return the parent pipe. */
-        EQ_EXPORT const Pipe* getPipe() const;
+        const Pipe* getPipe() const;
 
         /** @return the parent node. */
-        EQ_EXPORT Node*       getNode();
+        Node*       getNode();
 
         /** @return the parent node. */
-        EQ_EXPORT const Node* getNode() const;
+        const Node* getNode() const;
 
         /** @return the parent config. */
-        EQ_EXPORT Config*       getConfig();
+        Config*       getConfig();
 
         /** @return the parent config. */
-        EQ_EXPORT const Config* getConfig() const;
+        const Config* getConfig() const;
 
         /** @return the parent server. */
-        EQ_EXPORT ServerPtr getServer();
+        ServerPtr getServer();
 
         /** @return the name of the window. */
         const std::string& getName() const { return _name; }
@@ -119,13 +119,13 @@
          * @return the extended OpenGL function table for the channel's OpenGL
          *         context.
          */
-        EQ_EXPORT GLEWContext*       glewGetContext();
+        GLEWContext*       glewGetContext();
 
         /** Const-version for glewGetContext() */
-        EQ_EXPORT const GLEWContext* glewGetContext() const;
+        const GLEWContext* glewGetContext() const;
 
         /** @return the window's object manager instance. */
-        EQ_EXPORT Window::ObjectManager* getObjectManager();
+        Window::ObjectManager* getObjectManager();
 
         /** 
          * Return the set of tasks this channel might execute in the worst case.
@@ -144,7 +144,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( ChannelVisitor& visitor );
+        VisitorResult accept( ChannelVisitor& visitor );
 
         /** 
          * Set the near and far planes for this channel.
@@ -156,7 +156,7 @@
          * @param nearPlane the near plane.
          * @param farPlane the far plane.
          */
-        EQ_EXPORT void setNearFar( const float nearPlane, const float farPlane);
+        void setNearFar( const float nearPlane, const float farPlane);
 
         /** Return a fixed unique color for this channel. */
         const Vector3ub& getUniqueColor() const { return _color; }
@@ -171,17 +171,17 @@
          * @return the channel's native view, or 0 if it does not have one.
          * @sa getView()
          */
-        EQ_EXPORT const View* getNativeView();
+        const View* getNativeView();
 
         /** @return the channel's native pixel viewport. */
         const PixelViewport& getNativePixelViewPort() const
             { return _nativeContext.pvp; }
 
         /** @return the FBO used as an alternate frame buffer. */
-        EQ_EXPORT util::FrameBufferObject* getFrameBufferObject();
+        util::FrameBufferObject* getFrameBufferObject();
 
         /** Add a new statistics event for the current frame. @internal */
-        EQ_EXPORT void addStatistic( Event& event );
+        void addStatistic( Event& event );
         //@}
 
         /**
@@ -195,25 +195,25 @@
          */
         //@{
         /** @return the current draw buffer for glDrawBuffer. */
-        EQ_EXPORT uint32_t getDrawBuffer() const;
+        uint32_t getDrawBuffer() const;
 
         /** @return the current read buffer for glReadBuffer. */
-        EQ_EXPORT uint32_t getReadBuffer() const;
+        uint32_t getReadBuffer() const;
 
         /** @return the current color mask for glColorMask. */
-        EQ_EXPORT const ColorMask& getDrawBufferMask() const;
+        const ColorMask& getDrawBufferMask() const;
 
         /** @return the current pixel viewport for glViewport and glScissor. */
-        EQ_EXPORT const PixelViewport& getPixelViewport() const;
+        const PixelViewport& getPixelViewport() const;
 
         /** @return the current perspective frustum for glFrustum. */
-        EQ_EXPORT const Frustumf& getFrustum() const;
+        const Frustumf& getFrustum() const;
 
         /** @return the current orthographic frustum for glOrtho. */
-        EQ_EXPORT const Frustumf& getOrtho() const;
+        const Frustumf& getOrtho() const;
 
         /** @return the jitter vector for the current subpixel decomposition. */
-        EQ_EXPORT Vector2f getJitter() const;
+        Vector2f getJitter() const;
 
         /**
          * Return the view matrix.
@@ -223,22 +223,22 @@
          * 
          * @return the head transformation matrix
          */
-        EQ_EXPORT const Matrix4f& getHeadTransform() const;
+        const Matrix4f& getHeadTransform() const;
 
         /** @return the fractional viewport wrt the destination view. */
-        EQ_EXPORT const Viewport& getViewport() const;
+        const Viewport& getViewport() const;
 
         /** @return the database range for the current rendering task. */
-        EQ_EXPORT const Range& getRange() const;
+        const Range& getRange() const;
 
         /** @return the pixel decomposition for the current rendering task. */
-        EQ_EXPORT const Pixel& getPixel() const;
+        const Pixel& getPixel() const;
 
         /** @return the subpixel decomposition for the current rendering task.*/
-        EQ_EXPORT const SubPixel& getSubPixel() const;
+        const SubPixel& getSubPixel() const;
 
         /** @return the up/downscale factor for the current rendering task. */
-        EQ_EXPORT const Zoom& getZoom() const;
+        const Zoom& getZoom() const;
 
         /**
          * Get the channel's current position wrt the destination channel.
@@ -249,10 +249,10 @@
          *
          * @return the channel's current position wrt the destination channel.
          */
-        EQ_EXPORT const Vector2i& getPixelOffset() const;
+        const Vector2i& getPixelOffset() const;
 
         /** @return the currently rendered eye pass. */
-        EQ_EXPORT Eye getEye() const;
+        Eye getEye() const;
 
         /** @return the list of input frames, used from frameAssemble(). */
         const FrameVector& getInputFrames() { return _inputFrames; }
@@ -272,7 +272,7 @@
          * @return the channel's view, or 0 if it does not have a view.
          * @sa getNativeView()
          */
-        EQ_EXPORT const View* getView();
+        const View* getView();
 
         /** 
          * Returns an orthographic frustum for 2D operations on the view.
@@ -282,16 +282,16 @@
          *
          * @return the 2D orthographic frustum.
          */
-        EQ_EXPORT Frustumf getScreenFrustum() const;
+        Frustumf getScreenFrustum() const;
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT const Vector4i& getOverdraw() const;
+        const Vector4i& getOverdraw() const;
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT void setMaxSize( const Vector2i& size );
+        void setMaxSize( const Vector2i& size );
 
         /** @internal  Undocumented - may not be supported in the future */
-        EQ_EXPORT uint32_t getTaskID() const;
+        uint32_t getTaskID() const;
         //@}
 
         /**
@@ -306,19 +306,19 @@
          * Apply the current rendering buffer, including the color mask.
          * @sa getReadBuffer() , getDrawBuffer(), getDrawBufferMask()
          */
-        EQ_EXPORT virtual void applyBuffer();
+        virtual void applyBuffer();
 
         /** 
          * Apply the current color mask.
          * @sa applyBuffer(), getDrawBufferMask()
          */
-        EQ_EXPORT virtual void applyColorMask() const;
+        virtual void applyColorMask() const;
 
         /** 
          * Apply the OpenGL viewport for the current rendering task.
          * @sa getViewport()
          */
-        EQ_EXPORT virtual void applyViewport() const;
+        virtual void applyViewport() const;
 
         /**
          * Apply the perspective frustum matrix for the current rendering task.
@@ -331,7 +331,7 @@
          *
          * @sa getFrustum(), getJitter(), getSubPixel()
          */
-        EQ_EXPORT virtual void applyFrustum() const;
+        virtual void applyFrustum() const;
 
         /**
          * Apply the orthographic frustum matrix for the current rendering task.
@@ -340,7 +340,7 @@
          *
          * @sa getOrtho(), getJitter()
          */
-        EQ_EXPORT virtual void applyOrtho() const;
+        virtual void applyOrtho() const;
 
         /** 
          * Apply a orthographic frustum for pixel-based 2D operations. 
@@ -348,23 +348,23 @@
          * One unit of the frustum covers one pixel on screen. The frustum is
          * positioned relative to the view.
          */
-        EQ_EXPORT void applyScreenFrustum() const;
+        void applyScreenFrustum() const;
 
         /** 
          * Apply the modeling transformation to position and orient the view
          * frustum.
          */
-        EQ_EXPORT virtual void applyHeadTransform() const;
+        virtual void applyHeadTransform() const;
 
         /** 
          * Apply the current alternate frame buffer.
          */
-        EQ_EXPORT virtual void applyFrameBufferObject();
+        virtual void applyFrameBufferObject();
 
         /** 
          * Rebind the current alternate FBO of the channel or window.
          */
-        EQ_EXPORT void bindFrameBuffer();        
+        void bindFrameBuffer();        
         //@}
 
         /** 
@@ -377,13 +377,13 @@
          * @param event the received event.
          * @return true when the event was handled, false if not.
          */
-        EQ_EXPORT virtual bool processEvent( const Event& event );
+        virtual bool processEvent( const Event& event );
 
         /** Draw a statistics overlay. */
-        EQ_EXPORT virtual void drawStatistics();
+        virtual void drawStatistics();
 
         /** Outline the current pixel viewport. */
-        EQ_EXPORT virtual void outlineViewport();
+        virtual void outlineViewport();
 
         /**
          * @name Attributes
@@ -403,15 +403,15 @@
         };
         
         /** @return the value of an integer attribute. */
-        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
+        int32_t getIAttribute( const IAttribute attr ) const;
         /** @return the name of an integer attribute. */
-        EQ_EXPORT static const std::string& getIAttributeString(
+        static const std::string& getIAttributeString(
                                                         const IAttribute attr );
         //@}
 
     protected:
         /** @internal */
-        EQ_EXPORT void attachToSession( const uint32_t id, 
+        void attachToSession( const uint32_t id, 
                                         const uint32_t instanceID, 
                                         net::Session* session );
 
@@ -446,12 +446,12 @@
          * may overwrite this and resetAssemblyState() to optimize performance
          * in accordance with their rendering code.
          */
-        EQ_EXPORT virtual void setupAssemblyState();
+        virtual void setupAssemblyState();
 
         /**
          * Reset the OpenGL state after an assembly operation.
          */
-        EQ_EXPORT virtual void resetAssemblyState();
+        virtual void resetAssemblyState();
         //@}
 
         /**
@@ -468,10 +468,10 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** Exit this channel. */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /**
          * Start rendering a frame.
@@ -520,7 +520,7 @@
          * 
          * @param frameID the per-frame identifier.
          */
-        EQ_EXPORT virtual void frameClear( const uint32_t frameID );
+        virtual void frameClear( const uint32_t frameID );
 
         /** 
          * Draw the scene.
@@ -529,7 +529,7 @@
          * 
          * @param frameID the per-frame identifier.
          */
-        EQ_EXPORT virtual void frameDraw( const uint32_t frameID );
+        virtual void frameDraw( const uint32_t frameID );
 
         /** 
          * Assemble input frames.
@@ -539,7 +539,7 @@
          * @param frameID the per-frame identifier.
          * @sa getInputFrames
          */
-        EQ_EXPORT virtual void frameAssemble( const uint32_t frameID );
+        virtual void frameAssemble( const uint32_t frameID );
 
         /** 
          * Read back the rendered scene.
@@ -549,7 +549,7 @@
          * @param frameID the per-frame identifier.
          * @sa getOutputFrames
          */
-        EQ_EXPORT virtual void frameReadback( const uint32_t frameID );
+        virtual void frameReadback( const uint32_t frameID );
 
         /** 
          * Start updating a destination channel.
@@ -587,7 +587,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
     private:
Index: lib/client/channelStatistics.h
===================================================================
--- lib/client/channelStatistics.h	(revision 3828)
+++ lib/client/channelStatistics.h	(working copy)
@@ -27,15 +27,15 @@
     /**
      * Holds one channel statistics event, used for profiling.
      */
-    class ChannelStatistics : public StatisticSampler< Channel >
+    class EQ_EXPORT ChannelStatistics : public StatisticSampler< Channel >
     {
     public:
         /** Construct a statistics sampler and sample the start time. */
-        EQ_EXPORT ChannelStatistics( const Statistic::Type type, 
+        ChannelStatistics( const Statistic::Type type, 
                                      Channel* channel );
 
         /** Destruct the sampler, sample the end time and send the event. */
-        virtual EQ_EXPORT ~ChannelStatistics();
+        virtual ~ChannelStatistics();
     };
 }
 
Index: lib/client/channelVisitor.h
===================================================================
--- lib/client/channelVisitor.h	(revision 3828)
+++ lib/client/channelVisitor.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * A visitor to traverse a non-const channels
      */
-    class ChannelVisitor
+    class EQ_EXPORT ChannelVisitor
     {
     public:
         /** Constructs a new ChannelVisitor. */
Index: lib/client/client.h
===================================================================
--- lib/client/client.h	(revision 3828)
+++ lib/client/client.h	(working copy)
@@ -35,14 +35,14 @@
      * The methods initLocal() and exitLocal() should be used to set up and exit
      * the listening node instance for each application process.
      */
-    class Client : public net::Node
+    class EQ_EXPORT Client : public net::Node
     {
     public:
         /** Construct a new client. */
-        EQ_EXPORT Client();
+        Client();
 
         /** Destruct the client. */
-        EQ_EXPORT virtual ~Client();
+        virtual ~Client();
 
         /** 
          * Open and connect an Equalizer server to the local client.
@@ -52,7 +52,7 @@
          * @param server the server.
          * @return true if the server was connected, false if not.
          */
-        EQ_EXPORT bool connectServer( ServerPtr server );
+        bool connectServer( ServerPtr server );
 
         /** 
          * Disconnect and close the connection of an Equalizer server to the
@@ -61,17 +61,17 @@
          * @param server the server.
          * @return true if the server was disconnected, false if not.
          */
-        EQ_EXPORT bool disconnectServer( ServerPtr server );
+        bool disconnectServer( ServerPtr server );
 
         /** @return true if the client has commands pending, false otherwise. */
-        EQ_EXPORT bool hasCommands();
+        bool hasCommands();
 
         /** 
          * Get and process one pending command from the node command queue.
          *
          * Used internally to run node commands.
          */
-        EQ_EXPORT void processCommand();
+        void processCommand();
 
         /** @return the command queue to the main node thread. @internal */
         CommandQueue* getNodeThreadQueue() { return _nodeThreadQueue; }
@@ -87,19 +87,19 @@
          *
          * @sa net::Node::clientLoop(), Pipe::createMessagePump()
          */
-        EQ_EXPORT virtual bool clientLoop();
+        virtual bool clientLoop();
 
         /**
          * Reimplemented to also call eq::exit() on render clients.
          * @sa net::Node::exitClient().
          */
-        EQ_EXPORT virtual bool exitClient();
+        virtual bool exitClient();
 
         /** @sa net::Node::listen() */
-        EQ_EXPORT virtual bool listen();
+        virtual bool listen();
 
         /** @sa net::Node::close() */
-        EQ_EXPORT virtual bool close();
+        virtual bool close();
 
     private:
         /** The command->node command queue. */
@@ -113,13 +113,13 @@
         };
 
         /** @sa net::Node::createNode */
-        EQ_EXPORT virtual net::NodePtr createNode( const uint32_t type );
+        virtual net::NodePtr createNode( const uint32_t type );
         
         /** @sa net::Node::dispatchCommand */
-        EQ_EXPORT virtual bool dispatchCommand( net::Command& command );
+        virtual bool dispatchCommand( net::Command& command );
 
         /** @sa net::Node::invokeCommand */
-        EQ_EXPORT virtual net::CommandResult invokeCommand( net::Command& );
+        virtual net::CommandResult invokeCommand( net::Command& );
 
         /** The command functions. */
         net::CommandResult _cmdExit( net::Command& command );
Index: lib/client/commandQueue.h
===================================================================
--- lib/client/commandQueue.h	(revision 3828)
+++ lib/client/commandQueue.h	(working copy)
@@ -30,7 +30,7 @@
      * required by the underlying window/operating system.
      * @internal
      */
-    class CommandQueue : public net::CommandQueue
+    class EQ_EXPORT CommandQueue : public net::CommandQueue
     {
     public:
         CommandQueue();
Index: lib/client/config.h
===================================================================
--- lib/client/config.h	(revision 3828)
+++ lib/client/config.h	(working copy)
@@ -54,14 +54,14 @@
      * The render client processes have only access to the current View for each
      * of their channels.
      */
-    class Config : public net::Session
+    class EQ_EXPORT Config : public net::Session
     {
     public:
         /** Construct a new config. @version 1.0 */
-        EQ_EXPORT Config( ServerPtr parent );
+        Config( ServerPtr parent );
 
         /** Destruct a config. @version 1.0 */
-        EQ_EXPORT virtual ~Config();
+        virtual ~Config();
 
         /** @name Data Access */
         //@{
@@ -69,13 +69,13 @@
         const std::string& getName() const { return _name; }
 
         /** @return the local client node. @version 1.0 */
-        EQ_EXPORT ClientPtr getClient();
+        ClientPtr getClient();
         
         /** @return the local server proxy. @version 1.0 */
-        EQ_EXPORT ServerPtr getServer();
+        ServerPtr getServer();
 
         /** @internal */
-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
+        CommandQueue* getNodeThreadQueue();
 
         /** @return the frame number of the last frame started. @version 1.0 */
         uint32_t getCurrentFrame()  const { return _currentFrame; }
@@ -106,10 +106,10 @@
         const LayoutVector& getLayouts() const { return _layouts; }
 
         /** @return the layout of the given identifier, or 0. @version 1.0 */
-        EQ_EXPORT Layout* findLayout( const uint32_t id );
+        Layout* findLayout( const uint32_t id );
 
         /** @return the view of the given identifier, or 0. @version 1.0 */
-        EQ_EXPORT View* findView( const uint32_t id );
+        View* findView( const uint32_t id );
 
         /** @return the vector of canvases, app-node only. @version 1.0 */
         const CanvasVector& getCanvases() const { return _canvases; }
@@ -121,10 +121,10 @@
          * @return the result of the visitor traversal.
          * @version 1.0
          */
-        EQ_EXPORT VisitorResult accept( ConfigVisitor& visitor );
+        VisitorResult accept( ConfigVisitor& visitor );
 
         /** Get all received statistics. @internal */
-        EQ_EXPORT void getStatistics( std::vector< FrameStatistics >& stats );
+        void getStatistics( std::vector< FrameStatistics >& stats );
 
         /**
          * @return true while the config is initialized and no exit event
@@ -175,7 +175,7 @@
          * @return true if the initialization was successful, false if not.
          * @version 1.0
          */
-        EQ_EXPORT virtual bool init( const uint32_t initID );
+        virtual bool init( const uint32_t initID );
 
         /** 
          * Exit this configuration.
@@ -193,10 +193,10 @@
          * @return true if the exit was successful, false if not.
          * @version 1.0
          */
-        EQ_EXPORT virtual bool exit();
+        virtual bool exit();
 
         /** @warning Experimental - may not be supported in the future */
-        EQ_EXPORT void freezeLoadBalancing( const bool onOff );
+        void freezeLoadBalancing( const bool onOff );
         //@}
 
         /** @name Frame Control */
@@ -223,7 +223,7 @@
          * @return the frame number of the new frame.
          * @version 1.0
          */
-        EQ_EXPORT virtual uint32_t startFrame( const uint32_t frameID );
+        virtual uint32_t startFrame( const uint32_t frameID );
 
         /** 
          * Finish the rendering of a frame.
@@ -240,7 +240,7 @@
          *         frame has been finished yet.
          * @version 1.0
          */
-        EQ_EXPORT virtual uint32_t finishFrame();
+        virtual uint32_t finishFrame();
 
         /**
          * Finish rendering all pending frames.
@@ -251,7 +251,7 @@
          * @return the frame number of the last finished frame.
          * @version 1.0
          */
-        EQ_EXPORT virtual uint32_t finishAllFrames();
+        virtual uint32_t finishAllFrames();
 
         /**
          * Release the local synchronization of the config for a frame.
@@ -277,7 +277,7 @@
          * @param event the event.
          * @version 1.0
          */
-        EQ_EXPORT void sendEvent( ConfigEvent& event );
+        void sendEvent( ConfigEvent& event );
 
         /** 
          * Get the next event.
@@ -291,7 +291,7 @@
          * @version 1.0
          * @sa Client::processCommand()
          */
-        EQ_EXPORT const ConfigEvent* nextEvent();
+        const ConfigEvent* nextEvent();
 
         /** 
          * Try to get the next event.
@@ -304,7 +304,7 @@
          * @return a config event, or 0 if no events are pending.
          * @version 1.0
          */
-        EQ_EXPORT const ConfigEvent* tryNextEvent();
+        const ConfigEvent* tryNextEvent();
 
         /** @return true if events are pending. @version 1.0 */
         bool checkEvent() const { return !_eventQueue.isEmpty(); }
@@ -319,7 +319,7 @@
          * pending events, without blocking.
          * @version 1.0
          */
-        EQ_EXPORT virtual void handleEvents();
+        virtual void handleEvents();
 
         /** 
          * Handle one config event.
@@ -328,7 +328,7 @@
          * @return true if the event requires a redraw, false if not.
          * @version 1.0
          */
-        EQ_EXPORT virtual bool handleEvent( const ConfigEvent* event );
+        virtual bool handleEvent( const ConfigEvent* event );
         //@}
         
         /** @name Error Information */
@@ -352,7 +352,7 @@
         /** @internal */
         //@{
         /** @internal */
-        EQ_EXPORT virtual void notifyMapped( net::NodePtr node );
+        virtual void notifyMapped( net::NodePtr node );
         //@}
 
     private:
Index: lib/client/configDeserializer.h
===================================================================
--- lib/client/configDeserializer.h	(revision 3828)
+++ lib/client/configDeserializer.h	(working copy)
@@ -25,7 +25,7 @@
     class Config;
 
     /** Helper class to receive a config, which is a net::Session */
-    class ConfigDeserializer : public net::Object
+    class EQ_EXPORT ConfigDeserializer : public net::Object
     {
     public:
         ConfigDeserializer( Config* config ) : _config( config ) {}
Index: lib/client/configEvent.h
===================================================================
--- lib/client/configEvent.h	(revision 3828)
+++ lib/client/configEvent.h	(working copy)
@@ -36,7 +36,7 @@
      *
      * When subclassing, make sure to set the packet size.
      */
-    struct ConfigEvent : public ConfigPacket
+    struct EQ_EXPORT ConfigEvent : public ConfigPacket
     {
     public:
         ConfigEvent()
Index: lib/client/configStatistics.h
===================================================================
--- lib/client/configStatistics.h	(revision 3828)
+++ lib/client/configStatistics.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * Holds one statistics event, used for profiling.
      */
-    class ConfigStatistics : public StatisticSampler< Config >
+    class EQ_EXPORT ConfigStatistics : public StatisticSampler< Config >
     {
     public:
         ConfigStatistics( const Statistic::Type type, Config* config );
Index: lib/client/configVisitor.h
===================================================================
--- lib/client/configVisitor.h	(revision 3828)
+++ lib/client/configVisitor.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * A visitor to traverse non-const configs and children.
      */
-    class ConfigVisitor : public NodeVisitor, 
+    class EQ_EXPORT ConfigVisitor : public NodeVisitor, 
                           public ObserverVisitor,
                           public LayoutVisitor,
                           public CanvasVisitor
Index: lib/client/event.h
===================================================================
--- lib/client/event.h	(revision 3828)
+++ lib/client/event.h	(working copy)
@@ -145,10 +145,10 @@
     };
 
     /** Event structure to report window system and internal events. */
-    struct Event
+    struct EQ_EXPORT Event
     {
         /** Construct a new event. */
-        EQ_EXPORT Event();
+        Event();
 
         /** The type of the event. */
         enum Type // Also update string table in event.cpp
Index: lib/client/eventHandler.h
===================================================================
--- lib/client/eventHandler.h	(revision 3828)
+++ lib/client/eventHandler.h	(working copy)
@@ -29,22 +29,22 @@
     /**
      * Base class for window system-specific event handlers
      */
-    class EventHandler
+    class EQ_EXPORT EventHandler
     {
     public:
 
     protected:
         /** Constructs a new event handler. */
-        EQ_EXPORT EventHandler() : _lastEventWindow( 0 ) {}
+        EventHandler() : _lastEventWindow( 0 ) {}
 
         /** Destructs the event handler. */
-        EQ_EXPORT virtual ~EventHandler(){}
+        virtual ~EventHandler(){}
 
         /** Compute the mouse move delta from the previous pointer event. */
-        EQ_EXPORT void _computePointerDelta(const Window* window, Event& event);
+        void _computePointerDelta(const Window* window, Event& event);
 
         /** Find and set the rendering context at the mouse position. */
-        EQ_EXPORT void _getRenderContext( const Window* window, Event& event );
+        void _getRenderContext( const Window* window, Event& event );
 
         /** The previous pointer event to compute mouse movement deltas. */
         Event _lastPointerEvent;
Index: lib/client/frame.h
===================================================================
--- lib/client/frame.h	(revision 3828)
+++ lib/client/frame.h	(working copy)
@@ -43,7 +43,7 @@
     /**
      * A holder for a frame data and parameters.
      */
-    class Frame : public net::Object
+    class EQ_EXPORT Frame : public net::Object
     {
     public:
         /** 
@@ -69,27 +69,27 @@
         /** 
          * Constructs a new Frame.
          */
-        EQ_EXPORT Frame();
-        EQ_EXPORT virtual ~Frame();
+        Frame();
+        virtual ~Frame();
 
         /**
          * @name Data Access
          */
         //@{
-        EQ_EXPORT const std::string& getName() const;
+        const std::string& getName() const;
 
         const Vector2i& getOffset() const { return _data.offset; }
         void setOffset( const Vector2i& offset ) { _data.offset = offset;}
 
         /** @return the database-range relative to the destination channel. */
-        EQ_EXPORT const Range& getRange() const;
-        EQ_EXPORT void         setRange( const Range& range );
+        const Range& getRange() const;
+        void         setRange( const Range& range );
 
         /** @return the pixel parameters relative to the destination channel. */
-        EQ_EXPORT const Pixel& getPixel() const;
+        const Pixel& getPixel() const;
 
         /** @return the subpixel parameters relative to the destination channel. */
-        EQ_EXPORT const SubPixel& getSubPixel() const;
+        const SubPixel& getSubPixel() const;
 
         /** @return the zoom factor for readback or assemble. */
         const Zoom& getZoom() const { return _data.zoom; }
@@ -99,14 +99,14 @@
         void setZoom( const Zoom& zoom ) { _data.zoom = zoom; }
 
         /** The images of this frame */
-        EQ_EXPORT const ImageVector& getImages() const;
+        const ImageVector& getImages() const;
 
         /** Set the data for this frame. */
         void setData( FrameData* data ) { _frameData = data; }
         FrameData* getData() { return _frameData; }
 
         /** Set the pixel viewport of the frame's data */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
 
         const net::ObjectVersion& getDataVersion( const Eye eye ) const
             { return _data.frameData[ eye ]; }
@@ -118,7 +118,7 @@
         //@{
 
         /** Clear the frame, recycles the images attached to the frame data. */
-        EQ_EXPORT void clear();
+        void clear();
 
         /** Clear the frame and free all images attached to the frame data. */
         void flush();
@@ -130,10 +130,10 @@
          *
          * @param glObjects the GL object manager for the current GL context.
          */
-        EQ_EXPORT void startReadback( Window::ObjectManager* glObjects );
+        void startReadback( Window::ObjectManager* glObjects );
         
         /** Synchronize the image readback. */
-        EQ_EXPORT void syncReadback();
+        void syncReadback();
 
         /** 
          * Transmit the frame data to the specified node.
@@ -162,10 +162,10 @@
          * 
          * @return true if the frame is ready, false if not. 
          */
-        EQ_EXPORT bool isReady() const;
+        bool isReady() const;
 
         /** Wait for the frame to become available. */
-        EQ_EXPORT void waitReady() const;
+        void waitReady() const;
 
         /** 
          * Add a listener which will be incremented when the frame is ready.
@@ -183,20 +183,20 @@
         //@}
 
         /** @return the enabled frame buffer attachments. */
-        EQ_EXPORT uint32_t getBuffers() const;
+        uint32_t getBuffers() const;
 
         /** 
          * Disable the usage of a frame buffer attachment for all images.
          * 
          * @param buffer the buffer to disable.
          */
-        EQ_EXPORT void disableBuffer( const Buffer buffer );
+        void disableBuffer( const Buffer buffer );
 
         /** Set color buffer type to read */
-        EQ_EXPORT void setColorFormat( const GLuint colorFormat );
+        void setColorFormat( const GLuint colorFormat );
 
         /** Enable/disable alpha usage for newly allocated images. */
-        EQ_EXPORT void setAlphaUsage( const bool useAlpha );
+        void setAlphaUsage( const bool useAlpha );
 
         /** @internal */
         void useSendToken( const bool use );
Index: lib/client/frameData.h
===================================================================
--- lib/client/frameData.h	(revision 3828)
+++ lib/client/frameData.h	(working copy)
@@ -45,11 +45,11 @@
      * A frame data holds multiple images and is used by frames.
      * It is not intended to be used directly by application code.
      */
-    class FrameData : public net::Object
+    class EQ_EXPORT FrameData : public net::Object
     {
     public:
-        EQ_EXPORT FrameData();
-        EQ_EXPORT virtual ~FrameData();
+        FrameData();
+        virtual ~FrameData();
 
         /** 
          * @name Data Access
@@ -96,10 +96,10 @@
          * 
          * @return the image.
          */
-        EQ_EXPORT Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
+        Image* newImage( const Frame::Type type = Frame::TYPE_MEMORY);
 
         /** Clear the frame by recycling the attached images. */
-        EQ_EXPORT void clear();
+        void clear();
 
         /** 
          * Read back a set of images according to the current frame data.
Index: lib/client/frameDataStatistics.h
===================================================================
--- lib/client/frameDataStatistics.h	(revision 3828)
+++ lib/client/frameDataStatistics.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * Holds one statistics event, used for profiling.
      */
-    class FrameDataStatistics : public StatisticSampler< FrameData >
+    class EQ_EXPORT FrameDataStatistics : public StatisticSampler< FrameData >
     {
     public:
         FrameDataStatistics( const Statistic::Type type, FrameData* frameData,
Index: lib/client/frustum.h
===================================================================
--- lib/client/frustum.h	(revision 3828)
+++ lib/client/frustum.h	(working copy)
@@ -25,14 +25,14 @@
 namespace eq
 {
     /** A distributed Object for frustum data */
-    class Frustum : public Object
+    class EQ_EXPORT Frustum : public Object
     {
     public:
         /** Construct a new Frustum. */
-        EQ_EXPORT Frustum();
+        Frustum();
         
         /** Destruct the frustum. */
-        EQ_EXPORT virtual ~Frustum();
+        virtual ~Frustum();
 
         /** The type of the latest specified frustum. */
         enum Type
@@ -43,29 +43,29 @@
         };
 
         /** Set the frustum using a wall description. */
-        EQ_EXPORT void setWall( const Wall& wall );
+        void setWall( const Wall& wall );
         
         /** Set the frustum using a projection description. */
-        EQ_EXPORT void setProjection( const Projection& projection );
+        void setProjection( const Projection& projection );
 
         /** @return the last specified frustum as a wall. */
-        EQ_EXPORT const Wall& getWall() const { return _wall; }
+        const Wall& getWall() const { return _wall; }
 
         /** @return the last specified frustum as a projection. */
-        EQ_EXPORT const Projection& getProjection() const { return _projection;}
+        const Projection& getProjection() const { return _projection;}
 
         /** @return the type of the latest specified frustum. */
-        EQ_EXPORT Type getCurrentType() const { return _current; }
+        Type getCurrentType() const { return _current; }
 
         /** Set the last specified frustum to TYPE_NONE. */
-        EQ_EXPORT void unsetFrustum();
+        void unsetFrustum();
 
     protected:
         /** @sa Object::serialize() */
-        EQ_EXPORT virtual void serialize( net::DataOStream& os,
+        virtual void serialize( net::DataOStream& os,
                                           const uint64_t dirtyBits );
         /** @sa Object::deserialize() */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         /** The changed parts of the frustum since the last pack(). */
Index: lib/client/global.h
===================================================================
--- lib/client/global.h	(revision 3828)
+++ lib/client/global.h	(working copy)
@@ -66,7 +66,7 @@
     /** 
      * Global parameter handling for the Equalizer client library. 
      */
-    class Global
+    class EQ_EXPORT Global
     {
     public:
         /** @return the node factory. */
@@ -77,20 +77,20 @@
          * 
          * @param server the default server.
          */
-        EQ_EXPORT static void setServer( const std::string& server );
+        static void setServer( const std::string& server );
 
         /** @return the default Equalizer server. */
-        EQ_EXPORT static const std::string& getServer();
+        static const std::string& getServer();
 
         /** 
          * Set the config file for the app-local server.
          * 
          * @param configFile the default configFile.
          */
-        EQ_EXPORT static void setConfigFile( const std::string& configFile );
+        static void setConfigFile( const std::string& configFile );
 
         /** @return the default config file for the app-local server. */
-        EQ_EXPORT static const std::string& getConfigFile();
+        static const std::string& getConfigFile();
 
         /** 
          * Global lock for all non-thread-safe Carbon API calls. 
@@ -105,21 +105,21 @@
           * @return all directories to search for compressor DSOs during
           *         eq::init().
           */
-        EQ_EXPORT static const StringVector& getPluginDirectories();
+        static const StringVector& getPluginDirectories();
 
         /** add a new directory to search for compressor DSOs. */
-        EQ_EXPORT static void  addPluginDirectory( const std::string& path );
+        static void  addPluginDirectory( const std::string& path );
 
         /** remove a plugin directory */
-        EQ_EXPORT static void  removePluginDirectory( const std::string& path );
+        static void  removePluginDirectory( const std::string& path );
 
         /** @return the plugin registry. */
-        EQ_EXPORT static PluginRegistry& getPluginRegistry();
+        static PluginRegistry& getPluginRegistry();
 
     private:
-        EQ_EXPORT friend bool init( const int argc, char** argv, 
+        friend EQ_EXPORT bool init( const int argc, char** argv, 
                                     NodeFactory* nodeFactory );
-        EQ_EXPORT friend bool exit();
+        friend EQ_EXPORT bool exit();
 
         static StringVector _initPluginDirectories();
         friend bool testInitPluginDirectories();
Index: lib/client/glWindow.h
===================================================================
--- lib/client/glWindow.h	(revision 3828)
+++ lib/client/glWindow.h	(working copy)
@@ -31,35 +31,35 @@
      * porting to new windowing systems. Each Windows uses one OSWindow, which
      * is initialized in Window::configInitOSWindow.
      */
-    class GLWindow : public OSWindow
+    class EQ_EXPORT GLWindow : public OSWindow
     {
     public:
-        EQ_EXPORT GLWindow( Window* parent );
-        EQ_EXPORT virtual ~GLWindow();
+        GLWindow( Window* parent );
+        virtual ~GLWindow();
         
-        EQ_EXPORT virtual void makeCurrent() const;
+        virtual void makeCurrent() const;
 
         /** Bind the window's FBO, if it uses an FBO drawable. */
-        EQ_EXPORT virtual void bindFrameBuffer() const;
+        virtual void bindFrameBuffer() const;
 
         /** @name Frame Buffer Object support. */
         //@{
         /** Build and initialize the FBO. */
-        EQ_EXPORT virtual bool configInitFBO();
+        virtual bool configInitFBO();
 
         /** Destroy FBO. */
-        EQ_EXPORT virtual void configExitFBO();
+        virtual void configExitFBO();
 
         /** @return the FBO of this window, or 0 if no FBO is used. */
-        EQ_EXPORT virtual const util::FrameBufferObject* getFrameBufferObject()
+        virtual const util::FrameBufferObject* getFrameBufferObject()
             const { return _fbo; }
         //@}
      
         /** Initialize the GLEW context for this window. */
-        EQ_EXPORT virtual void initGLEW();
+        virtual void initGLEW();
         
         /** De-initialize the GLEW context. */
-        EQ_EXPORT virtual void exitGLEW() { _glewInitialized = false; }
+        virtual void exitGLEW() { _glewInitialized = false; }
         
         /**
          * Get the GLEW context for this window.
@@ -74,12 +74,12 @@
          * @return the extended OpenGL function table for the window's OpenGL
          *         context.
          */
-        EQ_EXPORT virtual GLEWContext* glewGetContext();
+        virtual GLEWContext* glewGetContext();
         /** Const-version of glewGetContext. */
-        EQ_EXPORT virtual const GLEWContext* glewGetContext() const;
+        virtual const GLEWContext* glewGetContext() const;
 
         /** Set up _drawableConfig by querying the current context. */
-        EQ_EXPORT virtual void queryDrawableConfig(
+        virtual void queryDrawableConfig(
             DrawableConfig& drawableConfig );
 
     private:
Index: lib/client/image.h
===================================================================
--- lib/client/image.h	(revision 3828)
+++ lib/client/image.h	(working copy)
@@ -34,12 +34,12 @@
      *
      * An image holds color and depth information for a rectangular region.
      */
-    class Image
+    class EQ_EXPORT Image
     {
     public:
         /** Constructs a new Image. */
-        EQ_EXPORT Image();
-        EQ_EXPORT virtual ~Image();
+        Image();
+        virtual ~Image();
 
         struct PixelData : public base::NonCopyable
         {
@@ -73,11 +73,11 @@
          * @param buffer the buffer type.
          * @param format the format.
          */
-        EQ_EXPORT void setFormat( const Frame::Buffer buffer,
+        void setFormat( const Frame::Buffer buffer,
                                   const uint32_t format );
 
         /** @return the (OpenGL) format of the pixel data. */
-        EQ_EXPORT uint32_t getFormat( const Frame::Buffer buffer ) const;
+        uint32_t getFormat( const Frame::Buffer buffer ) const;
 
         /**
          * Set the (OpenGL) type of the pixel data for a buffer.
@@ -86,14 +86,14 @@
          * @param buffer the buffer type.
          * @param type the type.
          */
-        EQ_EXPORT void setType( const Frame::Buffer buffer, 
+        void setType( const Frame::Buffer buffer, 
                                 const uint32_t type );
 
         /** @return the (OpenGL) type of the pixel data. */
-        EQ_EXPORT uint32_t getType( const Frame::Buffer buffer ) const;
+        uint32_t getType( const Frame::Buffer buffer ) const;
 
         /** @return true if the image has a color buffer with alpha. */
-        EQ_EXPORT bool hasAlpha() const;
+        bool hasAlpha() const;
 
         /** 
          * Set the frame pixel storage type. 
@@ -110,7 +110,7 @@
         Frame::Type getStorageType() const{ return _type; }
 
         /** @return true if the image buffer has valid data. */
-        EQ_EXPORT bool hasData( const Frame::Buffer buffer ) const;
+        bool hasData( const Frame::Buffer buffer ) const;
 
         /** @return the fractional viewport of the image. */
         //const eq::Viewport& getViewport() const { return _data.vp; }
@@ -122,33 +122,33 @@
          *
          * @param pvp the pixel viewport.
          */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
 
         /** @return the pixel viewport of the image with in the frame buffer. */
         const PixelViewport& getPixelViewport() const { return _pvp; }
 
         /** Reset the image to its default state. */
-        EQ_EXPORT void reset();
+        void reset();
         //@}
 
 
         /** @name Pixel data */
         //@{
         /** @return a pointer to the raw pixel data. */
-        EQ_EXPORT const uint8_t* getPixelPointer( const Frame::Buffer buffer )
+        const uint8_t* getPixelPointer( const Frame::Buffer buffer )
                                      const;
-        EQ_EXPORT uint8_t* getPixelPointer( const Frame::Buffer buffer );
+        uint8_t* getPixelPointer( const Frame::Buffer buffer );
 
         /** @return the size of the raw pixel data in bytes */
         uint32_t getPixelDataSize( const Frame::Buffer buffer ) const
             { return _pvp.getArea() * getDepth( buffer ); }
 
         /** @return the pixel data. */
-        EQ_EXPORT const PixelData& getPixelData( const Frame::Buffer buffer )
+        const PixelData& getPixelData( const Frame::Buffer buffer )
                                        const;
 
         /** @return compress, if needed, and return the pixel data. */
-        EQ_EXPORT const PixelData& compressPixelData( const Frame::Buffer 
+        const PixelData& compressPixelData( const Frame::Buffer 
                                                           buffer );
 
         /**
@@ -163,10 +163,10 @@
          *
          * @param buffer the image buffer to clear.
          */
-        EQ_EXPORT void clearPixelData( const Frame::Buffer buffer );
+        void clearPixelData( const Frame::Buffer buffer );
 
         /** Validate an image buffer without initializing its content. */
-        EQ_EXPORT void validatePixelData( const Frame::Buffer buffer );
+        void validatePixelData( const Frame::Buffer buffer );
 
         /**
          * Set the pixel data of one of the image buffers.
@@ -177,7 +177,7 @@
          * @param buffer the image buffer to set.
          * @param data the buffer data of size pvp.w * pvp.h * depth.
          */
-        EQ_EXPORT void setPixelData( const Frame::Buffer buffer, 
+        void setPixelData( const Frame::Buffer buffer, 
                                      const uint8_t* data );
 
         /**
@@ -189,7 +189,7 @@
          * @param buffer the image buffer to set.
          * @param data the pixel data.
          */
-        EQ_EXPORT void setPixelData( const Frame::Buffer buffer,
+        void setPixelData( const Frame::Buffer buffer,
                                      const PixelData& data );
 
         /** Switch PBO usage for image transfers on. */
@@ -202,10 +202,10 @@
         bool usePBO() const { return _usePBO; }
 
         /** Enable compression and transport of alpha data. */
-        EQ_EXPORT void enableAlphaUsage();
+        void enableAlphaUsage();
 
         /** Disable compression and transport of alpha data. */
-        EQ_EXPORT void disableAlphaUsage();
+        void disableAlphaUsage();
 
         /** @return true if alpha data can be ignored. */
         bool ignoreAlpha() const { return _ignoreAlpha; }
@@ -215,20 +215,20 @@
         /** @name Texture access */
         //@{
         /** Get the texture of this image. */
-        EQ_EXPORT const util::Texture& getTexture( const Frame::Buffer buffer )
+        const util::Texture& getTexture( const Frame::Buffer buffer )
             const;
 
         /**
          * @return true if the image has texture data for the buffer, false if
          * not.
          */
-        EQ_EXPORT bool hasTextureData( const Frame::Buffer buffer ) const;
+        bool hasTextureData( const Frame::Buffer buffer ) const;
 
         /** 
          * @return the internal format a texture should use for the given
          *         buffer. 
          */
-        EQ_EXPORT uint32_t getInternalTextureFormat( const Frame::Buffer which )
+        uint32_t getInternalTextureFormat( const Frame::Buffer which )
                                const;
         //@}
 
@@ -246,23 +246,23 @@
          * @param glObjects the GL object manager for the current GL context.
          * @sa setStorageType()
          */
-        EQ_EXPORT void startReadback( const uint32_t buffers, 
+        void startReadback( const uint32_t buffers, 
                                       const PixelViewport& pvp,
                                       const Zoom& zoom,
                                       Window::ObjectManager* glObjects );
 
         /** Make sure that the last readback operation is complete. */
-        EQ_EXPORT void syncReadback();
+        void syncReadback();
 
         /** Writes the pixel data as rgb image files. */
-        EQ_EXPORT void writeImage( const std::string& filename,
+        void writeImage( const std::string& filename,
                                    const Frame::Buffer buffer ) const;
 
         /** Writes all valid pixel data as separate images. */
-        EQ_EXPORT void writeImages( const std::string& filenameTemplate ) const;
+        void writeImages( const std::string& filenameTemplate ) const;
 
         /** Read pixel data from an uncompressed rgb image file. */
-        EQ_EXPORT bool readImage( const std::string& filename, 
+        bool readImage( const std::string& filename, 
                                   const Frame::Buffer buffer   );
 
         /** Setting image offset, used after readback to correct position 
@@ -270,33 +270,33 @@
         void setOffset( int32_t x, int32_t y ) { _pvp.x = x; _pvp.y = y; }
 
         /** Delete all cache data of this image. */
-        EQ_EXPORT void flush();
+        void flush();
         //@}
 
         /** @return the GL function table, valid during readback. */
         GLEWContext* glewGetContext() { return _glObjects->glewGetContext(); }
 
         /** @return the number of channels in a pixel. */
-        EQ_EXPORT uint8_t getNumChannels( const Frame::Buffer buffer ) const;
+        uint8_t getNumChannels( const Frame::Buffer buffer ) const;
 
         /** @return the size in bytes for one channel. */
-        EQ_EXPORT uint8_t getChannelSize( const Frame::Buffer buffer ) const;
+        uint8_t getChannelSize( const Frame::Buffer buffer ) const;
 
         /** @return the size in bytes for one pixel (nChannels*channelSize). */
-        EQ_EXPORT uint32_t getDepth( const Frame::Buffer buffer ) const;
+        uint32_t getDepth( const Frame::Buffer buffer ) const;
 
         /** 
          * @return the list of possible compressors for the given buffer.
          * @internal
          */
-        EQ_EXPORT std::vector< uint32_t > 
+        std::vector< uint32_t > 
         findCompressors( const Frame::Buffer buffer ) const;
 
         /**
          * Re-allocate, if needed, a compressor instance.
          * @internal
          */
-        EQ_EXPORT bool allocCompressor( const Frame::Buffer buffer, 
+        bool allocCompressor( const Frame::Buffer buffer, 
                                         const uint32_t name );
 
     private:
Index: lib/client/layout.h
===================================================================
--- lib/client/layout.h	(revision 3828)
+++ lib/client/layout.h	(working copy)
@@ -46,14 +46,14 @@
      * typically used as a destination Channel in a compound. They are
      * automatically created when the configuration is loaded.
      */
-    class Layout : public Object
+    class EQ_EXPORT Layout : public Object
     {
     public:
         /** Construct a new layout. */
-        EQ_EXPORT Layout();
+        Layout();
 
         /** Destruct this layout. */
-        EQ_EXPORT virtual ~Layout();
+        virtual ~Layout();
 
         /** @name Data Access */
         //@{
@@ -77,12 +77,12 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( LayoutVisitor& visitor );
+        VisitorResult accept( LayoutVisitor& visitor );
         //@}
         
     protected:
         /** @sa Object::deserialize */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         enum DirtyBits
Index: lib/client/layoutVisitor.h
===================================================================
--- lib/client/layoutVisitor.h	(revision 3828)
+++ lib/client/layoutVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const layouts and children.
      */
-    class LayoutVisitor : public ViewVisitor
+    class EQ_EXPORT LayoutVisitor : public ViewVisitor
     {
     public:
         /** Constructs a new LayoutVisitor. */
Index: lib/client/messagePump.h
===================================================================
--- lib/client/messagePump.h	(revision 3828)
+++ lib/client/messagePump.h	(working copy)
@@ -25,7 +25,7 @@
     /**
      * Defines an interface to process OS messages/events.
      */
-    class MessagePump
+    class EQ_EXPORT MessagePump
     {
     public:
         MessagePump() {}
Index: lib/client/node.h
===================================================================
--- lib/client/node.h	(revision 3828)
+++ lib/client/node.h	(working copy)
@@ -36,14 +36,14 @@
      *
      * Each node is executed in a seperate process.
      */
-    class Node : public net::Object
+    class EQ_EXPORT Node : public net::Object
     {
     public:
         /** Constructs a new node. */
-        EQ_EXPORT Node( Config* parent );
+        Node( Config* parent );
 
         /** Destructs the node. */
-        EQ_EXPORT virtual ~Node();
+        virtual ~Node();
 
         /** 
          * Returns the config of this node.
@@ -53,8 +53,8 @@
         Config*       getConfig()       { return _config; }
         const Config* getConfig() const { return _config; }
 
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
         const PipeVector& getPipes() const { return _pipes; }
         const std::string& getName() const { return _name; }
@@ -71,7 +71,7 @@
          */
         uint32_t getTasks() const { return _tasks; }
 
-        EQ_EXPORT CommandQueue* getNodeThreadQueue();
+        CommandQueue* getNodeThreadQueue();
 
         /** 
          * Traverse this node and all children using a node visitor.
@@ -79,7 +79,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( NodeVisitor& visitor );
+        VisitorResult accept( NodeVisitor& visitor );
 
         /** 
          * Get a network barrier. 
@@ -100,8 +100,8 @@
         FrameData* getFrameData( const net::ObjectVersion& dataVersion );
 
         /** Wait for the node to be initialized. */
-        EQ_EXPORT void waitInitialized() const;
-        EQ_EXPORT bool isRunning() const;
+        void waitInitialized() const;
+        bool isRunning() const;
         
         /** 
          * Wait for a frame to be started.
@@ -109,7 +109,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrame()
          */
-        EQ_EXPORT void waitFrameStarted( const uint32_t frameNumber ) const;
+        void waitFrameStarted( const uint32_t frameNumber ) const;
 
         uint32_t getFinishedFrame() const { return _finishedFrame; }
 
@@ -129,10 +129,10 @@
             IATTR_ALL
         };
 
-        EQ_EXPORT void setIAttribute( const IAttribute attr,
+        void setIAttribute( const IAttribute attr,
                                       const int32_t value );
-        EQ_EXPORT int32_t getIAttribute( const IAttribute attr ) const;
-        EQ_EXPORT static const std::string& getIAttributeString(
+        int32_t getIAttribute( const IAttribute attr ) const;
+        static const std::string& getIAttributeString(
                                                         const IAttribute attr );
         //@}
 
@@ -168,7 +168,7 @@
     protected:
         friend class Config;
 
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
@@ -179,21 +179,21 @@
          * 
          * @param frameNumber the frame to start.
          */
-        EQ_EXPORT void startFrame( const uint32_t frameNumber );
+        void startFrame( const uint32_t frameNumber );
 
         /** 
          * Signal the completion of a frame to the parent.
          * 
          * @param frameNumber the frame to end.
          */
-        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
+        void releaseFrame( const uint32_t frameNumber );
 
         /** 
          * Release the local synchronization of the parent for a frame.
          * 
          * @param frameNumber the frame to release.
          */
-        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
+        void releaseFrameLocal( const uint32_t frameNumber );
         //@}
 
         /**
@@ -209,12 +209,12 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Exit this node.
          */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /**
          * Start rendering a frame.
@@ -228,7 +228,7 @@
          * @param frameNumber the frame to start.
          * @sa startFrame(), Config::beginFrame()
          */
-        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
+        virtual void frameStart( const uint32_t frameID, 
                                            const uint32_t frameNumber );
 
         /**
@@ -257,7 +257,7 @@
          * @param frameNumber the frame finished with draw.
          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
          */
-        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
+        virtual void frameDrawFinish( const uint32_t frameID, 
                                                 const uint32_t frameNumber );
 
         /** 
@@ -274,7 +274,7 @@
          * @param frameNumber the frame finished with draw.
          * @sa Pipe::waitFrameLocal(), releaseFrameLocal()
          */
-        EQ_EXPORT virtual void frameTasksFinish( const uint32_t frameID, 
+        virtual void frameTasksFinish( const uint32_t frameID, 
                                                  const uint32_t frameNumber );
         //@}
 
@@ -288,7 +288,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
     private:
Index: lib/client/nodeVisitor.h
===================================================================
--- lib/client/nodeVisitor.h	(revision 3828)
+++ lib/client/nodeVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const nodes and children.
      */
-    class NodeVisitor : public PipeVisitor
+    class EQ_EXPORT NodeVisitor : public PipeVisitor
     {
     public:
         /** Constructs a new NodeVisitor. */
Index: lib/client/object.h
===================================================================
--- lib/client/object.h	(revision 3828)
+++ lib/client/object.h	(working copy)
@@ -30,23 +30,23 @@
      * Equalizer. The inheritance Object -> Frustum -> View illustrates
      * the usage of eq::Object.
      */
-    class Object : public net::Object
+    class EQ_EXPORT Object : public net::Object
     {
     public:
         /** Construct a new Object. */
-        EQ_EXPORT Object();
+        Object();
         
         /** Destruct the object. */
-        EQ_EXPORT virtual ~Object();
+        virtual ~Object();
 
         /** Set the name of the object. */
-        EQ_EXPORT void setName( const std::string& name );
+        void setName( const std::string& name );
 
         /** @return the name of the object. */
-        EQ_EXPORT const std::string& getName() const;
+        const std::string& getName() const;
 
         /** @return the current dirty flags. */
-        EQ_EXPORT uint64_t getDirty() const { return _dirty; }
+        uint64_t getDirty() const { return _dirty; }
 
     protected:
         /** @return true if the view has to be committed. */
@@ -63,7 +63,7 @@
          * afterwards. The dirty bits are transmitted beforehand, and do not
          * need to be transmitted by the overriding method.
          */
-        EQ_EXPORT virtual void serialize( net::DataOStream& os,
+        virtual void serialize( net::DataOStream& os,
                                           const uint64_t dirtyBits );
 
         /** 
@@ -75,7 +75,7 @@
          * 
          * @sa serialize()
          */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         virtual ChangeType getChangeType() const { return UNBUFFERED; }
@@ -96,17 +96,17 @@
         };
 
         /** Set dirty flags to mark data for distribution. */
-        EQ_EXPORT void setDirty( const uint64_t bits );
+        void setDirty( const uint64_t bits );
 
         /** @sa eq::net::Object::attachToSession. */
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
     private:
-        EQ_EXPORT virtual void getInstanceData( net::DataOStream& os );
-        EQ_EXPORT virtual void pack( net::DataOStream& os );
-        EQ_EXPORT virtual void applyInstanceData( net::DataIStream& is );
+        virtual void getInstanceData( net::DataOStream& os );
+        virtual void pack( net::DataOStream& os );
+        virtual void applyInstanceData( net::DataIStream& is );
 
         /** The current dirty bits. */
         uint64_t _dirty;
Index: lib/client/observer.h
===================================================================
--- lib/client/observer.h	(revision 3828)
+++ lib/client/observer.h	(working copy)
@@ -35,23 +35,23 @@
      * can be used to update independent viewers from one configuration, e.g., a
      * control host, a HMD and a Cave.
      */
-    class Observer : public Object
+    class EQ_EXPORT Observer : public Object
     {
     public:
         /** 
          * Constructs a new Observer.
          */
-        EQ_EXPORT Observer();
+        Observer();
 
         /** Destruct this observer. */
-        EQ_EXPORT virtual ~Observer();
+        virtual ~Observer();
 
         /**
          * @name Data Access
          */
         //@{
         /** Set the eye separation of this observer. */
-        EQ_EXPORT void setEyeBase( const float eyeBase );
+        void setEyeBase( const float eyeBase );
 
         /** @return the current eye separation. */
         float getEyeBase() const { return _eyeBase; }
@@ -67,7 +67,7 @@
          *
          * @param matrix the matrix
          */
-        EQ_EXPORT void setHeadMatrix( const Matrix4f& matrix );
+        void setHeadMatrix( const Matrix4f& matrix );
 
         /** @return the current head matrix. */
         const Matrix4f& getHeadMatrix() const { return _headMatrix; }
@@ -83,18 +83,18 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( ObserverVisitor& visitor );
+        VisitorResult accept( ObserverVisitor& visitor );
 
         /** Deregister this observer from its net::Session.*/
-        EQ_EXPORT virtual void deregister();
+        virtual void deregister();
         //@}
         
     protected:
         /** @sa Object::serialize */
-        EQ_EXPORT virtual void serialize( net::DataOStream& os,
+        virtual void serialize( net::DataOStream& os,
                                           const uint64_t dirtyBits );
         /** @sa Object::deserialize */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         enum DirtyBits
Index: lib/client/observerVisitor.h
===================================================================
--- lib/client/observerVisitor.h	(revision 3828)
+++ lib/client/observerVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const observers.
      */
-    class ObserverVisitor
+    class EQ_EXPORT ObserverVisitor
     {
     public:
         /** Constructs a new ObserverVisitor. */
Index: lib/client/osWindow.h
===================================================================
--- lib/client/osWindow.h	(revision 3828)
+++ lib/client/osWindow.h	(working copy)
@@ -37,14 +37,14 @@
      * porting to new windowing systems. Each Windows uses one OSWindow, which
      * is created and initialized in Window::configInitOSWindow.
      */
-    class OSWindow
+    class EQ_EXPORT OSWindow
     {
     public:
         /** Create a new OSWindow for the given eq::Window. */
-        EQ_EXPORT OSWindow( Window* parent );
+        OSWindow( Window* parent );
 
         /** Destroy the OSWindow. */
-        EQ_EXPORT virtual ~OSWindow();
+        virtual ~OSWindow();
         
         /** @name Methods forwarded from eq::Window */
         //@{
@@ -57,7 +57,7 @@
          * @return true if the window was correctly initialized, false
          *         on any error.
          */
-        EQ_EXPORT virtual bool configInit( ) = 0;
+        virtual bool configInit( ) = 0;
 
         /** 
          * De-initialize this OS window.
@@ -66,7 +66,7 @@
          * windows, and the implemenation has therefore be tolerant enough to
          * handle this case.
          */
-        EQ_EXPORT virtual void configExit( ) = 0;
+        virtual void configExit( ) = 0;
 
         /** 
          * Make the OS window's rendering context and drawable current.
@@ -75,13 +75,13 @@
          * function is not called, Pipe::setCurrent() has to be called
          * appropriately.
          */
-        EQ_EXPORT virtual void makeCurrent() const = 0;
+        virtual void makeCurrent() const = 0;
 
         /** Bind the window's FBO, if it uses an FBO drawable. */
-        EQ_EXPORT virtual void bindFrameBuffer() const = 0;
+        virtual void bindFrameBuffer() const = 0;
 
         /** Swap the front and back buffer, for doublebuffered drawables. */
-        EQ_EXPORT virtual void swapBuffers() = 0;
+        virtual void swapBuffers() = 0;
 
         /** 
          * Join a NV_swap_group.
@@ -92,20 +92,20 @@
          * @param group the swap group name.
          * @param barrier the swap barrier name.
          */
-        EQ_EXPORT virtual void joinNVSwapBarrier( const uint32_t group,
+        virtual void joinNVSwapBarrier( const uint32_t group,
                                                   const uint32_t barrier ) = 0;
         //@}
 
         /** @name Frame Buffer Object support. */
         //@{
         /** Build and initialize the FBO. */
-        EQ_EXPORT bool configInitFBO();
+        bool configInitFBO();
 
         /** Destroy FBO. */
-        EQ_EXPORT void configExitFBO();
+        void configExitFBO();
 
         /** @return the FBO of this window, or 0 if no FBO is used. */
-        EQ_EXPORT virtual const util::FrameBufferObject* getFrameBufferObject()
+        virtual const util::FrameBufferObject* getFrameBufferObject()
             const { return 0; }
         //@}
 
@@ -114,20 +114,20 @@
         Window* getWindow() { return _window; }
         const Window* getWindow() const { return _window; }
 
-        EQ_EXPORT Pipe* getPipe(); 
-        EQ_EXPORT const Pipe* getPipe() const;
+        Pipe* getPipe(); 
+        const Pipe* getPipe() const;
 
-        EQ_EXPORT Node* getNode(); 
-        EQ_EXPORT const Node* getNode() const;
+        Node* getNode(); 
+        const Node* getNode() const;
 
-        EQ_EXPORT Config* getConfig();
-        EQ_EXPORT const Config* getConfig() const;
+        Config* getConfig();
+        const Config* getConfig() const;
 
-        EQ_EXPORT int32_t getIAttribute( const Window::IAttribute attr ) const;
+        int32_t getIAttribute( const Window::IAttribute attr ) const;
         //@}
 		
 		/** Set up _drawableConfig by querying the current context. */
-		EQ_EXPORT virtual void queryDrawableConfig( 
+		virtual void queryDrawableConfig( 
             DrawableConfig& drawableConfig ) = 0;
 
         /**
@@ -143,8 +143,8 @@
          * @return the extended OpenGL function table for the window's OpenGL
          *         context.
          */
-        EQ_EXPORT virtual GLEWContext* glewGetContext() { return 0; }
-        EQ_EXPORT virtual const GLEWContext* glewGetContext() const { return 0;}
+        virtual GLEWContext* glewGetContext() { return 0; }
+        virtual const GLEWContext* glewGetContext() const { return 0;}
 
     protected:
         /** The parent eq::Window. */
Index: lib/client/pipe.h
===================================================================
--- lib/client/pipe.h	(revision 3828)
+++ lib/client/pipe.h	(working copy)
@@ -54,26 +54,26 @@
      * the pipe is non-threaded, in which case the tasks are executed on the
      * Node's main thread.
      */
-    class Pipe : public net::Object
+    class EQ_EXPORT Pipe : public net::Object
     {
     public:
         /** Constructs a new pipe. */
-        EQ_EXPORT Pipe( Node* parent );
+        Pipe( Node* parent );
 
         /** Destructs the pipe. */
-        EQ_EXPORT virtual ~Pipe();
+        virtual ~Pipe();
 
         /** @name Data Access. */
         //@{
-        EQ_EXPORT net::CommandQueue* getPipeThreadQueue();
+        net::CommandQueue* getPipeThreadQueue();
         Node*       getNode()       { return _node; }
         const Node* getNode() const { return _node; }
 
-        EQ_EXPORT Config* getConfig();
-        EQ_EXPORT const Config* getConfig() const;
+        Config* getConfig();
+        const Config* getConfig() const;
 
-        EQ_EXPORT ClientPtr getClient();
-        EQ_EXPORT ServerPtr getServer();
+        ClientPtr getClient();
+        ServerPtr getServer();
 
         const WindowVector& getWindows() const { return _windows; }
 
@@ -93,7 +93,7 @@
 
         bool isThreaded() const { return ( _thread != 0 ); }
         uint32_t getCurrentFrame()  const { return _currentFrame; }
-        EQ_EXPORT uint32_t getFinishedFrame() const;
+        uint32_t getFinishedFrame() const;
 
         /** 
          * Traverse this pipe and all children using a pipe visitor.
@@ -101,7 +101,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( PipeVisitor& visitor );
+        VisitorResult accept( PipeVisitor& visitor );
 
         /**
          * Set the pipes's pixel viewport.
@@ -153,7 +153,7 @@
         WindowSystem getWindowSystem() const { return _windowSystem; }
 
         /** @return the time in ms elapsed since the frame started. */
-        EQ_EXPORT int64_t getFrameTime() const;
+        int64_t getFrameTime() const;
         //@}
 
         /**
@@ -185,8 +185,8 @@
         //@}
 
         /** Wait for the pipe to be exited. */
-        EQ_EXPORT void waitExited() const;
-        EQ_EXPORT bool isRunning() const;
+        void waitExited() const;
+        bool isRunning() const;
         
         /** 
          * Wait for a frame to be finished.
@@ -194,7 +194,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrame()
          */
-        EQ_EXPORT void waitFrameFinished( const uint32_t frameNumber ) const;
+        void waitFrameFinished( const uint32_t frameNumber ) const;
 
         /** 
          * Wait for a frame to be released locally.
@@ -202,7 +202,7 @@
          * @param frameNumber the frame number.
          * @sa releaseFrameLocal()
          */
-        EQ_EXPORT void waitFrameLocal( const uint32_t frameNumber ) const;
+        void waitFrameLocal( const uint32_t frameNumber ) const;
 
         /** Start the pipe thread. */
         void startThread();
@@ -266,7 +266,7 @@
          *
          * @return the message pump, or 0.
          */
-        EQ_EXPORT virtual MessagePump* createMessagePump();
+        virtual MessagePump* createMessagePump();
         //@}
 
     protected:
@@ -279,14 +279,14 @@
          * 
          * @param frameNumber the frame to start.
          */
-        EQ_EXPORT void startFrame( const uint32_t frameNumber );
+        void startFrame( const uint32_t frameNumber );
 
         /** 
          * Signal the completion of a frame to the parent.
          * 
          * @param frameNumber the frame to end.
          */
-        EQ_EXPORT void releaseFrame( const uint32_t frameNumber );
+        void releaseFrame( const uint32_t frameNumber );
 
         /** 
          * Release the local synchronization of the parent for a frame.
@@ -299,7 +299,7 @@
          * 
          * @param frameNumber the frame to release.
          */
-        EQ_EXPORT void releaseFrameLocal( const uint32_t frameNumber );
+        void releaseFrameLocal( const uint32_t frameNumber );
         //@}
 
         /**
@@ -317,7 +317,7 @@
          * @return <code>true</code> if the window system is supported,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool supportsWindowSystem( const WindowSystem system )
+        virtual bool supportsWindowSystem( const WindowSystem system )
                                    const;
 
         /** 
@@ -328,19 +328,19 @@
          * 
          * @return the window system currently used by this pipe.
          */
-        EQ_EXPORT virtual WindowSystem selectWindowSystem() const;
+        virtual WindowSystem selectWindowSystem() const;
 
         /** 
          * Initialize this pipe.
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Exit this pipe.
          */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /**
          * Start rendering a frame.
@@ -358,7 +358,7 @@
          * @sa Config::beginFrame(), Node::startFrame(), 
          *     Node::waitFrameStarted()
          */
-        EQ_EXPORT virtual void frameStart( const uint32_t frameID, 
+        virtual void frameStart( const uint32_t frameID, 
                                            const uint32_t frameNumber );
 
         /**
@@ -374,7 +374,7 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finish.
          */
-        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
+        virtual void frameFinish( const uint32_t frameID, 
                                             const uint32_t frameNumber );
 
         /** 
@@ -386,11 +386,11 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finished with draw.
          */
-        EQ_EXPORT virtual void frameDrawFinish( const uint32_t frameID, 
+        virtual void frameDrawFinish( const uint32_t frameID, 
                                                 const uint32_t frameNumber );
 
         /** @sa net::Object::attachToSession. */
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
Index: lib/client/pipeVisitor.h
===================================================================
--- lib/client/pipeVisitor.h	(revision 3828)
+++ lib/client/pipeVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const pipes and children.
      */
-    class PipeVisitor : public WindowVisitor
+    class EQ_EXPORT PipeVisitor : public WindowVisitor
     {
     public:
         /** Constructs a new PipeVisitor. */
Index: lib/client/pixel.h
===================================================================
--- lib/client/pixel.h	(revision 3828)
+++ lib/client/pixel.h	(working copy)
@@ -34,7 +34,7 @@
      * destination. The x, y index determines the pixel of the contributor
      * within the decomposition pixel.
      */
-    class Pixel 
+    class EQ_EXPORT Pixel 
     {
     public:
         /**
@@ -90,7 +90,7 @@
         uint32_t w;
         uint32_t h;
 
-        EQ_EXPORT static const Pixel ALL;
+        static const Pixel ALL;
     };
 
     inline std::ostream& operator << ( std::ostream& os, const Pixel& pixel )
Index: lib/client/pixelViewport.h
===================================================================
--- lib/client/pixelViewport.h	(revision 3828)
+++ lib/client/pixelViewport.h	(working copy)
@@ -34,7 +34,7 @@
     /**
      * Holds a pixel viewport along with some methods for manipulation.
      */
-    class PixelViewport 
+    class EQ_EXPORT PixelViewport 
     {
     public:
         /**
Index: lib/client/pluginRegistry.h
===================================================================
--- lib/client/pluginRegistry.h	(revision 3828)
+++ lib/client/pluginRegistry.h	(working copy)
@@ -23,7 +23,7 @@
 namespace eq 
 {
     /** The registry for all loaded Equalizer plugins. */
-    class PluginRegistry
+    class EQ_EXPORT PluginRegistry
     {
     public:
 
@@ -34,7 +34,7 @@
         void exit();
         
         /* @return all registered compressors plugins */
-        EQ_EXPORT const CompressorVector& getCompressors() const;
+        const CompressorVector& getCompressors() const;
 
         /* @return the compressor with the given name, or 0. */
         Compressor* findCompressor( const uint32_t name );
Index: lib/client/projection.h
===================================================================
--- lib/client/projection.h	(revision 3828)
+++ lib/client/projection.h	(working copy)
@@ -34,30 +34,30 @@
      * wall at the given distance. The fov defines the horizontal and
      * vertical field of view of the projector.
      */
-    class Projection
+    class EQ_EXPORT Projection
     {
     public:
-        EQ_EXPORT Projection();
+        Projection();
 
         /** 
          * Resize the horizontal FOV.
          * 
          * @param ratio the amount by which the FOV is grown or shrunk.
          */
-        EQ_EXPORT void resizeHorizontal( const float ratio );
+        void resizeHorizontal( const float ratio );
 
         /** 
          * Resize the vertical FOV.
          * 
          * @param ratio the amount by which the FOV is grown or shrunk.
          */
-        EQ_EXPORT void resizeVertical( const float ratio );
+        void resizeVertical( const float ratio );
 
         /** Set the projection parameters from a wall description. */
-        EQ_EXPORT Projection& operator = ( const Wall& wall );
+        Projection& operator = ( const Wall& wall );
 
-        EQ_EXPORT bool operator == ( const Projection& rhs ) const;
-        EQ_EXPORT bool operator != ( const Projection& rhs ) const;
+        bool operator == ( const Projection& rhs ) const;
+        bool operator != ( const Projection& rhs ) const;
         
         Vector3f origin;
         float    distance;
Index: lib/client/range.h
===================================================================
--- lib/client/range.h	(revision 3828)
+++ lib/client/range.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * Holds a fractional range along with some methods for manipulation.
      */
-    class Range 
+    class EQ_EXPORT Range 
     {
     public:
         /**
@@ -67,7 +67,7 @@
         float start;
         float end;
 
-        EQ_EXPORT static const Range ALL;
+        static const Range ALL;
     };
 
     inline std::ostream& operator << ( std::ostream& os, const Range& range )
Index: lib/client/renderContext.h
===================================================================
--- lib/client/renderContext.h	(revision 3828)
+++ lib/client/renderContext.h	(working copy)
@@ -37,10 +37,10 @@
     /**
      * The context applied by the server during rendering operations.
      */
-    struct RenderContext 
+    struct EQ_EXPORT RenderContext 
     {
     public: 
-        EQ_EXPORT RenderContext();
+        RenderContext();
 
         Matrix4f       headTransform;  //<! frustum transform for modelview
 
Index: lib/client/segment.h
===================================================================
--- lib/client/segment.h	(revision 3828)
+++ lib/client/segment.h	(working copy)
@@ -38,22 +38,22 @@
      * one output Channel of the whole projection area, typically a projector or
      * screen.
      */
-    class Segment : public eq::Frustum
+    class EQ_EXPORT Segment : public eq::Frustum
     {
     public:
         /** Construct a new Segment. */
-        EQ_EXPORT Segment();
+        Segment();
 
         /** Destruct this segment. */
-        EQ_EXPORT virtual ~Segment();
+        virtual ~Segment();
 
         /** @name Data Access */
         //@{
         /** @return the config of this view. */
-        EQ_EXPORT Config* getConfig();
+        Config* getConfig();
 
         /** @return the config of this view. */
-        EQ_EXPORT const Config* getConfig() const;
+        const Config* getConfig() const;
 
         /** @return the segment's viewport. */
         const eq::Viewport& getViewport() const { return _vp; }
@@ -67,15 +67,15 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( SegmentVisitor& visitor );
+        VisitorResult accept( SegmentVisitor& visitor );
         //@}
 
     protected:
         /** @sa Frustum::serialize */
-        EQ_EXPORT virtual void serialize( net::DataOStream& os, 
+        virtual void serialize( net::DataOStream& os, 
                                           const uint64_t dirtyBits );
         /** @sa Frustum::deserialize */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         enum DirtyBits
Index: lib/client/segmentVisitor.h
===================================================================
--- lib/client/segmentVisitor.h	(revision 3828)
+++ lib/client/segmentVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const segments.
      */
-    class SegmentVisitor
+    class EQ_EXPORT SegmentVisitor
     {
     public:
         /** Constructs a new SegmentVisitor. */
Index: lib/client/server.cpp
===================================================================
--- lib/client/server.cpp	(revision 3828)
+++ lib/client/server.cpp	(working copy)
@@ -276,4 +276,10 @@
     _requestHandler.serveRequest( packet->requestID, packet->result );
     return net::COMMAND_HANDLED;
 }
+
+void clear( ServerPtr& server )
+{
+	server = 0;
 }
+
+}
Index: lib/client/server.h
===================================================================
--- lib/client/server.h	(revision 3828)
+++ lib/client/server.h	(working copy)
@@ -39,19 +39,19 @@
      * and release a Config from the server.
      * @sa Client::connectServer
      */
-    class Server : public net::Node
+    class EQ_EXPORT Server : public net::Node
     {
     public:
         /** Construct a new server. */
-        EQ_EXPORT Server();
+        Server();
 
         /** @name Internal */
         //@{
         void setClient( ClientPtr client );
         ClientPtr getClient(){ return _client; }
 
-        EQ_EXPORT net::CommandQueue* getNodeThreadQueue();
-        EQ_EXPORT net::CommandQueue* getCommandThreadQueue();
+        net::CommandQueue* getNodeThreadQueue();
+        net::CommandQueue* getCommandThreadQueue();
         //@}
 
         /** 
@@ -61,10 +61,10 @@
          * @return The chosen config, or 0if no matching config was found.
          * @sa ConfigParams
          */
-        EQ_EXPORT Config* chooseConfig( const ConfigParams& parameters );
+        Config* chooseConfig( const ConfigParams& parameters );
 
         /** @warning Undocumented - may not be supported in the future */
-        EQ_EXPORT Config* useConfig( const ConfigParams& parameters, 
+        Config* useConfig( const ConfigParams& parameters, 
                                      const std::string& config );
 
         /** 
@@ -75,16 +75,16 @@
          *
          * @param config the configuration.
          */
-        EQ_EXPORT void releaseConfig( Config* config );
+        void releaseConfig( Config* config );
 
         /** Undocumented - may not be supported in the future */
-        EQ_EXPORT bool shutdown();
+        bool shutdown();
 
     protected:
         /**
          * Destructs this server.
          */
-        EQ_EXPORT virtual ~Server();
+        virtual ~Server();
 
     private:
         /** The local client connected to the server */
@@ -110,6 +110,8 @@
         net::CommandResult _cmdShutdownReply( net::Command& command );
     };
 
+	EQ_EXPORT void clear( ServerPtr& server );
+
     inline std::ostream& operator << ( std::ostream& os, const Server* server )
     {
         if( !server )
Index: lib/client/subPixel.h
===================================================================
--- lib/client/subPixel.h	(revision 3828)
+++ lib/client/subPixel.h	(working copy)
@@ -34,7 +34,7 @@
      * The index represents the contributor ID within the subpixel decomposition.
      * The size determines how many contributors are performing anti-aliasing.
      */
-    class SubPixel
+    class EQ_EXPORT SubPixel
     {
     public:
         /**
@@ -82,7 +82,7 @@
         uint32_t index;
         uint32_t size;
 
-        EQ_EXPORT static const SubPixel ALL;
+        static const SubPixel ALL;
     };
 
     inline std::ostream& operator << ( std::ostream& os, const SubPixel& subPixel )
Index: lib/client/view.h
===================================================================
--- lib/client/view.h	(revision 3828)
+++ lib/client/view.h	(working copy)
@@ -42,35 +42,35 @@
      * viewing mode, viewing position, or any other representation of the
      * application's data.
      */
-    class View : public Frustum
+    class EQ_EXPORT View : public Frustum
     {
     public:
-        EQ_EXPORT View();
-        EQ_EXPORT virtual ~View();
+        View();
+        virtual ~View();
 
         /** @name Data Access. */
         //@{
         /** @return the viewport of the view. */
-        EQ_EXPORT const Viewport& getViewport() const;
+        const Viewport& getViewport() const;
 
         /** @return the config of this view. */
-        EQ_EXPORT Config* getConfig();
+        Config* getConfig();
 
         /** @return the config of this view. */
-        EQ_EXPORT const Config* getConfig() const;
+        const Config* getConfig() const;
 
         /** @return the layout of this view. */
-        EQ_EXPORT Layout* getLayout() { return _layout; }
+        Layout* getLayout() { return _layout; }
 
         /** @return the layout of this view. */
-        EQ_EXPORT const Layout* getLayout() const { return _layout; }
+        const Layout* getLayout() const { return _layout; }
 
         /** @return the entity tracking this view, 0 for untracked views. */
         Observer* getObserver() { return _observer; }
         const Observer* getObserver() const { return _observer; }
 
         /** @warning  Undocumented - may not be supported in the future */
-        EQ_EXPORT void setOverdraw( const Vector2i& pixels );
+        void setOverdraw( const Vector2i& pixels );
         const Vector2i& getOverdraw() const { return _overdraw; }
         //@}
 
@@ -82,7 +82,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( ViewVisitor& visitor );
+        VisitorResult accept( ViewVisitor& visitor );
 
         /** 
          * Handle a received (view) event.
@@ -94,16 +94,16 @@
          * @param event the received view event.
          * @return true when the event was handled, false if not.
          */
-        EQ_EXPORT virtual bool handleEvent( const Event& event );
+        virtual bool handleEvent( const Event& event );
         //@}
 
     protected:
         /** @sa Frustum::serialize() */
-        EQ_EXPORT virtual void serialize( net::DataOStream& os,
+        virtual void serialize( net::DataOStream& os,
                                           const uint64_t dirtyBits );
 
         /** @sa Frustum::deserialize() */
-        EQ_EXPORT virtual void deserialize( net::DataIStream& is, 
+        virtual void deserialize( net::DataIStream& is, 
                                             const uint64_t dirtyBits );
 
         enum DirtyBits
Index: lib/client/viewport.h
===================================================================
--- lib/client/viewport.h	(revision 3828)
+++ lib/client/viewport.h	(working copy)
@@ -36,7 +36,7 @@
     /**
      * Holds a fractional viewport along with some methods for manipulation.
      */
-    class Viewport 
+    class EQ_EXPORT Viewport 
     {
     public:
         /**
@@ -143,7 +143,7 @@
             }
 
         /** Apply the view coverage to this viewport. */
-        EQ_EXPORT void applyView( const Viewport& segmentVP, 
+        void applyView( const Viewport& segmentVP, 
                                   const Viewport& viewVP,
                                   const PixelViewport& pvp, 
                                   const Vector4i& overdraw );
@@ -153,7 +153,7 @@
         float w;
         float h;
 
-        EQ_EXPORT static const Viewport FULL;
+        static const Viewport FULL;
     };
 
     inline std::ostream& operator << ( std::ostream& os, const Viewport& vp )
Index: lib/client/viewVisitor.h
===================================================================
--- lib/client/viewVisitor.h	(revision 3828)
+++ lib/client/viewVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const views.
      */
-    class ViewVisitor
+    class EQ_EXPORT ViewVisitor
     {
     public:
         /** Constructs a new ViewVisitor. */
Index: lib/client/wall.h
===================================================================
--- lib/client/wall.h	(revision 3828)
+++ lib/client/wall.h	(working copy)
@@ -34,58 +34,58 @@
      * The three points describe the bottom left, bottom right and top left
      * coordinate of the wall in real-world coordinates.
      */
-    class Wall
+    class EQ_EXPORT Wall
     {
     public:
-        EQ_EXPORT Wall();
+        Wall();
 
         /** 
          * Resize the wall horizontally.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeHorizontal( const float ratio );
+        void resizeHorizontal( const float ratio );
 
         /** 
          * Resize the wall vertically.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeVertical( const float ratio );
+        void resizeVertical( const float ratio );
         
         /** 
          * Resize the wall on the left side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeLeft( const float ratio );
+        void resizeLeft( const float ratio );
 
         /** 
          * Resize the wall on the right side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeRight( const float ratio );
+        void resizeRight( const float ratio );
 
         /** 
          * Resize the wall on the top side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeTop( const float ratio );
+        void resizeTop( const float ratio );
 
         /** 
          * Resize the wall on the bottom side.
          * 
          * @param ratio the amount by which the wall is grown or shrunk.
          */
-        EQ_EXPORT void resizeBottom( const float ratio );
+        void resizeBottom( const float ratio );
 
         /** Compute the sub-frustum for a 2D area on the full wall. */
-        EQ_EXPORT void apply( const Viewport& viewport);
+        void apply( const Viewport& viewport);
 
         /** Set the wall parameters from a projection description. */
-        EQ_EXPORT Wall& operator = ( const Projection& projection );
+        Wall& operator = ( const Projection& projection );
 
         /** @return the width of the wall. */
         float getWidth() const { return (bottomRight - bottomLeft).length(); }
@@ -93,8 +93,8 @@
         /** @return the height of the wall. */
         float getHeight() const { return (topLeft - bottomLeft).length(); }
 
-        EQ_EXPORT bool operator == ( const Wall& rhs ) const;
-        EQ_EXPORT bool operator != ( const Wall& rhs ) const;
+        bool operator == ( const Wall& rhs ) const;
+        bool operator != ( const Wall& rhs ) const;
 
         Vector3f bottomLeft;
         Vector3f bottomRight;
Index: lib/client/wglEventHandler.h
===================================================================
--- lib/client/wglEventHandler.h	(revision 3828)
+++ lib/client/wglEventHandler.h	(working copy)
@@ -31,14 +31,14 @@
      * by a 'wndproc' callback in the thread which created the window. Each
      * window has its own WGLEventHandler
      */
-    class WGLEventHandler : public EventHandler
+    class EQ_EXPORT WGLEventHandler : public EventHandler
     {
     public:
         /** Constructs a new WGL event handler. */
-        EQ_EXPORT WGLEventHandler( WGLWindowIF* window );
+        WGLEventHandler( WGLWindowIF* window );
 
         /** Destructs the WGL event handler. */
-        EQ_EXPORT virtual ~WGLEventHandler();
+        virtual ~WGLEventHandler();
 
         /** 
          * @return the function pointer of the previously installed window
Index: lib/client/wglMessagePump.h
===================================================================
--- lib/client/wglMessagePump.h	(revision 3828)
+++ lib/client/wglMessagePump.h	(working copy)
@@ -25,19 +25,19 @@
     /**
      * Processes OS messages on Win32 systems.
      */
-    class WGLMessagePump : public MessagePump
+    class EQ_EXPORT WGLMessagePump : public MessagePump
     {
     public:
-        EQ_EXPORT WGLMessagePump();
+        WGLMessagePump();
 
         /** Wake up dispatchOneEvent(). */
-        EQ_EXPORT virtual void postWakeup();
+        virtual void postWakeup();
 
         /** Get and dispatch all pending system events, non-blocking. */
-        EQ_EXPORT virtual void dispatchAll();
+        virtual void dispatchAll();
 
         /** Get and dispatch at least one pending system event, blocking. */
-        EQ_EXPORT virtual void dispatchOne();
+        virtual void dispatchOne();
 
         virtual ~WGLMessagePump() {}
 
Index: lib/client/wglWindow.h
===================================================================
--- lib/client/wglWindow.h	(revision 3828)
+++ lib/client/wglWindow.h	(working copy)
@@ -26,59 +26,59 @@
     class WGLEventHandler;
 
     /** The interface defining the minimum functionality for a WGL window. */
-    class WGLWindowIF : public GLWindow
+    class EQ_EXPORT WGLWindowIF : public GLWindow
     {
     public:
-        EQ_EXPORT WGLWindowIF( Window* parent ) : GLWindow( parent ) {}
-        EQ_EXPORT virtual ~WGLWindowIF() {}
+        WGLWindowIF( Window* parent ) : GLWindow( parent ) {}
+        virtual ~WGLWindowIF() {}
 
         /** @return the WGL rendering context. */
-        EQ_EXPORT virtual HGLRC getWGLContext() const = 0;
+        virtual HGLRC getWGLContext() const = 0;
 
         /** @return the Win32 window handle. */
-        EQ_EXPORT virtual HWND getWGLWindowHandle() const = 0;
+        virtual HWND getWGLWindowHandle() const = 0;
 
         /** @return the Win32 off screen PBuffer handle. */
-        EQ_EXPORT virtual HPBUFFERARB getWGLPBufferHandle() const = 0;
+        virtual HPBUFFERARB getWGLPBufferHandle() const = 0;
 
         /** @return the Win32 device context used for the current drawable. */
-        EQ_EXPORT virtual HDC getWGLDC() const = 0;
+        virtual HDC getWGLDC() const = 0;
 
         /** @return the Win32 affinity device context, if used. */
-        EQ_EXPORT virtual HDC getWGLAffinityDC() { return 0; }
+        virtual HDC getWGLAffinityDC() { return 0; }
 
         /** @return the generic WGL function table for the window's pipe. */
-        EQ_EXPORT WGLEWContext* wglewGetContext();
+        WGLEWContext* wglewGetContext();
 
         /** Process an event received from WGL. */
-        EQ_EXPORT virtual bool processEvent( const WGLWindowEvent& event )
+        virtual bool processEvent( const WGLWindowEvent& event )
             { return _window->processEvent( event ); }
     };
 
     /** Equalizer default implementation of a WGL window */
-    class WGLWindow : public WGLWindowIF
+    class EQ_EXPORT WGLWindow : public WGLWindowIF
     {
     public:
-        EQ_EXPORT WGLWindow( Window* parent );
-        EQ_EXPORT virtual ~WGLWindow( );
+        WGLWindow( Window* parent );
+        virtual ~WGLWindow( );
 
-        EQ_EXPORT virtual void configExit( );
-        EQ_EXPORT virtual void makeCurrent() const;
-        EQ_EXPORT virtual void swapBuffers();
-        EQ_EXPORT virtual void joinNVSwapBarrier( const uint32_t group,
+        virtual void configExit( );
+        virtual void makeCurrent() const;
+        virtual void swapBuffers();
+        virtual void joinNVSwapBarrier( const uint32_t group,
                                                   const uint32_t barrier );
 
         /** @return the Win32 window handle. */
-        EQ_EXPORT virtual HWND getWGLWindowHandle() const { return _wglWindow; }
+        virtual HWND getWGLWindowHandle() const { return _wglWindow; }
 
         /** @return the Win32 off screen PBuffer handle. */
-        EQ_EXPORT virtual HPBUFFERARB getWGLPBufferHandle() const { return _wglPBuffer; }
+        virtual HPBUFFERARB getWGLPBufferHandle() const { return _wglPBuffer; }
 
         /** @return the Win32 device context used for the current drawable. */
-        EQ_EXPORT virtual HDC getWGLDC() const { return _wglDC; }
+        virtual HDC getWGLDC() const { return _wglDC; }
 
         /** @return the WGL rendering context. */
-        EQ_EXPORT virtual HGLRC getWGLContext() const { return _wglContext; }
+        virtual HGLRC getWGLContext() const { return _wglContext; }
 
         /** @return the WGL event handler. */
         const WGLEventHandler* getWGLEventHandler() const 
@@ -94,7 +94,7 @@
          *
          * @param handle the window handle.
          */
-        EQ_EXPORT virtual void setWGLWindowHandle( HWND handle );
+        virtual void setWGLWindowHandle( HWND handle );
         
         /** 
          * Set the Win32 off screen pbuffer handle for this window.
@@ -104,7 +104,7 @@
          *
          * @param handle the pbuffer handle.
          */
-        EQ_EXPORT virtual void setWGLPBufferHandle( HPBUFFERARB handle );
+        virtual void setWGLPBufferHandle( HPBUFFERARB handle );
 
         /** 
          * Set the WGL rendering context for this window.
@@ -115,7 +115,7 @@
          *
          * @param context the WGL rendering context.
          */
-        EQ_EXPORT virtual void setWGLContext( HGLRC context );
+        virtual void setWGLContext( HGLRC context );
         //@}
 
         /** @name WGL/Win32 initialization */
@@ -130,20 +130,20 @@
          * 
          * @return true if the initialization was successful, false otherwise.
          */
-        EQ_EXPORT virtual bool configInit();
+        virtual bool configInit();
 
         /** 
          * Create, if needed, an affinity device context for this window.
          *
          * @return false on error, true otherwise
          */
-        EQ_EXPORT virtual bool initWGLAffinityDC();
+        virtual bool initWGLAffinityDC();
 
         /** Destroy the affinity device context. */
-        EQ_EXPORT virtual void exitWGLAffinityDC();
+        virtual void exitWGLAffinityDC();
 
         /** @return the affinity device context. */
-        EQ_EXPORT virtual HDC getWGLAffinityDC();
+        virtual HDC getWGLAffinityDC();
 
         /**
          * Create a device context for the display device of the window.
@@ -153,7 +153,7 @@
          *
          * @return the DC, or 0 upon error.
          */
-        EQ_EXPORT virtual HDC createWGLDisplayDC();
+        virtual HDC createWGLDisplayDC();
 
         /** 
          * Choose a pixel format based on the window's attributes.
@@ -163,7 +163,7 @@
          *
          * @return a pixel format, or 0 if no pixel format was found.
          */
-        EQ_EXPORT virtual int chooseWGLPixelFormat();
+        virtual int chooseWGLPixelFormat();
 
         /** 
          * Initialize the window's drawable (pbuffer or window) and
@@ -174,7 +174,7 @@
          * @param pixelFormat the window's target pixel format.
          * @return true if the drawable was created, false otherwise.
          */
-        EQ_EXPORT virtual bool configInitWGLDrawable( int pixelFormat );
+        virtual bool configInitWGLDrawable( int pixelFormat );
 
         /** 
          * Initialize the window with an on-screen Win32 window.
@@ -184,7 +184,7 @@
          * @param pixelFormat the window's target pixel format.
          * @return true if the drawable was created, false otherwise.
          */
-        EQ_EXPORT virtual bool configInitWGLWindow( int pixelFormat );
+        virtual bool configInitWGLWindow( int pixelFormat );
 
         /** 
          * Initialize the window with an off-screen WGL PBuffer.
@@ -194,10 +194,10 @@
          * @param pixelFormat the window's target pixel format.
          * @return true if the drawable was created, false otherwise.
          */
-        EQ_EXPORT virtual bool configInitWGLPBuffer( int pixelFormat );
+        virtual bool configInitWGLPBuffer( int pixelFormat );
 
         /** Initialize the window for an off-screen FBO */
-        EQ_EXPORT virtual bool configInitWGLFBO( int pixelFormat );
+        virtual bool configInitWGLFBO( int pixelFormat );
 
         /** 
          * Create a WGL context.
@@ -206,11 +206,11 @@
          *
          * @return the context, or 0 if context creation failed.
          */
-        EQ_EXPORT virtual HGLRC createWGLContext();
+        virtual HGLRC createWGLContext();
 
-        EQ_EXPORT virtual void initEventHandler();
-        EQ_EXPORT virtual void exitEventHandler();
-        EQ_EXPORT virtual bool processEvent( const WGLWindowEvent& event );
+        virtual void initEventHandler();
+        virtual void exitEventHandler();
+        virtual bool processEvent( const WGLWindowEvent& event );
         //@}
 
     protected:
Index: lib/client/wglWindowEvent.h
===================================================================
--- lib/client/wglWindowEvent.h	(revision 3828)
+++ lib/client/wglWindowEvent.h	(working copy)
@@ -24,7 +24,7 @@
 namespace eq
 {
     /** A window-system event for a WGLWindowIF */
-    class WGLWindowEvent : public Event
+    class EQ_EXPORT WGLWindowEvent : public Event
     {
     public:
         // Native event data
Index: lib/client/window.h
===================================================================
--- lib/client/window.h	(revision 3828)
+++ lib/client/window.h	(working copy)
@@ -60,7 +60,7 @@
      * between windows. Therefore, Equalizer calls flush() at the end of each
      * frame for each window.
      */
-    class Window : public net::Object
+    class EQ_EXPORT Window : public net::Object
     {
     public:
         /** The per-window object manager. */
@@ -70,14 +70,14 @@
         typedef util::BitmapFont< const void* > Font;
 
         /** Construct a new window. */
-        EQ_EXPORT Window( Pipe* parent );
+        Window( Pipe* parent );
 
         /** Destruct the window. */
-        EQ_EXPORT virtual ~Window();
+        virtual ~Window();
 
         /** @name Data Access */
         //@{
-        EQ_EXPORT net::CommandQueue* getPipeThreadQueue(); //!< @internal
+        net::CommandQueue* getPipeThreadQueue(); //!< @internal
 
         /** @return the Pipe of this window. */
         const Pipe* getPipe() const { return _pipe; }
@@ -85,20 +85,20 @@
         Pipe*       getPipe()       { return _pipe; }
 
         /** @return the Node of this window. */
-        EQ_EXPORT const Node* getNode() const; 
+        const Node* getNode() const; 
         /** @return the Node of this window. */
-        EQ_EXPORT Node*       getNode();
+        Node*       getNode();
 
         /** @return the Config of this window. */
-        EQ_EXPORT const Config* getConfig() const;
+        const Config* getConfig() const;
         /** @return the Config of this window. */
-        EQ_EXPORT Config*       getConfig();
+        Config*       getConfig();
 
         /** @return the Client of this window. */
-        EQ_EXPORT ClientPtr getClient();
+        ClientPtr getClient();
 
         /** @return the Server of this window. */
-        EQ_EXPORT ServerPtr getServer();
+        ServerPtr getServer();
 
         /** @return a vector of all channels of this window. */
         const ChannelVector& getChannels() { return _channels; }
@@ -127,7 +127,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQ_EXPORT VisitorResult accept( WindowVisitor& visitor );
+        VisitorResult accept( WindowVisitor& visitor );
 
         /** 
          * Set the window's pixel viewport wrt its parent pipe.
@@ -137,12 +137,12 @@
          * 
          * @param pvp the viewport in pixels.
          */
-        EQ_EXPORT void setPixelViewport( const PixelViewport& pvp );
+        void setPixelViewport( const PixelViewport& pvp );
         
         /** 
          * @return the window's pixel viewport
          */
-        EQ_EXPORT const PixelViewport& getPixelViewport() const { return _pvp; }
+        const PixelViewport& getPixelViewport() const { return _pvp; }
 
         /** @return the window's fractional viewport. */
         const Viewport& getViewport() const { return _vp; }
@@ -155,7 +155,7 @@
          *
          * @return true if a render context was found, false otherwise.
          */
-        EQ_EXPORT bool getRenderContext( const int32_t x, const int32_t y,
+        bool getRenderContext( const int32_t x, const int32_t y,
                                          RenderContext& context ) const;
 
         /** @return the window's average framerate */
@@ -188,10 +188,10 @@
         const ObjectManager* getObjectManager() const { return _objectManager; }
 
         /** @return the small bitmap font used for overlays. */
-        EQ_EXPORT const Font* getSmallFont();
+        const Font* getSmallFont();
 
         /** @return the medium bitmap font used for overlays. */
-        EQ_EXPORT const Font* getMediumFont();
+        const Font* getMediumFont();
 
         /** 
          * Get the GLEW context for this window.
@@ -206,7 +206,7 @@
          * @return the extended OpenGL function table for the window's OpenGL
          *         context.
          */
-        EQ_EXPORT GLEWContext* glewGetContext();
+        GLEWContext* glewGetContext();
 
         /** @return information about the current drawable. */
         const DrawableConfig& getDrawableConfig() const
@@ -216,7 +216,7 @@
          * @return the OpenGL texture format corresponding to the window's color
          *         drawable configuration
          */
-        EQ_EXPORT uint32_t getColorFormat();
+        uint32_t getColorFormat();
         //@}
 
         /**
@@ -255,13 +255,13 @@
         };
 
         /** Set a window attribute. */
-        EQ_EXPORT void setIAttribute( const IAttribute attr,
+        void setIAttribute( const IAttribute attr,
                                       const int32_t value );
 
         /** @return the value of a window attribute. */
-        EQ_EXPORT int32_t  getIAttribute( const IAttribute attr ) const;
+        int32_t  getIAttribute( const IAttribute attr ) const;
         /** @return the name of a window attribute. */
-        EQ_EXPORT static const std::string& getIAttributeString(
+        static const std::string& getIAttributeString(
                                                         const IAttribute attr );
         //@}
 
@@ -291,16 +291,16 @@
          * this method will only call OSWindow::makeCurrent if it has not been
          * done before for this window.
          */
-        EQ_EXPORT virtual void makeCurrent( const bool cache = true ) const;
+        virtual void makeCurrent( const bool cache = true ) const;
 
         /** Bind the window's FBO, if it uses one. */
-        EQ_EXPORT virtual void bindFrameBuffer() const;
+        virtual void bindFrameBuffer() const;
 
         /** Swap the front and back buffer of the window. */
-        EQ_EXPORT virtual void swapBuffers();
+        virtual void swapBuffers();
 
         /** Render the current framerate as on overlay on the window. */
-        EQ_EXPORT virtual void drawFPS();
+        virtual void drawFPS();
         //@}
 
         /**  @name OSWindow interface */
@@ -313,7 +313,7 @@
          * swapBuffers(), to the OSWindow. The os-specific window has to be
          * initialized.
          */
-        EQ_EXPORT void setOSWindow( OSWindow* window );
+        void setOSWindow( OSWindow* window );
 
         /** @return the OS-specific window implementation. */
         const OSWindow* getOSWindow() const { return _osWindow; }
@@ -336,7 +336,7 @@
          *
          * @param message the error message.
          */
-        EQ_EXPORT void setErrorMessage( const std::string& message );
+        void setErrorMessage( const std::string& message );
         //@}
 
         /**
@@ -357,14 +357,14 @@
          * @param event the received window system event.
          * @return true when the event was handled, false if not.
          */
-        EQ_EXPORT virtual bool processEvent( const Event& event );
+        virtual bool processEvent( const Event& event );
         //@}
 
     protected:
         friend class Pipe;
 
         /** @internal */
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 net::Session* session );
 
@@ -405,14 +405,14 @@
          * 
          * @param initID the init identifier.
          */
-        EQ_EXPORT virtual bool configInit( const uint32_t initID );
+        virtual bool configInit( const uint32_t initID );
 
         /** 
          * Initialize the OS-specific window.
          *
          * @sa setOSWindow()
          */
-        EQ_EXPORT virtual bool configInitOSWindow( const uint32_t initID );
+        virtual bool configInitOSWindow( const uint32_t initID );
 
         /** 
          * Initialize the OpenGL state for this window.
@@ -421,13 +421,13 @@
          * @return <code>true</code> if the initialization was successful,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT virtual bool configInitGL( const uint32_t initID );
+        virtual bool configInitGL( const uint32_t initID );
 
         /** Exit this window. */
-        EQ_EXPORT virtual bool configExit();
+        virtual bool configExit();
 
         /** De-initialize the OS-specific window. */
-        EQ_EXPORT virtual bool configExitOSWindow();
+        virtual bool configExitOSWindow();
 
         /** De-initialize the OpenGL state for this window. */
         virtual bool configExitGL() { return true; }
@@ -458,7 +458,7 @@
          * @param frameID the per-frame identifier.
          * @param frameNumber the frame to finish.
          */
-        EQ_EXPORT virtual void frameFinish( const uint32_t frameID, 
+        virtual void frameFinish( const uint32_t frameID, 
                                             const uint32_t frameNumber );
 
         /** 
Index: lib/client/windowStatistics.h
===================================================================
--- lib/client/windowStatistics.h	(revision 3828)
+++ lib/client/windowStatistics.h	(working copy)
@@ -26,7 +26,7 @@
 
     /** A statistics sampler for window-related events.
      */
-    class WindowStatistics : public StatisticSampler< Window >
+    class EQ_EXPORT WindowStatistics : public StatisticSampler< Window >
     {
     public:
         WindowStatistics( const Statistic::Type type, Window* window );
Index: lib/client/windowVisitor.h
===================================================================
--- lib/client/windowVisitor.h	(revision 3828)
+++ lib/client/windowVisitor.h	(working copy)
@@ -27,7 +27,7 @@
     /**
      * A visitor to traverse non-const windows and children.
      */
-    class WindowVisitor : public ChannelVisitor
+    class EQ_EXPORT WindowVisitor : public ChannelVisitor
     {
     public:
         /** Construct a new WindowVisitor. */
Index: lib/net/barrier.h
===================================================================
--- lib/net/barrier.h	(revision 3828)
+++ lib/net/barrier.h	(working copy)
@@ -31,7 +31,7 @@
     class Node;
 
     /** A networked, versioned barrier. */
-    class Barrier : public Object
+    class EQ_EXPORT Barrier : public Object
     {
     public:
         /** 
@@ -44,13 +44,13 @@
          * barrier with the session. Note the node of the object master, i.e.,
          * this instance, and the barrier master node might be different.
          */
-        EQ_EXPORT Barrier( NodePtr master, const uint32_t height = 0 );
+        Barrier( NodePtr master, const uint32_t height = 0 );
 
         /** Construct a new barrier, to be mapped to the master version. */
-        EQ_EXPORT Barrier();
+        Barrier();
 
         /** Destruct the barrier. */
-        EQ_EXPORT virtual ~Barrier();
+        virtual ~Barrier();
 
         /** 
          * @name Data Access
@@ -77,7 +77,7 @@
          * The implementation assumes that the master node instance also enters
          * the barrier.
          */
-        EQ_EXPORT void enter();
+        void enter();
         //@}
 
     protected:
Index: lib/net/bufferConnection.h
===================================================================
--- lib/net/bufferConnection.h	(revision 3828)
+++ lib/net/bufferConnection.h	(working copy)
@@ -28,22 +28,22 @@
     /**
      * A proxy connection buffering outgoing data into a memory region.
      */
-    class BufferConnection : public Connection
+    class EQ_EXPORT BufferConnection : public Connection
     {
     public:
-        EQ_EXPORT BufferConnection();
-        EQ_EXPORT virtual ~BufferConnection();
+        BufferConnection();
+        virtual ~BufferConnection();
 
-        EQ_EXPORT void sendBuffer( ConnectionPtr connection );
+        void sendBuffer( ConnectionPtr connection );
 
-        EQ_EXPORT uint64_t getSize() const { return _buffer.getSize(); }
+        uint64_t getSize() const { return _buffer.getSize(); }
 
     protected:
         virtual void readNB( void* buffer, const uint64_t bytes )
             { EQDONTCALL; }
         virtual int64_t readSync( void* buffer, const uint64_t bytes )
             { EQDONTCALL; return -1; }
-        EQ_EXPORT virtual int64_t write( const void* buffer,
+        virtual int64_t write( const void* buffer,
                                          const uint64_t bytes );
 
     private:
Index: lib/net/command.h
===================================================================
--- lib/net/command.h	(revision 3828)
+++ lib/net/command.h	(working copy)
@@ -35,7 +35,7 @@
      * A RefPtr<Packet> can't be used, since Packets are plain C structs send
      * over the network.
      */
-    class Command 
+    class EQ_EXPORT Command 
     {
     public:
         Packet*       getPacket()              { return _packet; }
Index: lib/net/commandCache.h
===================================================================
--- lib/net/commandCache.h	(revision 3828)
+++ lib/net/commandCache.h	(working copy)
@@ -37,7 +37,7 @@
      * Commands are retained and released whenever they are not directly
      * processed, e.g., when pushed to another thread using a CommandQueue.
      */
-    class CommandCache
+    class EQ_EXPORT CommandCache
     {
     public:
         CommandCache();
Index: lib/net/commandQueue.h
===================================================================
--- lib/net/commandQueue.h	(revision 3828)
+++ lib/net/commandQueue.h	(working copy)
@@ -32,21 +32,21 @@
     /**
      * A CommandQueue is a thread-safe queue for command packets.
      */
-    class CommandQueue : public base::NonCopyable
+    class EQ_EXPORT CommandQueue : public base::NonCopyable
     {
     public:
-        EQ_EXPORT CommandQueue();
-        EQ_EXPORT virtual ~CommandQueue();
+        CommandQueue();
+        virtual ~CommandQueue();
 
         /** 
          * Push a command to the queue.
          * 
          * @param packet the command packet.
          */
-        EQ_EXPORT virtual void push( Command& packet );
+        virtual void push( Command& packet );
 
         /** Push a command to the front of the queue. */
-        EQ_EXPORT virtual void pushFront( Command& packet );
+        virtual void pushFront( Command& packet );
 
         /** Wake up the command queue, pop() will return 0. */
         virtual void wakeup() { _commands.push( static_cast< Command* >( 0 )); }
@@ -58,7 +58,7 @@
          * 
          * @return the next command in the queue.
          */
-        EQ_EXPORT virtual Command* pop();
+        virtual Command* pop();
 
         /** 
          * Try to pop a command from the queue.
@@ -67,14 +67,14 @@
          * 
          * @return the next command in the queue, or 0 if no command is queued.
          */
-        EQ_EXPORT virtual Command* tryPop();
+        virtual Command* tryPop();
 
         /** 
          * Peek the command at the end of the queue.
          *
          * @return the last command in the queue, or 0 if no command is queued.
          */
-        EQ_EXPORT Command* back() const;
+        Command* back() const;
 
         /** 
          * @return <code>true</code> if the command queue is empty,
Index: lib/net/connection.h
===================================================================
--- lib/net/connection.h	(revision 3828)
+++ lib/net/connection.h	(working copy)
@@ -62,7 +62,7 @@
      * The Connection is used reference-counted in eq::net, since it has
      * multiple owners, such as the ConnectionSet and Node.
      */
-    class Connection : public base::Referenced, public base::NonCopyable
+    class EQ_EXPORT Connection : public base::Referenced, public base::NonCopyable
     {
     public:
         enum State //! The current state of the Connection
@@ -82,7 +82,7 @@
          * @param description the connection parameters.
          * @return the connection.
          */
-        EQ_EXPORT static ConnectionPtr create( ConnectionDescriptionPtr 
+        static ConnectionPtr create( ConnectionDescriptionPtr 
                                                    description );
 
         /** @name Data Access */
@@ -104,10 +104,10 @@
          * 
          * @param description the connection parameters.
          */
-        EQ_EXPORT void setDescription( ConnectionDescriptionPtr description );
+        void setDescription( ConnectionDescriptionPtr description );
 
         /** @return the description for this connection. */
-        EQ_EXPORT ConnectionDescriptionPtr getDescription() const;
+        ConnectionDescriptionPtr getDescription() const;
         //@}
 
 
@@ -185,7 +185,7 @@
          * @param bytes the number of bytes to read.
          * @sa recvSync()
          */
-        EQ_EXPORT void recvNB( void* buffer, const uint64_t bytes );
+        void recvNB( void* buffer, const uint64_t bytes );
 
         /** 
          * Finish reading data from the connection.
@@ -199,7 +199,7 @@
          * @param bytes return value, the number of bytes read.
          * @return true if all requested data has been read, false otherwise.
          */
-        EQ_EXPORT bool recvSync( void** buffer, uint64_t* bytes );
+        bool recvSync( void** buffer, uint64_t* bytes );
 
         void getRecvData( void** buffer, uint64_t* bytes )
             { *buffer = _aioBuffer; *bytes = _aioBytes; }
@@ -248,7 +248,7 @@
          * @return true if all data has been read, false if not.
          * @sa lockSend(), unlockSend()
          */
-        EQ_EXPORT bool send( const void* buffer, const uint64_t bytes, 
+        bool send( const void* buffer, const uint64_t bytes, 
                              const bool isLocked = false );
 
         /** Lock the connection, no other thread can send data. */
@@ -302,7 +302,7 @@
          * @param size the data size in bytes.
          * @return true if all data has been read, false if not.
          */
-        EQ_EXPORT bool send( Packet& packet, const void* data,
+        bool send( Packet& packet, const void* data,
                              const uint64_t size );
 
         /** 
Index: lib/net/connectionDescription.h
===================================================================
--- lib/net/connectionDescription.h	(revision 3828)
+++ lib/net/connectionDescription.h	(working copy)
@@ -33,7 +33,7 @@
      *
      * @sa Node
      */
-    class ConnectionDescription : public base::Referenced
+    class EQ_EXPORT ConnectionDescription : public base::Referenced
     {
     public:
         ConnectionDescription() 
@@ -53,8 +53,8 @@
         uint16_t port;
 
         /** @return this description as a string. */
-        EQ_EXPORT std::string toString() const;
-        EQ_EXPORT void serialize( std::ostream& os ) const;
+        std::string toString() const;
+        void serialize( std::ostream& os ) const;
 
         /** 
          * Reads the connection description from a string.
@@ -71,27 +71,27 @@
          * @return <code>true</code> if the information was read correctly, 
          *         <code>false</code> if not.
          */
-        EQ_EXPORT bool fromString( std::string& data );
+        bool fromString( std::string& data );
 
         /** @name Data Access
          *
          * std::strings are not public because of DLL allocation issues.
          */
         //@{
-        EQ_EXPORT void setHostname( const std::string& hostname );
-        EQ_EXPORT const std::string& getHostname() const;
+        void setHostname( const std::string& hostname );
+        const std::string& getHostname() const;
 
-        EQ_EXPORT void setInterface( const std::string& interface );
-        EQ_EXPORT const std::string& getInterface() const;
+        void setInterface( const std::string& interface );
+        const std::string& getInterface() const;
 
-        EQ_EXPORT void setFilename( const std::string& filename );
-        EQ_EXPORT const std::string& getFilename() const;
+        void setFilename( const std::string& filename );
+        const std::string& getFilename() const;
 
-        EQ_EXPORT bool isSameMulticastGroup( ConnectionDescriptionPtr rhs );
+        bool isSameMulticastGroup( ConnectionDescriptionPtr rhs );
         //@}
 
     protected:
-        EQ_EXPORT virtual ~ConnectionDescription() {}
+        virtual ~ConnectionDescription() {}
 
     private:
         /** The host name. */
Index: lib/net/connectionSet.h
===================================================================
--- lib/net/connectionSet.h	(revision 3828)
+++ lib/net/connectionSet.h	(working copy)
@@ -51,7 +51,7 @@
      *
      * From the set, a connection with pending events can be selected.
      */
-    class ConnectionSet : public ConnectionListener
+    class EQ_EXPORT ConnectionSet : public ConnectionListener
     {
     public:
         enum Event
@@ -68,12 +68,12 @@
             EVENT_ALL
         };
 
-        EQ_EXPORT ConnectionSet();
-        EQ_EXPORT ~ConnectionSet();
+        ConnectionSet();
+        ~ConnectionSet();
 
-        EQ_EXPORT void addConnection( ConnectionPtr connection );
-        EQ_EXPORT bool removeConnection( ConnectionPtr connection );
-        EQ_EXPORT void clear();
+        void addConnection( ConnectionPtr connection );
+        bool removeConnection( ConnectionPtr connection );
+        void clear();
         size_t getSize()  const { return _connections.size(); }
         bool   isEmpty() const { return _connections.empty(); }
 
@@ -89,12 +89,12 @@
          *                indefinitly.
          * @return The event occured during selection.
          */
-        EQ_EXPORT Event select( const int timeout = -1 );
+        Event select( const int timeout = -1 );
 
         /**
          * Interrupt the current or next select call.
          */
-        EQ_EXPORT void interrupt();
+        void interrupt();
 
         int           getError()     { return _error; }
         ConnectionPtr getConnection(){ return _connection; }
Index: lib/net/dataIStream.h
===================================================================
--- lib/net/dataIStream.h	(revision 3828)
+++ lib/net/dataIStream.h	(working copy)
@@ -29,7 +29,7 @@
 namespace net
 {
     /** A std::istream-like input data stream for binary data. */
-    class DataIStream
+    class EQ_EXPORT DataIStream
     {
     public:
         /** @name Internal */
@@ -67,7 +67,7 @@
         }
 
         /** Read a number of bytes from the stream into a buffer.  */
-        EQ_EXPORT void read( void* data, uint64_t size );
+        void read( void* data, uint64_t size );
 
         /** 
          * Get the pointer to the remaining data in the current buffer.
@@ -80,13 +80,13 @@
          * the DataOStream, a symmetric read from the DataIStream has at least n
          * bytes available.
          */
-        EQ_EXPORT const void*    getRemainingBuffer();
+        const void*    getRemainingBuffer();
 
         /** Get the size of the remaining data in the current buffer. */
-        EQ_EXPORT uint64_t       getRemainingBufferSize();
+        uint64_t       getRemainingBufferSize();
 
         /** Advance the current buffer by a number of bytes. */
-        EQ_EXPORT void           advanceBuffer( const uint64_t offset ); 
+        void           advanceBuffer( const uint64_t offset ); 
         //@}
  
     protected:
Index: lib/net/dataOStream.h
===================================================================
--- lib/net/dataOStream.h	(revision 3828)
+++ lib/net/dataOStream.h	(working copy)
@@ -39,7 +39,7 @@
      *
      * Derived classes send the data using the appropriate command packets.
      */
-    class DataOStream
+    class EQ_EXPORT DataOStream
     {
     public:
         /** @name Internal */
@@ -98,10 +98,10 @@
             }
 
         /** Write a number of bytes from data into the stream. */
-        EQ_EXPORT void write( const void* data, uint64_t size );
+        void write( const void* data, uint64_t size );
 
         /** Write one block of data into the stream and close it immediately. */
-        EQ_EXPORT void writeOnce( const void* data, uint64_t size );
+        void writeOnce( const void* data, uint64_t size );
         //@}
 
  
Index: lib/net/deltaMasterCM.h
===================================================================
--- lib/net/deltaMasterCM.h	(revision 3828)
+++ lib/net/deltaMasterCM.h	(working copy)
@@ -32,7 +32,7 @@
      * instance.
      * @internal
      */
-    class DeltaMasterCM : public FullMasterCM
+    class EQ_EXPORT DeltaMasterCM : public FullMasterCM
     {
     public:
         DeltaMasterCM( Object* object );
Index: lib/net/dispatcher.h
===================================================================
--- lib/net/dispatcher.h	(revision 3828)
+++ lib/net/dispatcher.h	(working copy)
@@ -40,12 +40,12 @@
      * Provides packet dispatch through a command queue and command handler
      * table. Returns the result of the invoked command handlers.
      */
-    class Dispatcher
+    class EQ_EXPORT Dispatcher
     {
     public:
-        EQ_EXPORT Dispatcher();
-        EQ_EXPORT Dispatcher( const Dispatcher& from );
-        EQ_EXPORT virtual ~Dispatcher();
+        Dispatcher();
+        Dispatcher( const Dispatcher& from );
+        virtual ~Dispatcher();
 
         /** NOP assignment operator. */
         const Dispatcher& operator = ( const Dispatcher& ) { return *this; }
@@ -58,7 +58,7 @@
          *         be dispatched again later)
          * @sa registerCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
+        virtual bool dispatchCommand( Command& command );
 
         /** 
          * Handles a received command packet for this object by calling the
@@ -68,7 +68,7 @@
          * @return the result of the operation.
          * @sa registerCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
+        virtual CommandResult invokeCommand( Command& command );
  
     protected:
         /** 
@@ -97,7 +97,7 @@
         CommandResult _cmdUnknown( Command& command );
 
     private:
-        EQ_EXPORT void _registerCommand( const uint32_t command, 
+        void _registerCommand( const uint32_t command, 
                                          const CommandFunc< Dispatcher >& func,
                                          CommandQueue* destinationQueue );
 
Index: lib/net/instanceCache.cpp
===================================================================
--- lib/net/instanceCache.cpp	(revision 3828)
+++ lib/net/instanceCache.cpp	(working copy)
@@ -227,7 +227,7 @@
         const ObjectDataIStream* stream = item.data.versions.back();
         item.data.versions.pop_back();
 
-        EQASSERT( stream->isReady( ));
+//        EQASSERT( stream->isReady( ));
         _size -= stream->getDataSize();
         delete stream;
     }
Index: lib/net/namedPipeConnection.h
===================================================================
--- lib/net/namedPipeConnection.h	(revision 3828)
+++ lib/net/namedPipeConnection.h	(working copy)
@@ -37,7 +37,7 @@
     /**
      * A .
      */
-    class NamedPipeConnection
+    class EQ_EXPORT NamedPipeConnection
 #ifdef WIN32
         : public Connection
 #else
Index: lib/net/node.h
===================================================================
--- lib/net/node.h	(revision 3828)
+++ lib/net/node.h	(working copy)
@@ -57,7 +57,7 @@
      * sessions, that is, one or more Session can be mapped to a Node, in which
      * case the node will dispatch packets to these sessions.
      */
-    class Node : public Dispatcher, public base::Referenced
+    class EQ_EXPORT Node : public Dispatcher, public base::Referenced
     {
     public:
         /** The state of the node. */
@@ -70,7 +70,7 @@
         };
 
         /** Construct a new Node. */
-        EQ_EXPORT Node();
+        Node();
 
         /** @name Data Access. */
         //@{
@@ -103,10 +103,10 @@
          * %c - command (work dir + program name)
          * %n - unique node identifier
          */
-        EQ_EXPORT void setLaunchCommand( const std::string& launchCommand );
+        void setLaunchCommand( const std::string& launchCommand );
 
         /** @return the command to spawn the process for this node. */
-        EQ_EXPORT const std::string& getLaunchCommand() const;
+        const std::string& getLaunchCommand() const;
 
         /** Set the launch timeout in milliseconds. */
         void setLaunchTimeout( const uint32_t time ) { _launchTimeout = time; }
@@ -126,7 +126,7 @@
          * 
          * @param name the program name to start this node.
          */
-        EQ_EXPORT void setProgramName( const std::string& name );
+        void setProgramName( const std::string& name );
 
         /** @return the program name to start the node. */
         const std::string& getProgramName() const { return _programName; }
@@ -136,7 +136,7 @@
          * 
          * @param name the working directory to start this node.
          */
-        EQ_EXPORT void setWorkDir( const std::string& name );
+        void setWorkDir( const std::string& name );
 
         /** @return the working directory to start the node. */
         const std::string& getWorkDir() const { return _workDir; }
@@ -179,7 +179,7 @@
          * @return <code>true</code> if the client was successfully initialized,
          *         <code>false</code> otherwise.
          */
-        EQ_EXPORT virtual bool initLocal( const int argc, char** argv );
+        virtual bool initLocal( const int argc, char** argv );
 
         /** Exit a local, listening node. */
         virtual bool exitLocal() { return close(); }
@@ -199,7 +199,7 @@
          *         <code>false</code> if not.
          * @sa connect
          */
-        EQ_EXPORT virtual bool listen();
+        virtual bool listen();
 
         /** 
          * Close a listening node.
@@ -210,7 +210,7 @@
          * @return <code>true</code> if the node was stopped, <code>false</code>
          *         if it was not stopped.
          */
-        EQ_EXPORT virtual bool close();
+        virtual bool close();
 
         /** 
          * Connect a proxy node to this listening node.
@@ -229,7 +229,7 @@
          * @return true if this node was connected, false otherwise.
          * @sa initConnect, syncConnect
          */
-        EQ_EXPORT bool connect( NodePtr node );
+        bool connect( NodePtr node );
 
         /** 
          * Start connecting a node using the available connection descriptions.
@@ -246,7 +246,7 @@
          *         <code>false</code> otherwise.
          * @sa syncConnect
          */
-        EQ_EXPORT bool initConnect( NodePtr node );
+        bool initConnect( NodePtr node );
 
         /** 
          * Synchronize the connection initiated by initConnect().
@@ -261,7 +261,7 @@
          *         <code>false</code> otherwise.
          * @sa initConnect
          */
-        EQ_EXPORT bool syncConnect( NodePtr node, const uint32_t timeout );
+        bool syncConnect( NodePtr node, const uint32_t timeout );
 
         /** 
          * Create and connect a node given by an identifier.
@@ -283,7 +283,7 @@
          * @return <code>true</code> if the node was disconnected correctly,
          *         <code>false</code> otherwise.
          */
-        EQ_EXPORT bool close( NodePtr node );
+        bool close( NodePtr node );
         //@}
 
 
@@ -304,7 +304,7 @@
          * 
          * @param cd the connection description.
          */
-        EQ_EXPORT void addConnectionDescription( ConnectionDescriptionPtr cd );
+        void addConnectionDescription( ConnectionDescriptionPtr cd );
         
         /** 
          * Removes a connection description.
@@ -313,14 +313,14 @@
          * @return true if the connection description was removed, false
          *         otherwise.
          */
-        EQ_EXPORT bool removeConnectionDescription(ConnectionDescriptionPtr cd);
+        bool removeConnectionDescription(ConnectionDescriptionPtr cd);
 
         /** 
          * Returns the number of stored connection descriptions. 
          * 
          * @return the number of stored connection descriptions. 
          */
-        EQ_EXPORT const ConnectionDescriptionVector& getConnectionDescriptions()
+        const ConnectionDescriptionVector& getConnectionDescriptions()
                             const;
 
         /** @return the connection to this node. */
@@ -456,7 +456,7 @@
          * @return <code>true</code> if the session was mapped,
          *         <code>false</code> if not.
          */
-        EQ_EXPORT bool registerSession( Session* session );
+        bool registerSession( Session* session );
 
         /** Deregister a (master) session. */
         bool deregisterSession( Session* session )
@@ -484,7 +484,7 @@
          * @return <code>true</code> if the session was unmapped,
          *         <code>false</code> if there was an error.
          */
-        EQ_EXPORT bool unmapSession( Session* session );
+        bool unmapSession( Session* session );
 
         /** @return the mapped session with the given identifier, or 0. */
         Session* getSession( const uint32_t id );
@@ -498,7 +498,7 @@
          * @param clientArgs the client arguments as specified by the server.
          * @return the success value of the run.
          */
-        EQ_EXPORT virtual bool runClient( const std::string& clientArgs );
+        virtual bool runClient( const std::string& clientArgs );
 
         /** Return the command queue to the command thread. */
         CommandQueue* getCommandThreadQueue() 
@@ -514,13 +514,13 @@
         const NodeID& getNodeID() const { return _id; }
 
         /** Serialize the node's information. */
-        EQ_EXPORT std::string serialize() const;
+        std::string serialize() const;
         /** Deserialize the node information, consumes given data. */
-        EQ_EXPORT bool deserialize( std::string& data );
+        bool deserialize( std::string& data );
 
     protected:
         /** Destructs this node. */
-        EQ_EXPORT virtual ~Node();
+        virtual ~Node();
 
         /** 
          * Connect a node proxy to this node.
@@ -544,7 +544,7 @@
          * @return the result of the operation.
          * @sa invokeCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& command );
+        virtual bool dispatchCommand( Command& command );
 
         /** 
          * Invokes the command handler method for the packet.
@@ -553,7 +553,7 @@
          * @return the result of the operation.
          * @sa Dispatcher::invokeCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& command );
+        virtual CommandResult invokeCommand( Command& command );
 
         /** 
          * The main loop for auto-launched clients. 
@@ -572,7 +572,7 @@
          * @return the node.
          * @sa getType()
          */
-        EQ_EXPORT virtual NodePtr createNode( const uint32_t type );
+        virtual NodePtr createNode( const uint32_t type );
 
         /** Registers request packets waiting for a return value. */
         base::RequestHandler _requestHandler;
@@ -696,7 +696,7 @@
 
         bool _connectSelf();
         void _connectMulticast( NodePtr node );
-        EQ_EXPORT void _addConnection( ConnectionPtr connection );
+        void _addConnection( ConnectionPtr connection );
         void _removeConnection( ConnectionPtr connection );
         void _cleanup();
 
Index: lib/net/object.h
===================================================================
--- lib/net/object.h	(revision 3828)
+++ lib/net/object.h	(working copy)
@@ -41,7 +41,7 @@
      * use distributed objects.
      * @sa eq::Object
      */
-    class Object : public Dispatcher
+    class EQ_EXPORT Object : public Dispatcher
     {
     public:
         /**
@@ -66,18 +66,18 @@
         };
 
         /** Construct a new distributed object. */
-        EQ_EXPORT Object();
+        Object();
 
         /** Destruct the distributed object. */
-        EQ_EXPORT virtual ~Object();
+        virtual ~Object();
 
         /** Called when object is attached to session. @internal */
-        EQ_EXPORT virtual void attachToSession( const uint32_t id, 
+        virtual void attachToSession( const uint32_t id, 
                                                 const uint32_t instanceID, 
                                                 Session* session );
 
         /** Called when object is detached from session. @internal */
-        EQ_EXPORT virtual void detachFromSession();
+        virtual void detachFromSession();
 
         /** 
          * Make this object thread safe.
@@ -86,7 +86,7 @@
          * when this function is called. If you don't call this function,
          * certain operations, e.g., sync(), are not-threadsafe.
          */
-        EQ_EXPORT virtual void makeThreadSafe();  
+        virtual void makeThreadSafe();  
         
         /** @return true if the object has been made threadsafe, false if not.*/
         bool isThreadSafe() const      { return _threadSafe; }
@@ -118,7 +118,7 @@
         /** 
          * @return true if this instance is the master version, false otherwise.
          */
-        EQ_EXPORT bool isMaster() const;
+        bool isMaster() const;
 
         /**
          * @name Versioning
@@ -164,7 +164,7 @@
          * @return the new head version.
          * @sa commitNB, commitSync
          */
-        EQ_EXPORT virtual uint32_t commit();
+        virtual uint32_t commit();
 
         /** 
          * Start committing a new version of this object.
@@ -175,7 +175,7 @@
          * @return the commit identifier to be passed to commitSync
          * @sa commitSync
          */
-        EQ_EXPORT uint32_t commitNB();
+        uint32_t commitNB();
         
         /** 
          * Finalizes a commit transaction.
@@ -183,7 +183,7 @@
          * @param commitID the commit identifier returned from commitNB
          * @return the new head version.
          */
-        EQ_EXPORT uint32_t commitSync( const uint32_t commitID );
+        uint32_t commitSync( const uint32_t commitID );
 
         /** 
          * Explicitly obsoletes all versions including version.
@@ -192,7 +192,7 @@
          * 
          * @param version the version to obsolete
          */
-        EQ_EXPORT void obsolete( const uint32_t version );
+        void obsolete( const uint32_t version );
 
         /** 
          * Automatically obsolete old versions.
@@ -209,11 +209,11 @@
          *              version.
          * @param flags additional flags for the auto-obsoletion mechanism
          */
-        EQ_EXPORT void setAutoObsolete( const uint32_t count, 
+        void setAutoObsolete( const uint32_t count, 
                           const uint32_t flags = AUTO_OBSOLETE_COUNT_VERSIONS );
 
         /** @return get the number of versions this object retains. */
-        EQ_EXPORT uint32_t getAutoObsoleteCount() const;
+        uint32_t getAutoObsoleteCount() const;
 
         /** 
          * Sync to a given version.
@@ -225,16 +225,16 @@
          *                current version.
          * @return the version of the object after the operation.
          */
-        EQ_EXPORT uint32_t sync( const uint32_t version = VERSION_HEAD );
+        uint32_t sync( const uint32_t version = VERSION_HEAD );
 
         /** @return the latest available (head) version. */
-        EQ_EXPORT uint32_t getHeadVersion() const;
+        uint32_t getHeadVersion() const;
 
         /** @return the currently synchronized version. */
-        EQ_EXPORT uint32_t getVersion() const;
+        uint32_t getVersion() const;
 
         /** @return the oldest available version. */
-        EQ_EXPORT uint32_t getOldestVersion() const;
+        uint32_t getOldestVersion() const;
 
         /** 
          * Notification that a new head version was received by a slave object.
@@ -268,10 +268,10 @@
 
     protected:
         /** Copy constructor. */
-        EQ_EXPORT Object( const Object& );
+        Object( const Object& );
 
         /** NOP assignment operator. */
-        EQ_EXPORT const Object& operator = ( const Object& ) { return *this; }
+        const Object& operator = ( const Object& ) { return *this; }
 
         /**
          * @name Automatic Instantiation and Versioning
@@ -320,14 +320,14 @@
         //@}
 
         /** @return the master object instance identifier. */
-        EQ_EXPORT uint32_t getMasterInstanceID() const;
+        uint32_t getMasterInstanceID() const;
 
         /** 
          * Remove a subscribed slave.
          * 
          * @param node the slave node. 
          */
-        EQ_EXPORT void removeSlave( NodePtr node );
+        void removeSlave( NodePtr node );
 
         /** @name Packet Transmission */
         //@{
Index: lib/net/objectDataIStream.h
===================================================================
--- lib/net/objectDataIStream.h	(revision 3828)
+++ lib/net/objectDataIStream.h	(working copy)
@@ -34,7 +34,7 @@
     /**
      * The DataIStream for object data.
      */
-    class ObjectDataIStream : public DataIStream
+    class EQ_EXPORT ObjectDataIStream : public DataIStream
     {
     public:
         ObjectDataIStream();
Index: lib/net/objectDataOStream.h
===================================================================
--- lib/net/objectDataOStream.h	(revision 3828)
+++ lib/net/objectDataOStream.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * The DataOStream for object data.
      */
-    class ObjectDataOStream : public DataOStream
+    class EQ_EXPORT ObjectDataOStream : public DataOStream
     {
     public:
         ObjectDataOStream( const Object* object )
Index: lib/net/objectDeltaDataIStream.h
===================================================================
--- lib/net/objectDeltaDataIStream.h	(revision 3828)
+++ lib/net/objectDeltaDataIStream.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * The DataIStream for object delta version data.
      */
-    class ObjectDeltaDataIStream : public ObjectDataIStream
+    class EQ_EXPORT ObjectDeltaDataIStream : public ObjectDataIStream
     {
     public:
         ObjectDeltaDataIStream();
Index: lib/net/objectDeltaDataOStream.h
===================================================================
--- lib/net/objectDeltaDataOStream.h	(revision 3828)
+++ lib/net/objectDeltaDataOStream.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * The DataOStream for object delta version data.
      */
-    class ObjectDeltaDataOStream : public ObjectDataOStream
+    class EQ_EXPORT ObjectDeltaDataOStream : public ObjectDataOStream
     {
     public:
         ObjectDeltaDataOStream( const Object* object );
Index: lib/net/objectInstanceDataOStream.h
===================================================================
--- lib/net/objectInstanceDataOStream.h	(revision 3828)
+++ lib/net/objectInstanceDataOStream.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * The DataOStream for object instance data.
      */
-    class ObjectInstanceDataOStream : public ObjectDataOStream
+    class EQ_EXPORT ObjectInstanceDataOStream : public ObjectDataOStream
     {
     public:
         ObjectInstanceDataOStream( const Object* object );
Index: lib/net/objectVersion.h
===================================================================
--- lib/net/objectVersion.h	(revision 3828)
+++ lib/net/objectVersion.h	(working copy)
@@ -30,12 +30,12 @@
     class Object;
 
     /** A helper struct bundling an object identifier and version. */
-    struct ObjectVersion
+    struct EQ_EXPORT ObjectVersion
     {
-        EQ_EXPORT ObjectVersion();
-        EQ_EXPORT ObjectVersion( const uint32_t id, const uint32_t version );
-        EQ_EXPORT ObjectVersion( const Object* object );
-        EQ_EXPORT ObjectVersion& operator = ( const Object* object );
+        ObjectVersion();
+        ObjectVersion( const uint32_t id, const uint32_t version );
+        ObjectVersion( const Object* object );
+        ObjectVersion& operator = ( const Object* object );
         bool operator == ( const ObjectVersion& value ) const
             { return ( id == value.id && version == value.version ); }
         
Index: lib/net/pairConnection.h
===================================================================
--- lib/net/pairConnection.h	(revision 3828)
+++ lib/net/pairConnection.h	(working copy)
@@ -28,22 +28,22 @@
      * A meta connection consisting of two (unidirectional) connections
      * providing bidirectional communication.
      */
-    class PairConnection : public Connection
+    class EQ_EXPORT PairConnection : public Connection
     {
     public:
-        EQ_EXPORT PairConnection( ConnectionPtr readConnection,
+        PairConnection( ConnectionPtr readConnection,
                                   ConnectionPtr writeConnection );
 
-        EQ_EXPORT ConnectionPtr getSibling();
+        ConnectionPtr getSibling();
 
-        EQ_EXPORT virtual bool connect();
-        EQ_EXPORT virtual void close();
+        virtual bool connect();
+        virtual void close();
 
         virtual Notifier getNotifier() const
             { return _readConnection->getNotifier(); }
 
     protected:
-        EQ_EXPORT virtual ~PairConnection();
+        virtual ~PairConnection();
 
         virtual void readNB( void* buffer, const uint64_t bytes )
             { _readConnection->readNB( buffer, bytes ); }
Index: lib/net/pipeConnection.h
===================================================================
--- lib/net/pipeConnection.h	(revision 3828)
+++ lib/net/pipeConnection.h	(working copy)
@@ -37,7 +37,7 @@
      * therefore only be used between related threads. A PairConnection can be
      * used to create a bi-directional communication using two pipe connections.
      */
-    class PipeConnection 
+    class EQ_EXPORT PipeConnection 
 #ifdef WIN32
         : public Connection
 #else
@@ -46,9 +46,9 @@
     {
     public:
         /** Construct a new pipe connection. */
-        EQ_EXPORT PipeConnection();
+        PipeConnection();
         /** Destruct this pipe connection. */
-        EQ_EXPORT virtual ~PipeConnection();
+        virtual ~PipeConnection();
 
         virtual bool connect();
         virtual void close();
Index: lib/net/session.h
===================================================================
--- lib/net/session.h	(revision 3828)
+++ lib/net/session.h	(working copy)
@@ -44,14 +44,14 @@
      * A received SessionPacket is dispatched to the locally-mapped session of
      * the same identifier.
      */
-    class Session : public Dispatcher
+    class EQ_EXPORT Session : public Dispatcher
     {
     public:
         /** Construct a new session. */
-        EQ_EXPORT Session();
+        Session();
 
         /** Destruct this session. */
-        EQ_EXPORT virtual ~Session();
+        virtual ~Session();
 
         /** @name Data Access */
         //@{
@@ -68,7 +68,7 @@
          * @return the queue to the command thread of the local node, or 0 if
          *         the session is not mapped.
          */
-        EQ_EXPORT CommandQueue* getCommandThreadQueue();
+        CommandQueue* getCommandThreadQueue();
 
         /** @return the server hosting this session, or 0 if the session is not
          *          mapped.. */
@@ -89,7 +89,7 @@
          * @return true if the command was dispatched, false otherwise.
          * @sa Dispatcher::dispatchCommand
          */
-        EQ_EXPORT virtual bool dispatchCommand( Command& packet );
+        virtual bool dispatchCommand( Command& packet );
 
         /** 
          * Invokes the registered handler method for a command packet.
@@ -101,7 +101,7 @@
          * @return the result of the operation.
          * @sa Dispatcher::invokeCommand
          */
-        EQ_EXPORT virtual CommandResult invokeCommand( Command& packet );
+        virtual CommandResult invokeCommand( Command& packet );
         //@}
 
 
@@ -127,7 +127,7 @@
          *         continous block of identifiers for the request is available.
          * @sa base::IDPool
          */
-        EQ_EXPORT uint32_t genIDs( const uint32_t range );
+        uint32_t genIDs( const uint32_t range );
 
         /** 
          * Free a continous block of unique identifiers.
@@ -138,7 +138,7 @@
          * @param start the first identifier in the block.
          * @param range the size of the block.
          */
-        EQ_EXPORT void freeIDs( const uint32_t start, const uint32_t range );
+        void freeIDs( const uint32_t start, const uint32_t range );
 
         /** 
          * Set the master node for an identifier.
@@ -154,14 +154,14 @@
          * @param id the identifier.
          * @param master the master node for the block of identifiers.
          */
-        EQ_EXPORT void setIDMaster( const uint32_t id, const NodeID& master );
+        void setIDMaster( const uint32_t id, const NodeID& master );
 
         /** 
          * Delete the master node for an identifiers.
          * 
          * @param id the identifier.
          */
-        EQ_EXPORT void unsetIDMaster( const uint32_t id );
+        void unsetIDMaster( const uint32_t id );
 
         /** 
          * Returns the master node id for an identifier.
@@ -170,7 +170,7 @@
          * @return the master node, or Node::ZERO if no master node is
          *         set for the identifier.
          */
-        EQ_EXPORT const NodeID& getIDMaster( const uint32_t id );
+        const NodeID& getIDMaster( const uint32_t id );
         //@}
 
 
@@ -190,14 +190,14 @@
          * @param object the object instance.
          * @return true if the object was registered, false otherwise.
          */
-        EQ_EXPORT bool registerObject( Object* object );
+        bool registerObject( Object* object );
 
         /** 
          * Deregister a distributed object.
          *
          * @param object the object instance.
          */
-        EQ_EXPORT void deregisterObject( Object* object );
+        void deregisterObject( Object* object );
 
         /** 
          * Map a distributed object.
@@ -230,21 +230,21 @@
          *         available.
          * @sa registerObject
          */
-        EQ_EXPORT bool mapObject( Object* object, const uint32_t id, 
+        bool mapObject( Object* object, const uint32_t id, 
                                   const uint32_t version = VERSION_OLDEST );
 
         /** Start mapping a distributed object. */
-        EQ_EXPORT uint32_t mapObjectNB( Object* object, const uint32_t id, 
+        uint32_t mapObjectNB( Object* object, const uint32_t id, 
                                       const uint32_t version = VERSION_OLDEST );
         /** Finalize the mapping of a distributed object. */
-        EQ_EXPORT bool mapObjectSync( const uint32_t requestID );
+        bool mapObjectSync( const uint32_t requestID );
 
         /** 
          * Unmap a mapped object.
          * 
          * @param object the mapped object.
          */
-        EQ_EXPORT void unmapObject( Object* object );
+        void unmapObject( Object* object );
 
         /** 
          * Attach an object to an identifier.
@@ -258,7 +258,7 @@
          * @param instanceID the node-local instance identifier, or
          *                   EQ_ID_INVALID if this method should generate one.
          */
-        EQ_EXPORT void attachObject( Object* object, const uint32_t id, 
+        void attachObject( Object* object, const uint32_t id, 
                            const uint32_t instanceID );
 
         /** 
@@ -266,7 +266,7 @@
          * 
          * @param object the attached object.
          */
-        EQ_EXPORT void detachObject( Object* object );
+        void detachObject( Object* object );
         //@}
 
 
@@ -280,7 +280,7 @@
          *
          * @param node the node to which the session has been mapped.
          */
-        EQ_EXPORT virtual void notifyMapped( NodePtr node );
+        virtual void notifyMapped( NodePtr node );
         //@}
 
     protected:
Index: lib/net/socketConnection.h
===================================================================
--- lib/net/socketConnection.h	(revision 3828)
+++ lib/net/socketConnection.h	(working copy)
@@ -34,7 +34,7 @@
 namespace net
 {
     /** A socket connection (TCPIP or SDP). */
-    class SocketConnection
+    class EQ_EXPORT SocketConnection
 #ifdef WIN32
         : public Connection
 #else
Index: lib/util/accum.h
===================================================================
--- lib/util/accum.h	(revision 3828)
+++ lib/util/accum.h	(working copy)
@@ -37,14 +37,14 @@
      * Remark: MacOS systems seem to have a buggy implementation of glAccum(),
      * and use a workaround which needs setTotalSteps().
      */
-    class Accum
+    class EQ_EXPORT Accum
     {
     public: 
         /** Construct a new accumulation buffer */
-        EQ_EXPORT Accum( GLEWContext* const glewContext );
+        Accum( GLEWContext* const glewContext );
 
         /** Destruct the accumulation buffer */
-        EQ_EXPORT ~Accum();
+        ~Accum();
 
         /**
          * Inits the accumulation object.
@@ -52,12 +52,12 @@
          * @param pvp the pixel viewport.
          * @param textureFormat the texture format.
          */
-        EQ_EXPORT bool init( const PixelViewport& pvp, GLuint textureFormat );
+        bool init( const PixelViewport& pvp, GLuint textureFormat );
 
         /**
          * Exits the accum object.
          */
-        EQ_EXPORT void exit();
+        void exit();
 
         /**
          * Resizes the accumulation object.
@@ -66,22 +66,22 @@
          * @param height the new height.
          * @return true if the accumulation object is correctly resized.
          */
-        EQ_EXPORT bool resize( const int width, const int height );
+        bool resize( const int width, const int height );
 
         /**
          * Clears the accumulation object.
          */
-        EQ_EXPORT void clear();
+        void clear();
 
         /**
          * Accumulates a frame into the accumulation object.
          */
-        EQ_EXPORT void accum();
+        void accum();
 
         /**
          * Displays the result of the accumulation object.
          */
-        EQ_EXPORT void display();
+        void display();
 
         /**
          * Get the number of maximum steps possible to do during the
@@ -89,14 +89,14 @@
          *
          * @return the maximum number of steps.
          */
-        EQ_EXPORT uint32_t getMaxSteps() const;
+        uint32_t getMaxSteps() const;
 
         /**
          * Get the current number of accumulations done.
          *
          * @return the number of steps done.
          */
-        EQ_EXPORT uint32_t getNumSteps() const { return _numSteps; }
+        uint32_t getNumSteps() const { return _numSteps; }
 
         /**
          * Set the total steps that will be used.
@@ -106,9 +106,9 @@
          *
          * @param totalSteps the total number of steps to do.
          */
-        EQ_EXPORT void setTotalSteps( uint32_t totalSteps )
+        void setTotalSteps( uint32_t totalSteps )
             { _totalSteps = totalSteps; }
-        EQ_EXPORT uint32_t getTotalSteps() { return _totalSteps; }
+        uint32_t getTotalSteps() { return _totalSteps; }
 
         /**
          * Tests if the accumulation uses the FBO implementation.
@@ -116,7 +116,7 @@
          * @return true if the accumulation uses an FBO, false if it uses
          *         glAccum().
          */
-        EQ_EXPORT bool usesFBO() const;
+        bool usesFBO() const;
 
         GLEWContext* glewGetContext() { return _glewContext; }
         const GLEWContext* glewGetContext() const { return _glewContext; }
Index: lib/util/accumBufferObject.h
===================================================================
--- lib/util/accumBufferObject.h	(revision 3828)
+++ lib/util/accumBufferObject.h	(working copy)
@@ -31,14 +31,14 @@
      * A class to emulate an OpenGL accumulation buffer using an FBO. 
      * @sa glAccum()
      */
-    class AccumBufferObject : public FrameBufferObject
+    class EQ_EXPORT AccumBufferObject : public FrameBufferObject
     {
     public: 
         /** Construct a new Accumulation Buffer Object */
-        EQ_EXPORT AccumBufferObject( GLEWContext* const glewContext );
+        AccumBufferObject( GLEWContext* const glewContext );
 
         /** Destruct the Accumulation Buffer Object */
-        EQ_EXPORT ~AccumBufferObject();
+        ~AccumBufferObject();
 
         /**
          * Initialize the Accumulation Buffer Object.
@@ -50,11 +50,11 @@
          * @return true on success, false otherwise
          * @sa Window::getColorFormat(), glReadBuffer()
          */
-        EQ_EXPORT bool init( const int width, const int height,
+        bool init( const int width, const int height,
                              GLuint format );
 
         /** De-initialize the Accumulation Buffer Object. */
-        EQ_EXPORT void exit();
+        void exit();
 
         /**
          * Load the current read buffer into the accumulation buffer.
@@ -64,7 +64,7 @@
          * @param value a floating-point value multiplying the source values
          *              during the load operation.
          */
-        EQ_EXPORT void load( GLfloat value );
+        void load( GLfloat value );
 
         /**
          * Accumulate the current read buffer into the accumulation buffer.
@@ -74,7 +74,7 @@
          * @param value a floating-point value multiplying the source values
          *              during the accum operation.
          */
-        EQ_EXPORT void accum( GLfloat value );
+        void accum( GLfloat value );
 
         /**
          * Transfers accumulation buffer values to the write buffer.
@@ -83,7 +83,7 @@
          * @param value a floating-point value multiplying the accumulation
          *              values during the operation.
          */
-        EQ_EXPORT void display( GLfloat value );
+        void display( GLfloat value );
 
     private:
         /**
Index: lib/util/bitmapFont.h
===================================================================
--- lib/util/bitmapFont.h	(revision 3828)
+++ lib/util/bitmapFont.h	(working copy)
@@ -32,18 +32,18 @@
     template< typename T > class ObjectManager;
 
     /** A wrapper around AGL, WGL and GLX bitmap fonts. */
-    template< typename OMT > class BitmapFont
+    template< typename OMT > class EQ_EXPORT BitmapFont
     {
     public:
         /** Construct a new bitmap font. */
-        EQ_EXPORT BitmapFont( ObjectManager< OMT >& gl, const OMT& key );
-        EQ_EXPORT ~BitmapFont();
+        BitmapFont( ObjectManager< OMT >& gl, const OMT& key );
+        ~BitmapFont();
 
         // needs current context or XGetCurrentDisplay()
-        EQ_EXPORT bool init( const WindowSystem ws, const std::string& name,
+        bool init( const WindowSystem ws, const std::string& name,
                              const uint32_t size = 12 );
-        EQ_EXPORT void exit();
-        EQ_EXPORT void draw( const std::string& text ) const;
+        void exit();
+        void draw( const std::string& text ) const;
 
     private:
         ObjectManager< OMT > _gl;
Index: lib/util/frameBufferObject.h
===================================================================
--- lib/util/frameBufferObject.h	(revision 3828)
+++ lib/util/frameBufferObject.h	(working copy)
@@ -31,14 +31,14 @@
 namespace util
 {
     /** A C++ class to abstract OpenGL frame buffer objects */
-    class FrameBufferObject 
+    class EQ_EXPORT FrameBufferObject 
     {
     public: 
         /** Construct a new Frame Buffer Object */
-        EQ_EXPORT FrameBufferObject( GLEWContext* const glewContext );
+        FrameBufferObject( GLEWContext* const glewContext );
 
         /** Destruct the Frame Buffer Object */
-        EQ_EXPORT ~FrameBufferObject();
+        ~FrameBufferObject();
 
         /**
          * Set format for all color textures, if desired format differs from the
@@ -46,7 +46,7 @@
          *
          * @param format new format of color texture
          */
-        EQ_EXPORT void setColorFormat( const GLuint format );
+        void setColorFormat( const GLuint format );
 
         /**
          * Add one color texture to the FBO.
@@ -58,7 +58,7 @@
          *
          * @return false if color texture can't be added, otherwise true
          */
-        EQ_EXPORT bool addColorTexture();
+        bool addColorTexture();
 
         /**
          * Initialize the Frame Buffer Object
@@ -70,24 +70,24 @@
          * @return true on success, false otherwise
          * @sa resize(), getErrorMessage()
          */
-        EQ_EXPORT bool init( const int width, const int height, 
+        bool init( const int width, const int height, 
                              const int depthSize, const int stencilSize );
 
         /** De-initialize the Frame Buffer Object. */
-        EQ_EXPORT void exit();
+        void exit();
 
         /**
          * Bind to the Frame Buffer Object as the read and draw buffer of the
          * current context.
          * @sa getErrorMessage()
          */
-        EQ_EXPORT void bind();
+        void bind();
 
         /**
          * Unbind any Frame Buffer Object and use the default drawable for the
          * current context.
          */
-        EQ_EXPORT void unbind();
+        void unbind();
 
         /**
          * Resize the FBO.
@@ -97,7 +97,7 @@
          * @return true on success, false on error.
          * @sa getErrorMessage()
          */
-        EQ_EXPORT bool resize( const int width, const int height );
+        bool resize( const int width, const int height );
 
         /** @return the color textures. */
         const TextureVector& getColorTextures() const { return _colors; }
@@ -112,7 +112,7 @@
         const std::string& getErrorMessage() { return _error; }
 
         /** @return the size of this framebuffer object. */
-        EQ_EXPORT PixelViewport getPixelViewport() const;
+        PixelViewport getPixelViewport() const;
 
         GLEWContext* glewGetContext() { return _glewContext; }
         const GLEWContext* glewGetContext() const { return _glewContext; }
Index: lib/util/objectManager.h
===================================================================
--- lib/util/objectManager.h	(revision 3828)
+++ lib/util/objectManager.h	(working copy)
@@ -49,7 +49,7 @@
      * delete - delete.
      */
     template< typename T >
-    class ObjectManager : public base::NonCopyable
+    class EQ_EXPORT ObjectManager : public base::NonCopyable
     {
     public:
         enum
@@ -58,68 +58,68 @@
         };
 
         /** Construct a new object manager. */
-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext );
+        ObjectManager( GLEWContext* const glewContext );
 
         /** Construct a new object manager sharing data with another manager. */
-        EQ_EXPORT ObjectManager( GLEWContext* const glewContext,
+        ObjectManager( GLEWContext* const glewContext,
                                  ObjectManager* shared );
 
-        EQ_EXPORT virtual ~ObjectManager();
+        virtual ~ObjectManager();
 
         /** @return the number of object managers currently sharing the data. */
         int getSharedUsage() const { return _data->getRefCount(); }
 
-        EQ_EXPORT void deleteAll();
+        void deleteAll();
 
-        EQ_EXPORT GLuint getList( const T& key ) const;
-        EQ_EXPORT GLuint newList( const T& key, const GLsizei num = 1 );
-        EQ_EXPORT GLuint obtainList( const T& key, const GLsizei num = 1 );
-        EQ_EXPORT void   deleteList( const T& key );
+        GLuint getList( const T& key ) const;
+        GLuint newList( const T& key, const GLsizei num = 1 );
+        GLuint obtainList( const T& key, const GLsizei num = 1 );
+        void   deleteList( const T& key );
 
-        EQ_EXPORT GLuint getTexture( const T& key ) const;
-        EQ_EXPORT GLuint newTexture( const T& key );
-        EQ_EXPORT GLuint obtainTexture( const T& key );
-        EQ_EXPORT void   deleteTexture( const T& key );
+        GLuint getTexture( const T& key ) const;
+        GLuint newTexture( const T& key );
+        GLuint obtainTexture( const T& key );
+        void   deleteTexture( const T& key );
 
-        EQ_EXPORT bool   supportsBuffers() const;
-        EQ_EXPORT GLuint getBuffer( const T& key ) const;
-        EQ_EXPORT GLuint newBuffer( const T& key );
-        EQ_EXPORT GLuint obtainBuffer( const T& key );
-        EQ_EXPORT void   deleteBuffer( const T& key );
+        bool   supportsBuffers() const;
+        GLuint getBuffer( const T& key ) const;
+        GLuint newBuffer( const T& key );
+        GLuint obtainBuffer( const T& key );
+        void   deleteBuffer( const T& key );
 
-        EQ_EXPORT bool   supportsPrograms() const;
-        EQ_EXPORT GLuint getProgram( const T& key ) const;
-        EQ_EXPORT GLuint newProgram( const T& key );
-        EQ_EXPORT GLuint obtainProgram( const T& key );
-        EQ_EXPORT void   deleteProgram( const T& key );
+        bool   supportsPrograms() const;
+        GLuint getProgram( const T& key ) const;
+        GLuint newProgram( const T& key );
+        GLuint obtainProgram( const T& key );
+        void   deleteProgram( const T& key );
 
-        EQ_EXPORT bool   supportsShaders() const;
-        EQ_EXPORT GLuint getShader( const T& key ) const;
-        EQ_EXPORT GLuint newShader( const T& key, const GLenum type );
-        EQ_EXPORT GLuint obtainShader( const T& key, const GLenum type );
-        EQ_EXPORT void   deleteShader( const T& key );
+        bool   supportsShaders() const;
+        GLuint getShader( const T& key ) const;
+        GLuint newShader( const T& key, const GLenum type );
+        GLuint obtainShader( const T& key, const GLenum type );
+        void   deleteShader( const T& key );
 
-        EQ_EXPORT Accum* getEqAccum( const T& key ) const;
-        EQ_EXPORT Accum* newEqAccum( const T& key );
-        EQ_EXPORT Accum* obtainEqAccum( const T& key );
-        EQ_EXPORT void deleteEqAccum( const T& key );
+        Accum* getEqAccum( const T& key ) const;
+        Accum* newEqAccum( const T& key );
+        Accum* obtainEqAccum( const T& key );
+        void deleteEqAccum( const T& key );
 
-        EQ_EXPORT bool     supportsEqTexture() const;
-        EQ_EXPORT Texture* getEqTexture( const T& key ) const;
-        EQ_EXPORT Texture* newEqTexture( const T& key );
-        EQ_EXPORT Texture* obtainEqTexture( const T& key );
-        EQ_EXPORT void     deleteEqTexture( const T& key );
+        bool     supportsEqTexture() const;
+        Texture* getEqTexture( const T& key ) const;
+        Texture* newEqTexture( const T& key );
+        Texture* obtainEqTexture( const T& key );
+        void     deleteEqTexture( const T& key );
 
-        EQ_EXPORT bool               supportsEqFrameBufferObject() const;
-        EQ_EXPORT FrameBufferObject* getEqFrameBufferObject(const T& key) const;
-        EQ_EXPORT FrameBufferObject* newEqFrameBufferObject( const T& key );
-        EQ_EXPORT FrameBufferObject* obtainEqFrameBufferObject( const T& key );
-        EQ_EXPORT void               deleteEqFrameBufferObject( const T& key );
+        bool               supportsEqFrameBufferObject() const;
+        FrameBufferObject* getEqFrameBufferObject(const T& key) const;
+        FrameBufferObject* newEqFrameBufferObject( const T& key );
+        FrameBufferObject* obtainEqFrameBufferObject( const T& key );
+        void               deleteEqFrameBufferObject( const T& key );
 
-        EQ_EXPORT util::BitmapFont< T >* getEqBitmapFont( const T& key ) const;
-        EQ_EXPORT util::BitmapFont< T >* newEqBitmapFont( const T& key );
-        EQ_EXPORT util::BitmapFont< T >* obtainEqBitmapFont( const T& key );
-        EQ_EXPORT void                   deleteEqBitmapFont( const T& key );
+        util::BitmapFont< T >* getEqBitmapFont( const T& key ) const;
+        util::BitmapFont< T >* newEqBitmapFont( const T& key );
+        util::BitmapFont< T >* obtainEqBitmapFont( const T& key );
+        void                   deleteEqBitmapFont( const T& key );
 
         const GLEWContext* glewGetContext() const { return _glewContext; }
         GLEWContext* glewGetContext()             { return _glewContext; }
Index: lib/util/texture.h
===================================================================
--- lib/util/texture.h	(revision 3828)
+++ lib/util/texture.h	(working copy)
@@ -37,24 +37,24 @@
      * So far used by the Image and Compositor. The target is assumed to be
      * GL_TEXTURE_RECTANGLE_ARB.
      */
-    class Texture : public base::NonCopyable
+    class EQ_EXPORT Texture : public base::NonCopyable
     {
     public:
         /** Construct a new Texture. */
-        EQ_EXPORT Texture( GLEWContext* const glewContext = 0 );
-        EQ_EXPORT virtual ~Texture();
+        Texture( GLEWContext* const glewContext = 0 );
+        virtual ~Texture();
 
         /** Clear the texture, including the GL texture name. */
-        EQ_EXPORT void flush();
+        void flush();
 
         /** Set the target of the texture. */
-        EQ_EXPORT void setTarget( const GLenum target );
+        void setTarget( const GLenum target );
 
         /** @return the target of the texture. */
         GLenum getTarget() const { return _target; }
 
         /** Set the internal format of the texture. */
-        EQ_EXPORT void setFormat( const GLuint format );
+        void setFormat( const GLuint format );
 
         /** @return the internal format of the texture. */
         GLuint getFormat() const { return _internalFormat; }
@@ -63,39 +63,39 @@
          * Copy the specified area from the current read buffer to the
          * texture at 0,0.
          */
-        EQ_EXPORT void copyFromFrameBuffer( const PixelViewport& pvp );
+        void copyFromFrameBuffer( const PixelViewport& pvp );
 
         /** Copy the specified image buffer to the texture at 0,0. */
-        EQ_EXPORT void upload( const Image* image, const Frame::Buffer which );
+        void upload( const Image* image, const Frame::Buffer which );
 
         /** Copy the specified buffer to the texture at 0,0. */
-        EQ_EXPORT void upload( const int width, const int height, void* ptr );
+        void upload( const int width, const int height, void* ptr );
 
         /** Copy the texture data to the given memory address. */
-        EQ_EXPORT void download( void* buffer, const uint32_t format, 
+        void download( void* buffer, const uint32_t format, 
                                  const uint32_t type ) const;
 
         /**
          * Copy the texture data to the given memory address, using the internal
          * format and type.
          */
-        EQ_EXPORT void download( void* buffer ) const;
+        void download( void* buffer ) const;
 
         /** Bind the texture. */
-        EQ_EXPORT void bind() const;
+        void bind() const;
 
         /** Create and bind a texture to the current FBO. */
-        EQ_EXPORT void bindToFBO( const GLenum target, const int width,
+        void bindToFBO( const GLenum target, const int width,
                                   const int height );
 
         /** Resize the texture. */
-        EQ_EXPORT void resize( const int width, const int height );
+        void resize( const int width, const int height );
 
         /** @return true if the texture can be bound. */
-        EQ_EXPORT bool isValid() const;
+        bool isValid() const;
 
         /** Writes the texture data as a rgb image file. */
-        EQ_EXPORT void writeTexture( const std::string& filename,
+        void writeTexture( const std::string& filename,
                                      const eq::Frame::Buffer buffer,
                                      const PixelViewport& pvp ) const;
 
Index: server/canvas.h
===================================================================
--- server/canvas.h	(revision 3828)
+++ server/canvas.h	(working copy)
@@ -38,13 +38,13 @@
     /**
      * The canvas. @sa eq::Canvas
      */
-    class Canvas : public eq::Frustum
+    class EQSERVER_EXPORT Canvas : public eq::Frustum
     {
     public:
         /** 
          * Constructs a new Canvas.
          */
-        EQSERVER_EXPORT Canvas();
+        Canvas();
 
         /** Creates a new, deep copy of a canvas. */
         Canvas( const Canvas& from, Config* config );
@@ -60,7 +60,7 @@
         const Config* getConfig() const { return _config; }
 
         /** Add a new segment to this canvas. */
-        EQSERVER_EXPORT void addSegment( Segment* segment );
+        void addSegment( Segment* segment );
         
         /** @return the vector of child segments. */
         const SegmentVector& getSegments() const { return _segments; }
@@ -78,7 +78,7 @@
         Segment* getSegment( const SegmentPath& path );
 
         /** Add a new allowed layout to this canvas, can be 0. */
-        EQSERVER_EXPORT void addLayout( Layout* layout );
+        void addLayout( Layout* layout );
 
         /** Get the vector of allowed layouts for this canvas. */
         const LayoutVector& getLayouts() const { return _layouts; }
Index: server/canvasVisitor.h
===================================================================
--- server/canvasVisitor.h	(revision 3828)
+++ server/canvasVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_CANVASVISITOR_H
 
 #include "segmentVisitor.h" // base class
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -29,7 +30,7 @@
     /**
      * A visitor to traverse non-const canvases and children.
      */
-    class CanvasVisitor : public SegmentVisitor
+    class EQSERVER_EXPORT CanvasVisitor : public SegmentVisitor
     {
     public:
         /** Constructs a new CanvasVisitor. */
@@ -50,7 +51,7 @@
     /**
      * A visitor to traverse const canvases and children.
      */
-    class ConstCanvasVisitor : public ConstSegmentVisitor
+    class EQSERVER_EXPORT ConstCanvasVisitor : public ConstSegmentVisitor
     {
     public:
         /** Constructs a new CanvasVisitor. */
Index: server/channel.h
===================================================================
--- server/channel.h	(revision 3828)
+++ server/channel.h	(working copy)
@@ -52,7 +52,7 @@
     /**
      * The channel.
      */
-    class Channel : public net::Object
+    class EQSERVER_EXPORT Channel : public net::Object
     {
     public:
         enum State
@@ -70,7 +70,7 @@
         /** 
          * Constructs a new Channel.
          */
-        EQSERVER_EXPORT Channel();
+        Channel();
 
         /** 
          * Constructs a new deep copy of a channel.
@@ -92,8 +92,8 @@
         Config* getConfig();
         const Config* getConfig() const;
 
-        EQSERVER_EXPORT Node* getNode();
-        EQSERVER_EXPORT const Node* getNode() const;
+        Node* getNode();
+        const Node* getNode() const;
 
         Pipe* getPipe();
         const Pipe* getPipe() const;
@@ -115,8 +115,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ChannelVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstChannelVisitor& ) const;
+        VisitorResult accept( ChannelVisitor& visitor );
+        VisitorResult accept( ConstChannelVisitor& ) const;
 
         /** Increase channel activition count. */
         void activate();
Index: server/channelUpdateVisitor.h
===================================================================
--- server/channelUpdateVisitor.h	(revision 3828)
+++ server/channelUpdateVisitor.h	(working copy)
@@ -24,6 +24,7 @@
 #include <eq/client/eye.h>
 #include <eq/client/os.h>
 #include <eq/client/renderContext.h>
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -35,7 +36,7 @@
     /**
      * The compound visitor generating the draw tasks for a channel.
      */
-    class ChannelUpdateVisitor : public ConstCompoundVisitor
+    class EQSERVER_EXPORT ChannelUpdateVisitor : public ConstCompoundVisitor
     {
     public:
         ChannelUpdateVisitor( Channel* channel, const uint32_t frameID, 
Index: server/colorMask.h
===================================================================
--- server/colorMask.h	(revision 3828)
+++ server/colorMask.h	(working copy)
@@ -30,7 +30,7 @@
     /**
      * Extends eq::Colormask with functionality needed only by the server.
      */
-    class ColorMask : public eq::ColorMask
+    class EQSERVER_EXPORT ColorMask : public eq::ColorMask
     {
     public:
         ColorMask(){}
Index: server/compound.h
===================================================================
--- server/compound.h	(revision 3828)
+++ server/compound.h	(working copy)
@@ -52,13 +52,13 @@
     /**
      * The compound.
      */
-    class Compound
+    class EQSERVER_EXPORT Compound
     {
     public:
         /** 
          * Constructs a new Compound.
          */
-        EQSERVER_EXPORT Compound();
+        Compound();
 
         /**
          * Constructs a new, deep copy of the passed compound
@@ -114,7 +114,7 @@
          * 
          * @param child the child.
          */
-        EQSERVER_EXPORT void addChild( Compound* child );
+        void addChild( Compound* child );
 
         /** 
          * Removes a child from this compound.
@@ -123,7 +123,7 @@
          * @return <code>true</code> if the child was removed, 
          *         <code>false</code> otherwise.
          */
-        EQSERVER_EXPORT bool removeChild( Compound* child );
+        bool removeChild( Compound* child );
 
         /** @return if the compound is a leaf compound. */
         bool isLeaf() const { return _children.empty(); }
@@ -163,7 +163,7 @@
          * 
          * @param channel the channel.
          */
-        EQSERVER_EXPORT void setChannel( Channel* channel );
+        void setChannel( Channel* channel );
 
         /** 
          * Return the channel of this compound.
@@ -173,8 +173,8 @@
          *
          * @return the channel of this compound.
          */
-        EQSERVER_EXPORT Channel* getChannel();
-        EQSERVER_EXPORT const Channel* getChannel() const;
+        Channel* getChannel();
+        const Channel* getChannel() const;
 
         Window* getWindow();
         const Window* getWindow() const;
@@ -186,7 +186,7 @@
         Frustum& getFrustum() { return _frustum; }
 
         /** Attach a load balancer to this compound. */
-        EQSERVER_EXPORT void addEqualizer( Equalizer* equalizer );
+        void addEqualizer( Equalizer* equalizer );
 
         /** Get the attached load balancers. */
         const EqualizerVector& getEqualizers() const
@@ -286,7 +286,7 @@
          *
          * @param frame the input frame.
          */
-        EQSERVER_EXPORT void addInputFrame( Frame* frame );
+        void addInputFrame( Frame* frame );
 
         /** @return the vector of input frames. */
         const FrameVector& getInputFrames() const {return _inputFrames; }
@@ -296,7 +296,7 @@
          *
          * @param frame the output frame.
          */
-        EQSERVER_EXPORT void addOutputFrame( Frame* frame );
+        void addOutputFrame( Frame* frame );
 
         /** @return the vector of output frames. */
         const FrameVector& getOutputFrames() const { return _outputFrames; }
@@ -352,7 +352,7 @@
          * 
          * @param wall the wall description.
          */
-        EQSERVER_EXPORT void setWall( const eq::Wall& wall );
+        void setWall( const eq::Wall& wall );
         
         /** @return the last specified wall description. */
         const eq::Wall& getWall() const { return _frustum.getWall(); }
@@ -362,7 +362,7 @@
          * 
          * @param projection the projection description.
          */
-        EQSERVER_EXPORT void setProjection( const eq::Projection& projection );
+        void setProjection( const eq::Projection& projection );
 
         /** @return the last specified projection description. */
         const eq::Projection& getProjection() const 
@@ -408,10 +408,10 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ConstCompoundVisitor& visitor )
+        VisitorResult accept( ConstCompoundVisitor& visitor )
                                           const;
         /** Non-const version of accept(). */
-        EQSERVER_EXPORT VisitorResult accept( CompoundVisitor& visitor );
+        VisitorResult accept( CompoundVisitor& visitor );
 
 
         /** Activate the compound tree. */
Index: server/compoundExitVisitor.h
===================================================================
--- server/compoundExitVisitor.h	(revision 3828)
+++ server/compoundExitVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_COMPOUNDEXITVISITOR_H
 
 #include "compoundVisitor.h" // base class
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -29,7 +30,7 @@
     /**
      * The compound visitor exitializing a compound tree.
      */
-    class CompoundExitVisitor : public CompoundVisitor
+    class EQSERVER_EXPORT CompoundExitVisitor : public CompoundVisitor
     {
     public:
         CompoundExitVisitor();
Index: server/compoundInitVisitor.h
===================================================================
--- server/compoundInitVisitor.h	(revision 3828)
+++ server/compoundInitVisitor.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * The compound visitor initializing a compound tree.
      */
-    class CompoundInitVisitor : public CompoundVisitor
+    class EQSERVER_EXPORT CompoundInitVisitor : public CompoundVisitor
     {
     public:
         CompoundInitVisitor();
Index: server/compoundUpdateDataVisitor.h
===================================================================
--- server/compoundUpdateDataVisitor.h	(revision 3828)
+++ server/compoundUpdateDataVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_COMPOUNDUPDATEDATAVISITOR_H
 
 #include "compoundVisitor.h" // base class
+#include <eq/base/base.h>
 #include "types.h"
 
 namespace eq
@@ -30,7 +31,7 @@
     /**
      * The compound visitor updating the inherit data of a compound tree.
      */
-    class CompoundUpdateDataVisitor : public CompoundVisitor
+    class EQSERVER_EXPORT CompoundUpdateDataVisitor : public CompoundVisitor
     {
     public:
         CompoundUpdateDataVisitor( const uint32_t frameNumber );
Index: server/compoundUpdateInputVisitor.h
===================================================================
--- server/compoundUpdateInputVisitor.h	(revision 3828)
+++ server/compoundUpdateInputVisitor.h	(working copy)
@@ -21,6 +21,7 @@
 #include "compoundVisitor.h" // base class
 
 #include <eq/base/hash.h>
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -32,7 +33,7 @@
     /**
      * The compound visitor updating the inherit input of a compound tree.
      */
-    class CompoundUpdateInputVisitor : public CompoundVisitor
+    class EQSERVER_EXPORT CompoundUpdateInputVisitor : public CompoundVisitor
     {
     public:
         CompoundUpdateInputVisitor( 
Index: server/compoundUpdateOutputVisitor.h
===================================================================
--- server/compoundUpdateOutputVisitor.h	(revision 3828)
+++ server/compoundUpdateOutputVisitor.h	(working copy)
@@ -20,6 +20,7 @@
 
 #include "compoundVisitor.h" // base class
 #include "compound.h"        // nested type
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -31,7 +32,7 @@
      * The compound visitor updating the output data (frames, swapbarriers) of a
      * compound tree.
      */
-    class CompoundUpdateOutputVisitor : public CompoundVisitor
+    class EQSERVER_EXPORT CompoundUpdateOutputVisitor : public CompoundVisitor
     {
     public:
         CompoundUpdateOutputVisitor( const uint32_t frameNumber );
Index: server/compoundVisitor.h
===================================================================
--- server/compoundVisitor.h	(revision 3828)
+++ server/compoundVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_COMPOUNDVISITOR_H
 
 #include "visitorResult.h"  // enum
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -29,7 +30,7 @@
     /**
      * A visitor to traverse a non-const compound tree.
      */
-    class CompoundVisitor
+    class EQSERVER_EXPORT CompoundVisitor
     {
     public:
         /** Constructs a new CompoundVisitor. */
Index: server/config.h
===================================================================
--- server/config.h	(revision 3828)
+++ server/config.h	(working copy)
@@ -45,13 +45,13 @@
     /**
      * The config.
      */
-    class Config : public net::Session
+    class EQSERVER_EXPORT Config : public net::Session
     {
     public:
         /** 
          * Constructs a new Config.
          */
-        EQSERVER_EXPORT Config();
+        Config();
         virtual ~Config();
 
         /** 
@@ -85,7 +85,7 @@
          * 
          * @param node the node.
          */
-        EQSERVER_EXPORT void addNode( Node* node );
+        void addNode( Node* node );
 
         /** 
          * Removes a node from this config.
@@ -136,7 +136,7 @@
          * 
          * @param layout the layout.
          */
-        EQSERVER_EXPORT void addLayout( Layout* layout );
+        void addLayout( Layout* layout );
 
         /** 
          * Removes a layout from this config.
@@ -178,7 +178,7 @@
          * 
          * @param canvas the canvas.
          */
-        EQSERVER_EXPORT void addCanvas( Canvas* canvas );
+        void addCanvas( Canvas* canvas );
 
         /** 
          * Removes a canvas from this config.
@@ -217,7 +217,7 @@
          * 
          * @param compound the compound.
          */
-        EQSERVER_EXPORT void addCompound( Compound* compound );
+        void addCompound( Compound* compound );
 
         /** 
          * Removes a compound from this config.
@@ -226,7 +226,7 @@
          * @return <code>true</code> if the compound was removed,
          *         <code>false</code> otherwise.
          */
-       EQSERVER_EXPORT bool removeCompound( Compound* compound );
+       bool removeCompound( Compound* compound );
 
         /** @return the vecotr of compounds. */
         const CompoundVector& getCompounds() const { return _compounds; }
@@ -238,7 +238,7 @@
          * @return the first channel with the name, or <code>0</code> if no
          *         channel with the name exists.
          */
-        EQSERVER_EXPORT Channel* findChannel( const std::string& name );
+        Channel* findChannel( const std::string& name );
         const Channel* findChannel( const std::string& name ) const;
 
         /** 
@@ -248,7 +248,7 @@
          * @param view the view.
          * @return the channel for updating the view/segment intersection.
          */
-        EQSERVER_EXPORT Channel* findChannel( const Segment* segment, const View* view );
+        Channel* findChannel( const Segment* segment, const View* view );
 
         /** 
          * Traverse this config and all children using a config visitor.
@@ -256,7 +256,7 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ConfigVisitor& visitor );
+        VisitorResult accept( ConfigVisitor& visitor );
         VisitorResult accept( ConstConfigVisitor& visitor ) const;
         //@}
 
Index: server/configSerializer.h
===================================================================
--- server/configSerializer.h	(revision 3828)
+++ server/configSerializer.h	(working copy)
@@ -31,7 +31,7 @@
      * Serializes all data for a Config, which is a net::Session and can't be a
      * net::Object at the same time.
      */
-    class ConfigSerializer : public net::Object
+    class EQSERVER_EXPORT ConfigSerializer : public net::Object
     {
     public:
         ConfigSerializer( Config* const config ) : _config( config ) {}
Index: server/configUpdateDataVisitor.h
===================================================================
--- server/configUpdateDataVisitor.h	(revision 3828)
+++ server/configUpdateDataVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_CONFIGUPDATEDATAVISITOR_H
 
 #include "configVisitor.h" // base class
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -27,7 +28,7 @@
     /**
      * The config visitor updating config data after the compound update
      */
-    class ConfigUpdateDataVisitor : public ConfigVisitor
+    class EQSERVER_EXPORT ConfigUpdateDataVisitor : public ConfigVisitor
     {
     public:
         ConfigUpdateDataVisitor();
Index: server/connectionDescription.h
===================================================================
--- server/connectionDescription.h	(revision 3828)
+++ server/connectionDescription.h	(working copy)
@@ -24,10 +24,10 @@
 {
 namespace server
 {
-    class ConnectionDescription : public net::ConnectionDescription
+    class EQSERVER_EXPORT ConnectionDescription : public net::ConnectionDescription
     {
     public:
-        EQSERVER_EXPORT ConnectionDescription();
+        ConnectionDescription();
 
         /**
          * @name Attributes
Index: server/constCompoundVisitor.h
===================================================================
--- server/constCompoundVisitor.h	(revision 3828)
+++ server/constCompoundVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_CONSTCOMPOUNDVISITOR_H
 
 #include "visitorResult.h"  // enum
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -29,7 +30,7 @@
     /**
      * A visitor to traverse a const compound tree.
      */
-    class ConstCompoundVisitor
+    class EQSERVER_EXPORT ConstCompoundVisitor
     {
     public:
         /** Constructs a new CompoundVisitor. */
Index: server/equalizers/equalizer.h
===================================================================
--- server/equalizers/equalizer.h	(revision 3828)
+++ server/equalizers/equalizer.h	(working copy)
@@ -33,7 +33,7 @@
      * frame. It has to subscribe to the statistics events needed to perform its
      * tasks itself.
      */
-    class Equalizer : protected CompoundListener
+    class EQSERVER_EXPORT Equalizer : protected CompoundListener
     {
     public:
         Equalizer();
Index: server/equalizers/framerateEqualizer.h
===================================================================
--- server/equalizers/framerateEqualizer.h	(revision 3828)
+++ server/equalizers/framerateEqualizer.h	(working copy)
@@ -37,10 +37,10 @@
      * Does not support period settings underneath a child. One channel should
      * not be used in compounds with a different inherit period.
      */
-    class FramerateEqualizer : public Equalizer
+    class EQSERVER_EXPORT FramerateEqualizer : public Equalizer
     {
     public:
-        EQSERVER_EXPORT FramerateEqualizer();
+        FramerateEqualizer();
         FramerateEqualizer( const FramerateEqualizer& from );
         virtual ~FramerateEqualizer();
         virtual Equalizer* clone() const
Index: server/equalizers/loadEqualizer.h
===================================================================
--- server/equalizers/loadEqualizer.h	(revision 3828)
+++ server/equalizers/loadEqualizer.h	(working copy)
@@ -36,10 +36,10 @@
     std::ostream& operator << ( std::ostream& os, const LoadEqualizer* );
 
     /** Adapts the 2D tiling or DB range of the attached compound's children. */
-    class LoadEqualizer : public Equalizer, protected ChannelListener
+    class EQSERVER_EXPORT LoadEqualizer : public Equalizer, protected ChannelListener
     {
     public:
-        EQSERVER_EXPORT LoadEqualizer();
+        LoadEqualizer();
         LoadEqualizer( const LoadEqualizer& from );
         virtual ~LoadEqualizer();
         virtual Equalizer* clone() const { return new LoadEqualizer( *this ); }
Index: server/equalizers/viewEqualizer.h
===================================================================
--- server/equalizers/viewEqualizer.h	(revision 3828)
+++ server/equalizers/viewEqualizer.h	(working copy)
@@ -38,10 +38,10 @@
      * An Equalizer allocating resources to multiple destination channels of a
      * single view.
      */
-    class ViewEqualizer : public Equalizer
+    class EQSERVER_EXPORT ViewEqualizer : public Equalizer
     {
     public:            
-        EQSERVER_EXPORT ViewEqualizer();
+        ViewEqualizer();
         ViewEqualizer( const ViewEqualizer& from );
         virtual ~ViewEqualizer();
         virtual Equalizer* clone() const { return new ViewEqualizer(*this); }
Index: server/frame.h
===================================================================
--- server/frame.h	(revision 3828)
+++ server/frame.h	(working copy)
@@ -34,13 +34,13 @@
     /**
      * A holder for frame data and parameters.
      */
-    class Frame : public net::Object
+    class EQSERVER_EXPORT Frame : public net::Object
     {
     public:
         /** 
          * Constructs a new Frame.
          */
-        EQSERVER_EXPORT Frame();
+        Frame();
         Frame( const Frame& from );
 
         /**
@@ -113,7 +113,7 @@
         void commitData();
 
         /** Commit the frame */
-        EQSERVER_EXPORT virtual uint32_t commit();
+        virtual uint32_t commit();
 
         /** 
          * Cycle the current FrameData.
@@ -180,11 +180,11 @@
         //@}
         
     protected:
-        EQSERVER_EXPORT virtual ~Frame();
-        EQSERVER_EXPORT virtual ChangeType getChangeType() const 
+        virtual ~Frame();
+        virtual ChangeType getChangeType() const 
                                                             { return INSTANCE; }
-        EQSERVER_EXPORT virtual void getInstanceData( net::DataOStream& os );
-        EQSERVER_EXPORT virtual void applyInstanceData( net::DataIStream& is );
+        virtual void getInstanceData( net::DataOStream& os );
+        virtual void applyInstanceData( net::DataIStream& is );
 
     private:
         /** The parent compound. */
Index: server/frameData.h
===================================================================
--- server/frameData.h	(revision 3828)
+++ server/frameData.h	(working copy)
@@ -28,7 +28,7 @@
     /**
      * A holder for a Frame Data and parameters.
      */
-    class FrameData : public net::Object
+    class EQSERVER_EXPORT FrameData : public net::Object
     {
     public:
         /** 
Index: server/frustum.h
===================================================================
--- server/frustum.h	(revision 3828)
+++ server/frustum.h	(working copy)
@@ -29,7 +29,7 @@
     /** 
      * Extends the eq::Frustum to update server-side generic frustum data.
      */
-    class Frustum : public eq::Frustum
+    class EQSERVER_EXPORT Frustum : public eq::Frustum
     {
     public:
         Frustum( FrustumData& data );
Index: server/layout.h
===================================================================
--- server/layout.h	(revision 3828)
+++ server/layout.h	(working copy)
@@ -36,13 +36,13 @@
     /**
      * The layout. @sa eq::Layout
      */
-    class Layout : public eq::Object
+    class EQSERVER_EXPORT Layout : public eq::Object
     {
     public:
         /** 
          * Constructs a new Layout.
          */
-        EQSERVER_EXPORT Layout();
+        Layout();
 
         /** Creates a new, deep copy of a layout. */
         Layout( const Layout& from, Config* config );
@@ -55,7 +55,7 @@
          */
         //@{
         /** Add a new view to this layout. */
-        EQSERVER_EXPORT void addView( View* view );
+        void addView( View* view );
         
         /** remove the view from this layout. */
         bool removeView( View* view );
Index: server/layoutVisitor.h
===================================================================
--- server/layoutVisitor.h	(revision 3828)
+++ server/layoutVisitor.h	(working copy)
@@ -29,7 +29,7 @@
     /**
      * A visitor to traverse non-const layouts and children.
      */
-    class LayoutVisitor : public ViewVisitor
+    class EQSERVER_EXPORT LayoutVisitor : public ViewVisitor
     {
     public:
         /** Constructs a new LayoutVisitor. */
@@ -50,7 +50,7 @@
     /**
      * A visitor to traverse const layouts and children.
      */
-    class ConstLayoutVisitor : public ConstViewVisitor
+    class EQSERVER_EXPORT ConstLayoutVisitor : public ConstViewVisitor
     {
     public:
         /** Constructs a new LayoutVisitor. */
Index: server/node.h
===================================================================
--- server/node.h	(revision 3828)
+++ server/node.h	(working copy)
@@ -41,7 +41,7 @@
     /**
      * The node.
      */
-    class Node : public net::Object
+    class EQSERVER_EXPORT Node : public net::Object
     {
     public:
         enum State
@@ -59,7 +59,7 @@
         /** 
          * Constructs a new Node.
          */
-        EQSERVER_EXPORT Node();
+        Node();
 
         /** 
          * Constructs a new deep copy of a node.
@@ -98,7 +98,7 @@
          * 
          * @param pipe the pipe.
          */
-        EQSERVER_EXPORT void addPipe( Pipe* pipe );
+        void addPipe( Pipe* pipe );
 
         /** 
          * Removes a pipe from this node.
@@ -269,7 +269,7 @@
          * @return true if the connection description was removed, false
          *         otherwise.
          */
-        EQSERVER_EXPORT bool removeConnectionDescription(
+        bool removeConnectionDescription(
             ConnectionDescriptionPtr cd );
 
         /** @return the vector of connection descriptions. */
Index: server/pipe.h
===================================================================
--- server/pipe.h	(revision 3828)
+++ server/pipe.h	(working copy)
@@ -41,7 +41,7 @@
     /**
      * The pipe.
      */
-    class Pipe : public net::Object
+    class EQSERVER_EXPORT Pipe : public net::Object
     {
     public:
         enum State
@@ -59,7 +59,7 @@
         /** 
          * Constructs a new Pipe.
          */
-        EQSERVER_EXPORT Pipe();
+        Pipe();
 
         /** 
          * Constructs a new deep copy of a pipe.
@@ -91,7 +91,7 @@
          * 
          * @param window the window.
          */
-        EQSERVER_EXPORT void addWindow( Window* window );
+        void addWindow( Window* window );
 
         /** 
          * Removes a window from this config.
Index: server/segment.h
===================================================================
--- server/segment.h	(revision 3828)
+++ server/segment.h	(working copy)
@@ -34,13 +34,13 @@
     /**
      * The segment. @sa eq::Segment
      */
-    class Segment : public eq::Segment
+    class EQSERVER_EXPORT Segment : public eq::Segment
     {
     public:
         /** 
          * Constructs a new Segment.
          */
-        EQSERVER_EXPORT Segment();
+        Segment();
 
         /** Creates a new, deep copy of a segment. */
         Segment( const Segment& from, Config* config );
@@ -88,7 +88,7 @@
          * 
          * @param vp the fractional viewport.
          */
-        EQSERVER_EXPORT void setViewport( const eq::Viewport& vp );
+        void setViewport( const eq::Viewport& vp );
 
         /** @return the segment's viewport. */
         const eq::Viewport& getViewport() const { return _vp; }
Index: server/segmentVisitor.h
===================================================================
--- server/segmentVisitor.h	(revision 3828)
+++ server/segmentVisitor.h	(working copy)
@@ -19,6 +19,7 @@
 #define EQSERVER_SEGMENTVISITOR_H
 
 #include "visitorResult.h"  // enum
+#include <eq/base/base.h>
 
 namespace eq
 {
@@ -29,7 +30,7 @@
     /**
      * A visitor to traverse non-const segments.
      */
-    class SegmentVisitor
+    class EQSERVER_EXPORT SegmentVisitor
     {
     public:
         /** Constructs a new SegmentVisitor. */
@@ -46,7 +47,7 @@
     /**
      * A visitor to traverse const segments.
      */
-    class ConstSegmentVisitor
+    class EQSERVER_EXPORT ConstSegmentVisitor
     {
     public:
         /** Constructs a new SegmentVisitor. */
Index: server/server.h
===================================================================
--- server/server.h	(revision 3828)
+++ server/server.h	(working copy)
@@ -46,13 +46,13 @@
     /**
      * The Equalizer server.
      */
-    class Server : public net::Node
+    class EQSERVER_EXPORT Server : public net::Node
     {
     public:
         /** 
          * Constructs a new Server.
          */
-        EQSERVER_EXPORT Server();
+        Server();
 
         /** 
          * Runs the server.
@@ -60,7 +60,7 @@
          * @return <code>true</code> if the server did run successfully,
          *         <code>false</code> if not.
          */
-        EQSERVER_EXPORT bool run();
+        bool run();
 
         void registerConfig( Config* config );
         
@@ -69,7 +69,7 @@
          * 
          * @param config the config.
          */
-        EQSERVER_EXPORT void addConfig( Config* config );
+        void addConfig( Config* config );
 
         /** 
          * Remove a config from this config.
@@ -93,8 +93,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( ServerVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstServerVisitor& ) const;
+        VisitorResult accept( ServerVisitor& visitor );
+        VisitorResult accept( ConstServerVisitor& ) const;
 
         /** @return the global time in milliseconds. */
         int64_t getTime() const { return _clock.getTime64(); }
Index: server/swapBarrier.h
===================================================================
--- server/swapBarrier.h	(revision 3828)
+++ server/swapBarrier.h	(working copy)
@@ -34,7 +34,7 @@
      * compounds holding a swap barrier with the same name synchronize their
      * window's swap command.
      */
-    class SwapBarrier
+    class EQSERVER_EXPORT SwapBarrier
     {
     public:
         /** 
Index: server/view.h
===================================================================
--- server/view.h	(revision 3828)
+++ server/view.h	(working copy)
@@ -35,10 +35,10 @@
     /** 
      * Extends the eq::View to implement server-side logic.
      */
-    class View : public eq::View
+    class EQSERVER_EXPORT View : public eq::View
     {
     public:
-        EQSERVER_EXPORT View();
+        View();
 
         /** Creates a new, deep copy of a view. */
         View( const View& from, Config* config );
Index: server/window.h
===================================================================
--- server/window.h	(revision 3828)
+++ server/window.h	(working copy)
@@ -48,7 +48,7 @@
     /**
      * The window.
      */
-    class Window : public net::Object
+    class EQSERVER_EXPORT Window : public net::Object
     {
     public:
         enum State
@@ -66,7 +66,7 @@
         /** 
          * Constructs a new Window.
          */
-        EQSERVER_EXPORT Window();
+        Window();
 
         /** 
          * Constructs a new deep copy of a window.
@@ -82,7 +82,7 @@
          * 
          * @param channel the channel.
          */
-        EQSERVER_EXPORT void addChannel( Channel* channel );
+        void addChannel( Channel* channel );
 
         /** 
          * Insert a new channel after the given channel.
@@ -132,8 +132,8 @@
          * @param visitor the visitor.
          * @return the result of the visitor traversal.
          */
-        EQSERVER_EXPORT VisitorResult accept( WindowVisitor& visitor );
-        EQSERVER_EXPORT VisitorResult accept( ConstWindowVisitor& ) const;
+        VisitorResult accept( WindowVisitor& visitor );
+        VisitorResult accept( ConstWindowVisitor& ) const;
 
         /** Increase window activition count. */
         void activate();
@@ -158,7 +158,7 @@
          * 
          * @param pvp the viewport in pixels.
          */
-        EQSERVER_EXPORT void setPixelViewport( const eq::PixelViewport& pvp );
+        void setPixelViewport( const eq::PixelViewport& pvp );
 
         /** 
          * Return this window's pixel viewport.
Index: VS2005/accept.vcproj
===================================================================
--- VS2005/accept.vcproj	(revision 3828)
+++ VS2005/accept.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/affinityCheck.vcproj
===================================================================
--- VS2005/affinityCheck.vcproj	(revision 3828)
+++ VS2005/affinityCheck.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../externals&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/base/refPtr.vcproj
===================================================================
--- VS2005/base/refPtr.vcproj	(revision 3828)
+++ VS2005/base/refPtr.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/compositor.vcproj
===================================================================
--- VS2005/compositor.vcproj	(revision 3828)
+++ VS2005/compositor.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/ConfigTool.vcproj
===================================================================
--- VS2005/ConfigTool.vcproj	(revision 3828)
+++ VS2005/ConfigTool.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -130,7 +130,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -207,7 +207,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -287,7 +287,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;WIN32_VC;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/eqHello.vcproj
===================================================================
--- VS2005/eqHello.vcproj	(revision 3828)
+++ VS2005/eqHello.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/eqPly Example.vcproj
===================================================================
--- VS2005/eqPly Example.vcproj	(revision 3828)
+++ VS2005/eqPly Example.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/Equalizer Server Library.vcproj
===================================================================
--- VS2005/Equalizer Server Library.vcproj	(revision 3828)
+++ VS2005/Equalizer Server Library.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -133,7 +133,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -213,7 +213,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
@@ -298,7 +298,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(ProjectDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_WINDOWS;_USRDLL;EQUALIZERSERVERLIBRARY_EXPORTS"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="2"
Index: VS2005/Equalizer Server.vcproj
===================================================================
--- VS2005/Equalizer Server.vcproj	(revision 3828)
+++ VS2005/Equalizer Server.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/Equalizer.vcproj
===================================================================
--- VS2005/Equalizer.vcproj	(revision 3828)
+++ VS2005/Equalizer.vcproj	(working copy)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="Windows-1252"?>
 <VisualStudioProject
 	ProjectType="Visual C++"
-	Version="8.00"
+	Version="8,00"
 	Name="Equalizer Client Library"
 	ProjectGUID="{21B10D06-2D20-4095-846C-C5F9EDADB6BD}"
 	RootNamespace="Equalizer Client Library"
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -134,7 +134,7 @@
 				PreprocessorDefinitions="WIN32;_DEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -217,7 +217,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(PROGRAMDIR)\Mellanox\MLNX_WinOF\SDK\inc\user&quot;;&quot;$(PROGRAMDIR)\Mellanox\MLNX_WinOF\SDK\inc&quot;;&quot;$(PROGRAMW6432)\Mellanox\MLNX_WinOF\SDK\inc\user&quot;;&quot;$(PROGRAMW6432)\Mellanox\MLNX_WinOF\SDK\inc&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -303,7 +303,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(PROGRAMDIR)\Mellanox\MLNX_WinOF\SDK\inc\user&quot;;&quot;$(PROGRAMDIR)\Mellanox\MLNX_WinOF\SDK\inc&quot;;&quot;$(PROGRAMW6432)\Mellanox\MLNX_WinOF\SDK\inc\user&quot;;&quot;$(PROGRAMW6432)\Mellanox\MLNX_WinOF\SDK\inc&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;NDEBUG;_WINDOWS;_USRDLL;EQUALIZER_EXPORTS;EQ_PLUGIN_BUILD;_CRT_SECURE_NO_DEPRECATE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				OpenMP="true"
 				UsePrecompiledHeader="0"
@@ -7697,7 +7697,7 @@
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
 						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
 					/>
 				</FileConfiguration>
@@ -7706,7 +7706,7 @@
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
 						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
 					/>
 				</FileConfiguration>
@@ -7715,7 +7715,7 @@
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
 						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
 					/>
 				</FileConfiguration>
@@ -7724,7 +7724,7 @@
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
+						CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq/client&quot;  mkdir &quot;$(TargetDir)Headers/eq/client&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;&#x0D;&#x0A;"
 						Outputs="&quot;$(TargetDir)Headers/eq/client/$(InputFileName)&quot;"
 					/>
 				</FileConfiguration>
@@ -9151,46 +9151,6 @@
 			Filter="dll;lib"
 			>
 			<File
-				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
-				>
-				<FileConfiguration
-					Name="Debug|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Debug|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						Description="copying library (x64)"
-						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|Win32"
-					ExcludedFromBuild="true"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-					/>
-				</FileConfiguration>
-				<FileConfiguration
-					Name="Release|x64"
-					>
-					<Tool
-						Name="VCCustomBuildTool"
-						Description="copying library (x64)"
-						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
-						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
-					/>
-				</FileConfiguration>
-			</File>
-			<File
 				RelativePath="..\Windows\pthreads\lib\pthreadVC2.dll"
 				>
 				<FileConfiguration
@@ -9237,7 +9197,7 @@
 				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.dll"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
@@ -9322,6 +9282,46 @@
 					/>
 				</FileConfiguration>
 			</File>
+			<File
+				RelativePath="..\Windows\pthreads\lib64\pthreadVC2.lib"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Debug|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						Description="copying library (x64)"
+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					ExcludedFromBuild="true"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|x64"
+					>
+					<Tool
+						Name="VCCustomBuildTool"
+						Description="copying library (x64)"
+						CommandLine="copy &quot;$(InputPath)&quot; &quot;$(TargetDir)$(InputFileName)&quot;&#x0D;&#x0A;"
+						Outputs="&quot;$(TargetDir)$(InputFileName)&quot;"
+					/>
+				</FileConfiguration>
+			</File>
 		</Filter>
 		<File
 			RelativePath="..\AUTHORS"
@@ -9340,7 +9340,7 @@
 				<Tool
 					Name="VCCustomBuildTool"
 					Description="Copying $(InputFileName)"
-					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
+					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
 					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
 				/>
 			</FileConfiguration>
@@ -9350,7 +9350,7 @@
 				<Tool
 					Name="VCCustomBuildTool"
 					Description="Copying $(InputFileName)"
-					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
+					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
 					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
 				/>
 			</FileConfiguration>
@@ -9360,7 +9360,7 @@
 				<Tool
 					Name="VCCustomBuildTool"
 					Description="Copying $(InputFileName)"
-					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
+					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
 					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
 				/>
 			</FileConfiguration>
@@ -9370,7 +9370,7 @@
 				<Tool
 					Name="VCCustomBuildTool"
 					Description="Copying $(InputFileName)"
-					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
+					CommandLine="If not EXIST &quot;$(TargetDir)Headers/eq&quot;  mkdir &quot;$(TargetDir)Headers/eq&quot;&#x0D;&#x0A;copy &quot;$(InputPath)&quot; &quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;&#x0D;&#x0A;"
 					Outputs="&quot;$(TargetDir)Headers/eq/$(InputFileName)&quot;"
 				/>
 			</FileConfiguration>
Index: VS2005/eVolve.vcproj
===================================================================
--- VS2005/eVolve.vcproj	(revision 3828)
+++ VS2005/eVolve.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/frustumTest.vcproj
===================================================================
--- VS2005/frustumTest.vcproj	(revision 3828)
+++ VS2005/frustumTest.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/image.vcproj
===================================================================
--- VS2005/image.vcproj	(revision 3828)
+++ VS2005/image.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/netPerf.vcproj
===================================================================
--- VS2005/netPerf.vcproj	(revision 3828)
+++ VS2005/netPerf.vcproj	(working copy)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="Windows-1252"?>
 <VisualStudioProject
 	ProjectType="Visual C++"
-	Version="8.00"
+	Version="8,00"
 	Name="NetPerf"
 	ProjectGUID="{891B47F2-0A50-4D42-A724-95886FA1F149}"
 	RootNamespace="NetPerf"
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/netProxy.vcproj
===================================================================
--- VS2005/netProxy.vcproj	(revision 3828)
+++ VS2005/netProxy.vcproj	(working copy)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="Windows-1252"?>
 <VisualStudioProject
 	ProjectType="Visual C++"
-	Version="8.00"
+	Version="8,00"
 	Name="NetProxy"
 	ProjectGUID="{BA9D9327-A284-419A-B5E3-A2EBCD84165E}"
 	RootNamespace="NetProxy"
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../examples/include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/pipePerf.vcproj
===================================================================
--- VS2005/pipePerf.vcproj	(revision 3828)
+++ VS2005/pipePerf.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)..&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
Index: VS2005/pixelBench.vcproj
===================================================================
--- VS2005/pixelBench.vcproj	(revision 3828)
+++ VS2005/pixelBench.vcproj	(working copy)
@@ -48,7 +48,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -132,7 +132,7 @@
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;_DEBUG;_CONSOLE"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
-				RuntimeLibrary="3"
+				RuntimeLibrary="1"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -211,7 +211,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
@@ -293,7 +293,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalIncludeDirectories="&quot;$(InputDir)../include&quot;;&quot;$(InputDir)../../Windows/pthreads/include&quot;;&quot;$(TargetDir)Headers&quot;"
 				PreprocessorDefinitions="WIN32;_CRT_SECURE_NO_DEPRECATE;NDEBUG;_CONSOLE"
-				RuntimeLibrary="2"
+				RuntimeLibrary="0"
 				RuntimeTypeInfo="true"
 				UsePrecompiledHeader="0"
 				WarningLevel="1"
