     * 1. Introduction
          * 1.1. Features
     * 2. New in this release
          * 2.1. New Features
          * 2.2. Enhancements
          * 2.3. Optimizations
          * 2.4. Examples
          * 2.5. Tools
          * 2.6. API Changes
          * 2.7. Documentation
          * 2.8. Bug Fixes
          * 2.9. Known Bugs
     * 3. About
          * 3.1. Operating System Support
          * 3.2. Window System Support
          * 3.3. Documentation
          * 3.4. Support

1. Introduction

   Welcome to Equalizer, the standard middleware to create and deploy
   parallel, scalable OpenGL applications. Equalizer 0.9.1 enables the
   development Equalizer-based applications which do not use OpenGL for
   rendering.

   Equalizer 0.9.1 is a developer release, representing a stable snapshot of
   the development tree after the 0.9 release. Equalizer 0.9.1 can be
   retrieved by updating the subversion trunk to revision TBD (svn up -r TBD)
   or by using:
   svn co
   https://equalizer.svn.sourceforge.net/svnroot/equalizer/tags/release-0.9.1

  1.1. Features

   Equalizer provides the following major features to facilitate the
   development and deployment of scalable OpenGL applications. A detailed
   feature list can be found on the Equalizer website.

     * Runtime Configurability: An Equalizer application is configured at
       runtime and can be deployed on laptops, multi-GPU workstations and
       large-scale visualization clusters without recompilation.
     * Runtime Scalability: An Equalizer application can benefit from
       multiple graphics cards, processors and computers to scale rendering
       performance, visual quality and display size.
     * Distributed Execution: Equalizer applications can be written to
       support cluster-based execution. The task of distributing the
       application data is facilitated by support for versioned, distributed
       objects.
     * Support for Stereo and Immersive Environments: Equalizer supports both
       active and passive stereo rendering, as well as head tracking and
       head-mounted displays used in immersive Virtual Reality installations.

2. New in this release

   Equalizer 0.9.1 contains the following features, enhancements, bug fixes
   and documentation changes:

  2.1. New Features

     * Subpixel Compound for full-scene anti-aliasing (FSAA) or
       depth-of-field (DOF).
     * Initial support for using CUDA in Equalizer applications.
     * Multicast RSP connection and adaptation of netperf.
     * Configurable message pump and new AGL, WGL, GLX message pump headers.
     * Tile and range boundaries in loadEqualizer.
     * Object serialization buffer size is configurable.
     * Textures can be written as RGB image files.
     * Support for RSP and PGM connection types.
     * New class for an accumulation buffer using an FBO.
     * New Infiniband Communication IBAL.
     * Multiple windows on the same pipe can join the same software swap
       barrier.
     * Simple RLE compressor.

  2.2. Enhancements

     * Separation of the OpenGL calls from the generic window class OSWindow
       to implement window systems which use a different renderer.

  2.3. Optimizations

     * Check if textures are power of two or if non power of two textures are
       supported.
     * IDPool has a different behaviour for detecting the errors in the debug
       build and for being as robust as possible in the release build.
     * The number of compression chunks change dynamically.
     * Improve the speed in PGM connection.
     * Optimization of the DELTA objects behaviour.

  2.4. Examples

     * EqPly: added anti-aliasing when the application is idling.
     * EqPly: add a new config showing all features through a layout switch.
     * EqPly: recursively search directories for models.
     * EqPly: switch to faster VBO rendering on OSX.

  2.5. Tools

     * 2.6. API Changes

   The following changes breaking compatibility with Equalizer 0.6 source
   code were made:

     * 2.7. Documentation

   The following documentation has been added or substantially improved since
   the last release:

     * The Programming and User Guide has been extended to TBD pages and TBD
       figures.
     * The Accumulation Buffer Object API has been added to the Programming
       Guide.
     * The Subpixel compound API provides a compound for anti-aliasing.
     * Update of the net::Object documentation.
     * API and file format changes for the launch parameters.
     * GPU computing.
     * Multicast Data Transfer.
     * Infiniband Communication IBAL.

  2.8. Bug Fixes

   Equalizer 0.9.1 includes various bugfixes over the 0.9 release, including
   the following:

     * 2903212: Netperf packet sequence test fail with RSP
     * 2903210: Launching two netperf RSP servers simultaneously fails
     * 2901081: Idle AA jitter needs to account for pixel decomposition
     * 2901080: Idle AA with subpixel compound too blurry
     * 2900350: EqPly idle AA broken with 3-channel.curved.eqc
     * 2894646: Wrong init of _numSteps if FBO is used for accumulation
     * 2894627: _accumBuffer in eqPly::Channel is not resized
     * 2894570: netperf fails with RSPConnection
     * 2886975: RSPConnection connect fails
     * 2882382: FBO windows broken in recent revisions
     * 2874597: Windows XP 64bit build fails in memcpy.h
     * 2874164: Missing header
     * 2873353: Usage of ext/hash_map and -Werror causes compiler error
     * 2834063: eqPly and eVolve freezes on Mac with glx
     * 2828269: eVolve depth compositing is broken
     * 2827694: Optimization for delta objects
     * 2822348: No latency when event-driven

  2.9. Known Bugs

   The following bugs were known at release time. Please file a Bug Report if
   you find any other issue with this release.

     * 2912051: RSP timeout handling
     * 2911293: RSP crash
     * 2910791: RSP clean exit
     * 2908701: EqPly idle AA broken with eye compound
     * 2882248: Spurious deadlocks on Win32
     * 2874188: Lockup at shutdown
     * 2843849: 64-bit bug in eVolveConverter
     * 2796444: Race during simultaneous node connect
     * 2642034: Win32: max 64 connections possible
     * 2609161: zoom: depth readback does not work
     * 2556940: zoom: FBO usage
     * 2003195: Ortho frustra ignores eye offset
     * 1854948: eVolve: lighting ignores head transformation
     * 1854929: eqPly GLSL shader has artefacts

3. About

   Equalizer is a cross-platform toolkit, designed to run on any modern
   operating system, including all Unix variants and the Windows operating
   system. A compatibility matrix can be found on the Equalizer website.

   Equalizer requires at least OpenGL 1.1, but uses newer OpenGL features
   when available. Version 0.9 has been tested on:

  3.1. Operating System Support

     * Linux: Ubuntu 8.04, 9.04 (i386)
     * Windows: XP with Visual Studio 2005 (i386, x64)
     * Mac OS X: 10.5 (PowerPC, i386)

  3.2. Window System Support

     * X11: Full support for all documented features.
     * WGL: Full support for all documented features.
     * AGL: Full support for all documented features.

  3.3. Documentation

   The Programming and User Guide is available as a hard-copy and online. API
   documentation can be found on the Equalizer website.

   As with any open source project, the available source code, in particular
   the shipped examples provide a reference for developing or porting
   applications. The Developer Documentation on the website provides further
   design documents for specific features.

  3.4. Support

   Technical questions can be posted to the Developer Mailing List, or
   directly to info@equalizergraphics.com.

   Commercial support, custom software development and porting services are
   available from Eyescale. Please contact info@eyescale.ch for further
   information.
