//Generated file - Edit client/rbInfoFragmentShader.glsl!
static const std::string rbInfoFragmentShader_glsl = "/* Copyright (c) 2009       Maxim Makhinya\n    All rights reserved. */\n \n uniform sampler2DRect depth;\n \n void main(void)\n {\n \n     float min = 1.0;\n     float max = 0.0;\n     float bg  = 0.0;\n \n     vec2  pos = gl_TexCoord[0].st;\n     pos *= vec2(16,16);\n \n     float xs = 16.0;\n     float ys = 16.0;\n \n     for( float y = .0; y < 16.0; y+=1.0 )\n     {\n         for( float x = .0; x < 16.0; x+=1.0 )\n         {\n             float s = texture2DRect( depth, pos + vec2( x, y )).x;\n \n             if( s == 1.0 )\n                 bg += (1.0/256.0);\n             else\n             {\n                 min = s;\n                 max = s;\n                 xs  = x + 1.0;\n                 ys  = y;\n                 x   = 16.0;\n                 y   = 16.0;\n             }\n         }\n     }\n \n     for( float y = ys; y < 16.0; y+=1.0 )\n     {\n         for( float x = xs; x < 16.0; x+=1.0 )\n         {\n             float s = texture2DRect( depth, pos + vec2( x, y )).x;\n \n             if( s != 1.0 )\n             {\n                 if( s > max )\n                     max = s;\n                 else\n                     if( s < min )\n                         min = s;\n             }else\n                 bg += (1.0/256.0);\n         }\n         xs = .0;\n     }\n \n     gl_FragColor.r = min;\n     gl_FragColor.g = max;\n     gl_FragColor.b = bg;\n     gl_FragColor.a = 0.0;\n }\n ";
